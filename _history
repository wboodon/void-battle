{"entries":[{"timestamp":1760707403520,"editorVersion":"2.0.59","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":2109,"diffs":[[1," "]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":158,"length1":145,"diffs":[[1,"        \"assets.json\"\n"]]},{"start1":219,"length1":45,"diffs":[[1,"    \"languageRestriction\": \"javascript-only\",\n    \"additionalFilePaths\": []\n"]]}]},{"type":"added","filename":"tilemap.g.jres","value":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"level1\": {\n        \"id\": \"level1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAwYzAwMDgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"sprites.dungeon.floorLight2\"\n        ],\n        \"displayName\": \"level1\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}"},{"type":"added","filename":"tilemap.g.ts","value":"// Auto-generated code. Do not edit.\nnamespace myTiles {\n    //% fixedInstance jres blockIdentity=images._tile\n    export const transparency16 = image.ofBuffer(hex``);\n\n    helpers._registerFactory(\"tilemap\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n            case \"level1\":\n            case \"level1\":return tiles.createTilemap(hex`0c000800000000000000000000000000000000000000000000000000000000000000000001010100000000000000000001010100000000000000000001010100000101010000000000000000000101010000000000000000000101010000000000000000`, img`\n. . . . . . . . . . . . \n. . . . . . . . . . . . \n. . . . . . . . . . . . \n. . . . . . . . . . . . \n. . . . . . . . . . . . \n. . . . . . . . . . . . \n. . . . . . . . . . . . \n. . . . . . . . . . . . \n`, [myTiles.transparency16,sprites.dungeon.floorLight2], TileScale.Sixteen);\n        }\n        return null;\n    })\n\n    helpers._registerFactory(\"tile\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n            case \"transparency16\":return transparency16;\n        }\n        return null;\n    })\n\n}\n// Auto-generated code. Do not edit.\n"},{"type":"added","filename":"images.g.jres","value":"{\n    \"image1\": {\n        \"data\": \"hwQUABQAAAAAu7u7u7u7u7sAAACwHREREREREdELAADb0bu7u7u7ux29AAAbvczMzMzMzNuxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAbvczMzMzMzNuxAADb0bu7u7u7ux29AACwHREREREREdELAAAAu7u7u7u7u7sAAAA=\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"selectedItemFrame\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}"},{"type":"added","filename":"images.g.ts","value":"// Auto-generated code. Do not edit.\nnamespace myImages {\n\n    helpers._registerFactory(\"image\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n            case \"image1\":\n            case \"selectedItemFrame\":return img`\n..bbbbbbbbbbbbbbbb..\n.bd11111111111111db.\nbd1dbbbbbbbbbbbbd1db\nb1dbccccccccccccbd1b\nb1bccccccccccccccb1b\nb1bccccccccccccccb1b\nb1bccccccccccccccb1b\nb1bccccccccccccccb1b\nb1bccccccccccccccb1b\nb1bccccccccccccccb1b\nb1bccccccccccccccb1b\nb1bccccccccccccccb1b\nb1bccccccccccccccb1b\nb1bccccccccccccccb1b\nb1bccccccccccccccb1b\nb1bccccccccccccccb1b\nb1dbccccccccccccbd1b\nbd1dbbbbbbbbbbbbd1db\n.bd11111111111111db.\n..bbbbbbbbbbbbbbbb..\n`;\n        }\n        return null;\n    })\n\n    helpers._registerFactory(\"animation\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n\n        }\n        return null;\n    })\n\n    helpers._registerFactory(\"song\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n\n        }\n        return null;\n    })\n\n}\n// Auto-generated code. Do not edit.\n"},{"type":"added","filename":"voidbattle.ts","value":"enum Direction {\n    Left = 0,\n    Up = 1,\n    Right = 2,\n    Down = 3\n}\n\nnamespace VoidBattle {\n    // should allow you to change the sprite's animation based on its direction\n    export class DirectionalAnimation extends animation.SpriteAnimation {\n        constructor(frameInterval: number, frames: Image[]) {\n\n        }\n        //constructor(frameInterval: number, )\n    }\n    export class VBSprite extends sprites.ExtendableSprite {\n        \n    }\n}"}]},{"timestamp":1760714206542,"editorVersion":"2.0.59","changes":[{"type":"edited","filename":"voidbattle.ts","patch":[{"start1":74,"length1":798,"diffs":[[1,""]]},{"start1":97,"length1":49,"diffs":[[1,""]]},{"start1":177,"length1":253,"diffs":[[1,"    export class DirectionalAnimation extends animation.SpriteAnimation {\n        constructor(frameInterval: number, frames: Image[]) {\n"]]},{"start1":314,"length1":146,"diffs":[[1,""]]},{"start1":324,"length1":1047,"diffs":[[1,""]]},{"start1":377,"length1":2,"diffs":[[1,""]]},{"start1":438,"length1":241,"diffs":[[1,""]]},{"start1":447,"length1":1,"diffs":[[1,""]]}]}]},{"timestamp":1760721972804,"editorVersion":"2.0.59","changes":[{"type":"edited","filename":"voidbattle.ts","patch":[{"start1":869,"length1":0,"diffs":[[1,"}\n"]]},{"start1":872,"length1":370,"diffs":[[1,"namespace VoidBattle {\n"]]},{"start1":1181,"length1":37,"diffs":[[1,"        sprite: VBSprite;\n"]]},{"start1":1277,"length1":44,"diffs":[[1,""]]},{"start1":1278,"length1":51,"diffs":[[1,"        constructor(sprite: VBSprite) {\n"]]},{"start1":1453,"length1":34,"diffs":[[1,"            if(!stateMachines) {\n"]]},{"start1":1894,"length1":70,"diffs":[[1,"                        if(sm.sprite.flags & sprites.Flag.Destroyed)\n"]]},{"start1":2186,"length1":0,"diffs":[[1,"        // i hate that i have to do it this way because there's no way to check\n        // if an animation has finished \n"]]},{"start1":2326,"length1":141,"diffs":[[1,"            \n"]]},{"start1":2481,"length1":529,"diffs":[[1,""]]},{"start1":2535,"length1":2,"diffs":[[1,""]]},{"start1":2536,"length1":23,"diffs":[[1,""]]},{"start1":2597,"length1":45,"diffs":[[1,"        sm: AnimationStateMachine;\n"]]},{"start1":2727,"length1":65,"diffs":[[1,"            this.sm = new AnimationStateMachine(this);\n"]]}]}]},{"timestamp":1760731230915,"editorVersion":"2.0.59","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":74,"diffs":[[1,"tiles.setCurrentTilemap(tilemap`level1`)\r\nscene.centerCameraAt(96, 68)\r\n"]]},{"start1":74,"length1":32,"diffs":[[1,"let isP1Turn: boolean = false\r\n"]]},{"start1":107,"length1":50,"diffs":[[1,"let player1Sprite = sprites.create(img`\r\n"]]},{"start1":740,"length1":444,"diffs":[[1,"`, SpriteKind.Player)\r\ntiles.placeOnTile(player1Sprite, tiles.getTileLocation(1, 7))\r\n"]]},{"start1":830,"length1":50,"diffs":[[1,"let player2Sprite = sprites.create(img`\r\n"]]},{"start1":1463,"length1":445,"diffs":[[1,"`, SpriteKind.Player)\r\ntiles.placeOnTile(player2Sprite, tiles.getTileLocation(10, 2))\r\n"]]},{"start1":1596,"length1":166,"diffs":[[1,"    screen.drawLine(0, 0, 160, 0, isP1Turn ? 4 : 9)\r\n    screen.fillRect(0, 1, 160, 22, isP1Turn ? 2 : 6)\r\n    screen.drawLine(0, 23, 160, 23, isP1Turn ? 14 : 8)\r\n"]]},{"start1":1761,"length1":148,"diffs":[[1,"    screen.drawTransparentImage(assets.image`selectedItemFrame`, 2, 2)\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 138, 2)\r\n"]]},{"start1":1909,"length1":74,"diffs":[[1,"    screen.print(\"P\" + (isP1Turn ? \"1\" : \"2\") + \" Turn\", 60, 5, 1)\r\n})\r\n"]]},{"start1":1983,"length1":691,"diffs":[[1,""]]},{"start1":2081,"length1":277,"diffs":[[1,"    isP1Turn = !isP1Turn\r\n})"]]}]},{"type":"edited","filename":"images.g.jres","patch":[{"start1":459,"length1":6314,"diffs":[[1,""]]}]},{"type":"edited","filename":"images.g.ts","patch":[{"start1":813,"length1":8846,"diffs":[[1,"\n"]]}]},{"type":"edited","filename":"voidbattle.ts","patch":[{"start1":1526,"length1":28,"diffs":[[1,""]]},{"start1":2671,"length1":276,"diffs":[[1,"            if(this.lastAction != this.sprite._action) {\n                \n"]]},{"start1":3170,"length1":15,"diffs":[[1,""]]},{"start1":3325,"length1":79,"diffs":[[1,"            if (anims.length == 1)\n"]]},{"start1":3406,"length1":36,"diffs":[[1,"            \n"]]},{"start1":3510,"length1":25,"diffs":[[1,""]]},{"start1":3616,"length1":115,"diffs":[[1,"        constructor(spriteImage: Image, kind?: number) {\n"]]},{"start1":3822,"length1":53,"diffs":[[1,""]]},{"start1":3832,"length1":117,"diffs":[[1,""]]},{"start1":3841,"length1":624,"diffs":[[1,""]]}]}]},{"timestamp":1760738681404,"editorVersion":"2.0.59","changes":[{"type":"edited","filename":"voidbattle.ts","patch":[{"start1":1526,"length1":45,"diffs":[[1,"        lastDir: Direction;\n"]]},{"start1":2880,"length1":158,"diffs":[[1,"                this.getAnimationFromState(this.lastAction).runAnimationOnSprite(this.sprite);\n"]]},{"start1":3400,"length1":0,"diffs":[[1,"            if\n"]]},{"start1":4238,"length1":108,"diffs":[[1,"                this.dir = dir;\n"]]},{"start1":5037,"length1":372,"diffs":[[1,""]]}]}]},{"timestamp":1760746872200,"editorVersion":"2.0.59","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":76,"length1":31,"diffs":[[1,"let isP1Turn: boolean = false;\r\n"]]},{"start1":110,"length1":56,"diffs":[[1,"let player1Sprite = new VoidBattle.VBSprite(img`\r\n"]]},{"start1":752,"length1":58,"diffs":[[1,"`, SpriteKind.Player);\r\n"]]},{"start1":1196,"length1":98,"diffs":[[1,""]]},{"start1":1198,"length1":56,"diffs":[[1,"\r\nlet player2Sprite = new VoidBattle.VBSprite(img`\r\n"]]},{"start1":1842,"length1":60,"diffs":[[1,"`, SpriteKind.Player);\r\n"]]},{"start1":2287,"length1":98,"diffs":[[1,""]]},{"start1":2651,"length1":70,"diffs":[[1,"    screen.print(\"P\" + (isP1Turn ? \"1\" : \"2\") + \" Turn\", 60, 5, 1);\r\n"]]},{"start1":2727,"length1":26,"diffs":[[1,"const directionButtons = [ControllerButton.Left, ControllerButton.Up, ControllerButton.Right, ControllerButton.Down];\r\nconst directions = [Direction.Left, Direction.Up, Direction.Right, Direction.Down];\r\n\r\nfor(let i = 0; i < 4; ++i) {\r\n    controller.player1.onButtonEvent(directionButtons[i], ControllerButtonEvent.Pressed, function() {\r\n        if (!isP1Turn)\r\n            return;\r\n        player1Sprite.move(directions[i]);\r\n        switchTurn();\r\n    });\r\n\r\n    controller.player2.onButtonEvent(directionButtons[i], ControllerButtonEvent.Pressed, function () {\r\n        if (isP1Turn)\r\n            return;\r\n        player2Sprite.move(directions[i]);\r\n        switchTurn();\r\n    });\r\n}\r\n\r\ncontroller.player1.onButtonEvent(ControllerButton.A, ControllerButtonEvent.Pressed, function() {\r\n    if (!isP1Turn)\r\n        return;\r\n    switchTurn();\r\n});\r\n\r\ncontroller.player2.onButtonEvent(ControllerButton.A, ControllerButtonEvent.Pressed, function () {\r\n    if (isP1Turn)\r\n        return;\r\n    switchTurn();\r\n});\r\n\r\nfunction switchTurn() {\r\n    isP1Turn = !isP1Turn;\r\n}"]]}]},{"type":"edited","filename":"tilemap.g.jres","patch":[{"start1":392,"length1":468,"diffs":[[1,"        \"data\": \"MTAwYzAwMDgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA==\",\n"]]}]},{"type":"edited","filename":"tilemap.g.ts","patch":[{"start1":304,"length1":514,"diffs":[[1,"            case \"level1\":return tiles.createTilemap(hex`0c000800000000000000000000000000000000000000000000000000000000000000000001010100000000000000000001010100000000000000000001010100000101010000000000000000000101010000000000000000000101010000000000000000`, img`\n. . . . . . . . . . . . \n. . . . . . . . . . . . \n. . . . . . . . . . . . \n. . . . . . . . . . . . \n. . . . . . . . . . . . \n. . . . . . . . . . . . \n. . . . . . . . . . . . \n. . . . . . . . . . . . \n"]]}]},{"type":"edited","filename":"voidbattle.ts","patch":[{"start1":4578,"length1":106,"diffs":[[1,"            let x: number = 0, y: number = 0\n            \n"]]},{"start1":4698,"length1":84,"diffs":[[1,"                    x = -tileSize;\n"]]},{"start1":4795,"length1":83,"diffs":[[1,"                    y = -tileSize;\n"]]},{"start1":4895,"length1":85,"diffs":[[1,"                    x = tileSize;\n"]]},{"start1":4993,"length1":86,"diffs":[[1,"                    y = tileSize;\n"]]},{"start1":5068,"length1":13,"diffs":[[1,""]]},{"start1":5104,"length1":185,"diffs":[[1,"            this.x += x;\n            this.y += y;\n"]]},{"start1":5230,"length1":137,"diffs":[[1,""]]},{"start1":5375,"length1":79,"diffs":[[1,"            \n            ctrl.onButtonEvent(ControllerButton.Left, ControllerButtonEvent.Pressed, function(dir: Direction = Direction.Left) {\n"]]},{"start1":5518,"length1":375,"diffs":[[1,""]]},{"start1":5534,"length1":824,"diffs":[[1,""]]},{"start1":5544,"length1":1495,"diffs":[[1,""]]}]}]},{"timestamp":1760754394873,"editorVersion":"2.0.59","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1333,"length1":228,"diffs":[[1,""]]},{"start1":2101,"length1":283,"diffs":[[1,"    new animation.Animation(assets.animation`heroWalkLeft`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkBack`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkRight`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkFront`, 200, true)\r\n"]]},{"start1":2562,"length1":229,"diffs":[[1,""]]},{"start1":2776,"length1":198,"diffs":[[1,""]]},{"start1":2926,"length1":69,"diffs":[[1,"    screen.print(\"Pp\" + (isP1Turn ? \"1\" : \"2\") + \" Turn\", 60, 5, 1);\r\n"]]}]},{"type":"edited","filename":"images.g.jres","patch":[{"start1":2,"length1":301,"diffs":[[1,""]]},{"start1":18,"length1":352,"diffs":[[1,"        \"data\": \"hwQUABQAAAAAu7u7u7u7u7sAAACwHREREREREdELAADb0bu7u7u7ux29AAAbvczMzMzMzNuxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAbvczMzMzMzNuxAADb0bu7u7u7ux29AACwHREREREREdELAAAAu7u7u7u7u7sAAAA=\",\n"]]},{"start1":6773,"length1":7883,"diffs":[[1,""]]}]},{"type":"edited","filename":"images.g.ts","patch":[{"start1":165,"length1":599,"diffs":[[1,""]]},{"start1":304,"length1":294,"diffs":[[1,"b1dbccccccccccccbd1b\nb1bccccccccccccccb1b\nb1bccccccccccccccb1b\nb1bccccccccccccccb1b\nb1bccccccccccccccb1b\nb1bccccccccccccccb1b\nb1bccccccccccccccb1b\nb1bccccccccccccccb1b\nb1bccccccccccccccb1b\nb1bccccccccccccccb1b\nb1bccccccccccccccb1b\nb1bccccccccccccccb1b\nb1bccccccccccccccb1b\nb1dbccccccccccccbd1b\n"]]},{"start1":9659,"length1":11048,"diffs":[[1,""]]}]},{"type":"edited","filename":"voidbattle.ts","patch":[{"start1":4059,"length1":38,"diffs":[[1,""]]},{"start1":4411,"length1":13,"diffs":[[1,""]]},{"start1":4422,"length1":462,"diffs":[[1,""]]},{"start1":4538,"length1":66,"diffs":[[1,"        \n        move(dir: Direction) {\n"]]},{"start1":4684,"length1":27,"diffs":[[1,"            switch(dir){\n"]]},{"start1":5316,"length1":142,"diffs":[[1,"            \n"]]},{"start1":5762,"length1":101,"diffs":[[1,""]]},{"start1":7580,"length1":62,"diffs":[[1,"            if(!this.isMyTurn) return;\n"]]},{"start1":8659,"length1":84,"diffs":[[1,""]]},{"start1":8672,"length1":602,"diffs":[[1,""]]}]}]},{"timestamp":1760762033789,"editorVersion":"2.0.59","changes":[{"type":"edited","filename":"images.g.ts","patch":[{"start1":19364,"length1":198,"diffs":[[1,". . 4 a a a c c c c a a a 4 . . \n. . 4 4 a a a a a a a a 4 4 . . \n. . 4 4 4 9 6 b b 6 9 4 4 4 . . \n. . 4 4 4 1 7 d d 7 1 4 4 4 . . \n. . . 4 4 d d d d d d 4 4 . . . \n. . . b e f b b b b f e b . . . \n"]]}]}]},{"timestamp":1760809310389,"editorVersion":"2.0.59","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":2617,"length1":64,"diffs":[[1,"tiles.placeOnTile(player2Sprite, tiles.getTileLocation(10, 2));\r\n"]]}]},{"type":"edited","filename":"images.g.jres","patch":[{"start1":760,"length1":285,"diffs":[[1,""]]}]},{"type":"edited","filename":"images.g.ts","patch":[{"start1":1263,"length1":485,"diffs":[[1,""]]}]},{"type":"edited","filename":"voidbattle.ts","patch":[{"start1":3887,"length1":386,"diffs":[[1,""]]},{"start1":4096,"length1":69,"diffs":[[1,""]]},{"start1":4209,"length1":40,"diffs":[[1,""]]},{"start1":5905,"length1":182,"diffs":[[1,"        move(dir: Direction) {\n"]]},{"start1":5999,"length1":89,"diffs":[[1,"            this.setDirection(dir);\n"]]},{"start1":6092,"length1":73,"diffs":[[1,"                scene.cameraShake(2, 200)\n            } else {\n                tiles.placeOnTile(this, neighbor);\n"]]},{"start1":6220,"length1":0,"diffs":[[1,"        }       \n"]]},{"start1":6238,"length1":252,"diffs":[[1,""]]},{"start1":6748,"length1":67,"diffs":[[1,""]]},{"start1":8534,"length1":53,"diffs":[[1,"                    this.move(Direction.Left);\n"]]},{"start1":8692,"length1":51,"diffs":[[1,"                    this.move(Direction.Up);\n"]]},{"start1":8851,"length1":54,"diffs":[[1,"                    this.move(Direction.Right);\n"]]},{"start1":9012,"length1":53,"diffs":[[1,"                    this.move(Direction.Down);\n"]]}]}]},{"timestamp":1760824646737,"editorVersion":"2.0.59","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":2617,"length1":64,"diffs":[[1,"tiles.placeOnTile(player2Sprite, tiles.getTileLocation(3, 8));\r\n"]]}]},{"type":"edited","filename":"voidbattle.ts","patch":[{"start1":3887,"length1":33,"diffs":[[1,""]]},{"start1":3888,"length1":21,"diffs":[[1,""]]},{"start1":4273,"length1":364,"diffs":[[1,""]]},{"start1":4815,"length1":286,"diffs":[[1,""]]},{"start1":6878,"length1":10,"diffs":[[1,"\n"]]}]}]},{"timestamp":1760888466725,"editorVersion":"2.0.59","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":74,"length1":20,"diffs":[[1,"\r\n"]]}]},{"type":"edited","filename":"tilemap.g.jres","patch":[{"start1":392,"length1":468,"diffs":[[1,"        \"data\": \"MTAwYzAwMDkwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDIyMjIyMjIyMjIyMg==\",\n"]]}]},{"type":"edited","filename":"voidbattle.ts","patch":[{"start1":5082,"length1":102,"diffs":[[1,"            this.setDimensions(16, 16);\n"]]},{"start1":7582,"length1":9,"diffs":[[1,"        }\n"]]}]}]},{"timestamp":1760896457382,"editorVersion":"2.0.59","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":74,"length1":22,"diffs":[[1,"game.debug = true;\r\n"]]},{"start1":2699,"length1":67,"diffs":[[1,""]]}]},{"type":"edited","filename":"tilemap.g.jres","patch":[{"start1":392,"length1":468,"diffs":[[1,"        \"data\": \"MTAwYzAwMDkwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA==\",\n"]]},{"start1":919,"length1":83,"diffs":[[1,"            \"sprites.dungeon.floorLight2\"\n"]]}]},{"type":"edited","filename":"tilemap.g.ts","patch":[{"start1":304,"length1":289,"diffs":[[1,"            case \"level1\":return tiles.createTilemap(hex`0c000900000000000000000000000000000000000000000000000000000000000000000001010100000000000000000001010100000000000000000001010100000101010000000000000000000101010000000000000000000101010000000000000000000000000000000000000000`, img`\n"]]},{"start1":743,"length1":25,"diffs":[[1,""]]},{"start1":768,"length1":0,"diffs":[[1,"2 . . . . . . . . . . 2 \n"]]},{"start1":818,"length1":103,"diffs":[[1,"`, [myTiles.transparency16,sprites.dungeon.floorLight2], TileScale.Sixteen);\n"]]}]},{"type":"edited","filename":"voidbattle.ts","patch":[{"start1":4969,"length1":69,"diffs":[[1,""]]},{"start1":5082,"length1":207,"diffs":[[1,"            this.setFlag(SpriteFlag.GhostThroughWalls, true);\n            this.setDimensions(18, 18);\n"]]},{"start1":5734,"length1":878,"diffs":[[1,""]]},{"start1":7653,"length1":148,"diffs":[[1,"            const overlaps: Sprite[] = getCollisionsAtLocation(neighbor);\n"]]},{"start1":7728,"length1":31,"diffs":[[1,"            if(overlaps.length > 0)\n"]]},{"start1":7807,"length1":166,"diffs":[[1,""]]},{"start1":7903,"length1":807,"diffs":[[1,""]]},{"start1":7904,"length1":0,"diffs":[[1,"\n"]]}]}]},{"timestamp":1761164625988,"editorVersion":"2.0.60","changes":[{"type":"edited","filename":"voidbattle.ts","patch":[{"start1":135,"length1":75,"diffs":[[1,""]]},{"start1":3864,"length1":1,"diffs":[[1,""]]},{"start1":3887,"length1":73,"diffs":[[1,"    let collisionSprite: Sprite \n"]]},{"start1":4691,"length1":887,"diffs":[[1,""]]},{"start1":4969,"length1":69,"diffs":[[1,"        hitboxWidth: number = 24;\n        hitboxHeight: number = 24;\n"]]},{"start1":5470,"length1":439,"diffs":[[1,"            if(!collisionSprite) {\n                collisionSprite = sprites.create(assets.image`hitboxPlaceholder`);\n                collisionSprite.setFlag(SpriteFlag.Invisible, true);\n                tiles.placeOnTile(collisionSprite, tiles.getTileLocation(-1, -1));\n"]]},{"start1":10128,"length1":238,"diffs":[[1,""]]},{"start1":11985,"length1":49,"diffs":[[1,""]]},{"start1":12178,"length1":106,"diffs":[[1,"            if(this.controlsLocked || !this.isMyTurn) return;\n            let moveCompleted: boolean = false;\n"]]},{"start1":12361,"length1":47,"diffs":[[1,"                    this.move(Direction.Left, true);\n                    moveCompleted = true;\n"]]},{"start1":12525,"length1":45,"diffs":[[1,"                    this.move(Direction.Up, true);\n                    moveCompleted = true;\n"]]},{"start1":12690,"length1":48,"diffs":[[1,"                    this.move(Direction.Right, true);\n                    moveCompleted = true;\n"]]},{"start1":12857,"length1":47,"diffs":[[1,"                    this.move(Direction.Down, true);\n                    moveCompleted = true;\n"]]},{"start1":13020,"length1":45,"diffs":[[1,"                    moveCompleted = this.tryPrimaryAction();\n"]]},{"start1":13122,"length1":49,"diffs":[[1,"            if (moveCompleted) this.endTurn();\n"]]},{"start1":13180,"length1":836,"diffs":[[1,""]]},{"start1":13266,"length1":29,"diffs":[[1,"        tryPrimaryAction(): boolean {\n"]]},{"start1":13455,"length1":24,"diffs":[[1,"                return false;\n"]]},{"start1":13690,"length1":32,"diffs":[[1,"                return true;\n"]]},{"start1":13960,"length1":32,"diffs":[[1,"                return true;\n"]]},{"start1":14003,"length1":0,"diffs":[[1,"            return false;\n"]]},{"start1":14045,"length1":3,"diffs":[[1,"}"]]}]}]},{"timestamp":1761175858667,"editorVersion":"2.0.60","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":2637,"length1":64,"diffs":[[1,"tiles.placeOnTile(player2Sprite, tiles.getTileLocation(3, 7));\r\n"]]}]},{"type":"edited","filename":"voidbattle.ts","patch":[{"start1":5043,"length1":34,"diffs":[[1,""]]},{"start1":5431,"length1":390,"diffs":[[1,"            if (this.isActive && this.cb) {\n                const isOnWall: boolean = tiles.tileAtLocationIsWall(this.tilemapLocation());\n                this.cb(this, this.overlappers, isOnWall);\n            }\n"]]},{"start1":6507,"length1":54,"diffs":[[1,""]]},{"start1":6630,"length1":41,"diffs":[[1,""]]},{"start1":6831,"length1":53,"diffs":[[1,""]]},{"start1":15090,"length1":67,"diffs":[[1,"                sprites.destroy(detector, effects.spray, 200);\n"]]}]}]},{"timestamp":1761493349025,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"voidbattle.ts","patch":[{"start1":5282,"length1":54,"diffs":[[1,"            //this.setFlag(SpriteFlag.Invisible, true);\n"]]}]}]},{"timestamp":1761493370442,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"pxt.json","patch":[{"start1":279,"length1":52,"diffs":[[1,"        \"voidbattle.ts\"\n"]]}]},{"type":"added","filename":"tilespritemap.ts","value":""}]},{"timestamp":1761497937475,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":0,"length1":22,"diffs":[[1,""]]}]}]},{"timestamp":1761497952325,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":0,"length1":0,"diffs":[[1,"// Add your code here\n"]]}]}]},{"timestamp":1761500617288,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":0,"length1":10,"diffs":[[1,""]]}]}]},{"timestamp":1761500675326,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":0,"length1":67,"diffs":[[1,"interface "]]}]}]},{"timestamp":1761500989360,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":27,"length1":37,"diffs":[[1,"    [column: number] : Sprite;   \r\n"]]}]}]},{"timestamp":1761508222341,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":27,"length1":48,"diffs":[[1,"    [column: number, ] : Sprite;   \r\n"]]}]}]},{"timestamp":1761508224910,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":27,"length1":31,"diffs":[[1,"    [column: number, row: number] : Sprite;   \r\n"]]},{"start1":80,"length1":134,"diffs":[[1,""]]}]}]},{"timestamp":1761508794604,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":63,"length1":97,"diffs":[[1,""]]},{"start1":109,"length1":2,"diffs":[[1,"    \r\n"]]},{"start1":179,"length1":73,"diffs":[[1,"\r\n"]]},{"start1":190,"length1":2,"diffs":[[1,"    \r\n"]]}]}]},{"timestamp":1761509394106,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":208,"length1":74,"diffs":[[1,"    placeSprite(sprite: Sprite, column: number, row: number) {\r\n"]]},{"start1":331,"length1":10,"diffs":[[1,"        this\r\n"]]},{"start1":354,"length1":122,"diffs":[[1,""]]},{"start1":356,"length1":2,"diffs":[[1,""]]}]}]},{"timestamp":1761509800086,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":450,"length1":330,"diffs":[[1,"        if (spriteMap.)\r\n"]]}]}]},{"timestamp":1761510396832,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":0,"length1":120,"diffs":[[1,"interface TileSpriteMap {\r\n    [key: string]: Sprite;   \r\n}\r\n"]]},{"start1":63,"length1":70,"diffs":[[1,"function makeMapKey(column: number, row: number): string {\r\n    return column + \",\" + row;\r\n}\r\n"]]},{"start1":160,"length1":116,"diffs":[[1,"class VBMap {\r\n    spriteMap: TileSpriteMap;\r\n\r\n    placeOnTile(sprite: Sprite, column: number, row: number) {\r\n        \r\n        this.spriteMap[makeMapKey(column, row)] = sprite;\r\n        \r\n"]]},{"start1":360,"length1":186,"diffs":[[1,"    moveFromTile(oldColumn: number, oldRow: number, newColumn: number, newRow: number) {\r\n        const oldKey = makeMapKey(oldColumn, oldRow);\r\n        const newKey = makeMapKey(newColumn, newRow);\r\n        if (this.spriteMap.oldKey === undefined) {\r\n            // error: there's no sprite at this tile!\r\n            return;\r\n"]]},{"start1":701,"length1":48,"diffs":[[1,"        if (this.spriteMap.newKey !== undefined) {\r\n            \r\n"]]},{"start1":780,"length1":624,"diffs":[[1,""]]},{"start1":789,"length1":3,"diffs":[[1,"\r\n}"]]}]}]},{"timestamp":1761511092282,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":564,"length1":14,"diffs":[[1,"\r\n"]]}]}]},{"timestamp":1761511093255,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":113,"length1":68,"diffs":[[1,""]]},{"start1":380,"length1":10,"diffs":[[1,""]]},{"start1":441,"length1":54,"diffs":[[1,"\r\n            this.spriteMap[makeMapKey(location)] = sprite;\r\n\r\n"]]},{"start1":564,"length1":168,"diffs":[[1,"            \r\n"]]},{"start1":661,"length1":94,"diffs":[[1,"            const oldKey = makeMapKey(oldLocation);\r\n            const newKey = makeMapKey(newLocation);\r\n"]]},{"start1":1152,"length1":47,"diffs":[[1,"            delete this.spriteMap[oldKey];\r\n"]]},{"start1":1209,"length1":162,"diffs":[[1,""]]},{"start1":1213,"length1":0,"diffs":[[1,"\r\n"]]}]}]},{"timestamp":1761511723432,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":190,"length1":8,"diffs":[[1,""]]}]}]},{"timestamp":1761511881564,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":115,"length1":21,"diffs":[[1,"        key() {\r\n"]]},{"start1":190,"length1":0,"diffs":[[1,"\r\n    \r\n"]]},{"start1":395,"length1":114,"diffs":[[1,""]]},{"start1":527,"length1":52,"diffs":[[1,"            this.spriteMap[location.key()] = sprite;\r\n"]]},{"start1":640,"length1":42,"diffs":[[1,"            const oldKey = location.key();\r\n"]]},{"start1":891,"length1":90,"diffs":[[1,"            const oldKey = oldLocation.key();\r\n            const newKey = newLocation.key();\r\n"]]},{"start1":1485,"length1":64,"diffs":[[1,"            const key = location.key();\r\n            return this.spriteMap[key] !== undefined;\r\n"]]},{"start1":1594,"length1":10,"diffs":[[1,""]]}]}]},{"timestamp":1761512467319,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":16,"length1":6,"diffs":[[1,""]]},{"start1":576,"length1":0,"diffs":[[1,"\r\n"]]},{"start1":1664,"length1":116,"diffs":[[1,"        \r\n"]]}]}]},{"timestamp":1761513121464,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":16,"length1":8,"diffs":[[1,"    \r\n"]]}]}]},{"timestamp":1761513443696,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":16,"length1":96,"diffs":[[1,"    le\r\n"]]},{"start1":202,"length1":0,"diffs":[[1,"    interface TileSpriteMap {\r\n        [key: string]: Sprite;\r\n    }\r\n\r\n    export function makeMapKey(location: Location): string {\r\n        return location.column + \",\" + location.row;\r\n    }\r\n\r\n    export function setTilemap(tilemap: tiles.TileMapData) {\r\n        scene.setTileMapLevel(tilemap);\r\n\r\n    }\r\n\r\n"]]},{"start1":695,"length1":20,"diffs":[[1,""]]},{"start1":1797,"length1":424,"diffs":[[1,""]]}]}]},{"timestamp":1761514028381,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":281,"length1":99,"diffs":[[1,""]]},{"start1":472,"length1":53,"diffs":[[1,"            tiles.\r\n"]]}]}]},{"timestamp":1761514179495,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":1717,"length1":12,"diffs":[[1,""]]}]}]},{"timestamp":1761523457225,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":1717,"length1":11,"diffs":[[1,"        \r\n"]]}]}]},{"timestamp":1761523508052,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":460,"length1":447,"diffs":[[1,"        placeOnTile(sprite: Sprite, location: Location) {\r\n            this.spriteMap[location.key] = sprite;\r\n"]]},{"start1":624,"length1":26,"diffs":[[1,""]]},{"start1":1345,"length1":68,"diffs":[[1,""]]},{"start1":1717,"length1":126,"diffs":[[1,"        f\r\n"]]},{"start1":1730,"length1":4,"diffs":[[1,""]]}]}]},{"timestamp":1761524009602,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":999,"length1":238,"diffs":[[1,""]]},{"start1":1224,"length1":231,"diffs":[[1,"        moveFromTile(oldLocation: Location, newLocation: Location) {\r\n"]]},{"start1":1500,"length1":31,"diffs":[[1,"                return;\r\n"]]},{"start1":1665,"length1":31,"diffs":[[1,"                return;\r\n"]]},{"start1":1707,"length1":124,"diffs":[[1,"            this.placeOnTile(this.spriteMap[oldKey], newLocation);\r\n            this.spriteMap[newKey] = this.spriteMap[oldKey];\r\n"]]},{"start1":1884,"length1":26,"diffs":[[1,""]]},{"start1":1897,"length1":2,"diffs":[[1,""]]}]}]},{"timestamp":1761524530143,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":743,"length1":92,"diffs":[[1,""]]},{"start1":782,"length1":0,"diffs":[[1,"            if(this.spriteMap[key] !== undefined)\r\n                return false;\r\n"]]},{"start1":2385,"length1":382,"diffs":[[1,"            return this.spriteMap[location.key] !== undefined;\r\n"]]}]}]},{"timestamp":1761525123825,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":1793,"length1":135,"diffs":[[1,"            if (this.spriteMap[oldKey] === undefined) {\r\n                // error: there's no sprite at this tile!\r\n                return false;\r\n            }\r\n"]]},{"start1":1957,"length1":0,"diffs":[[1,"            if (this.spriteMap[newKey] !== undefined) {\r\n                // error: there's already a sprite at this tile!\r\n                return false;\r\n            }\r\n\r\n"]]},{"start1":2210,"length1":65,"diffs":[[1,""]]}]}]},{"timestamp":1761525718833,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":2012,"length1":14,"diffs":[[1,""]]},{"start1":2205,"length1":98,"diffs":[[1,"\r\n"]]},{"start1":2516,"length1":48,"diffs":[[1,"                delete this.spriteMap[location.key];\r\n"]]},{"start1":2657,"length1":146,"diffs":[[1,""]]},{"start1":2712,"length1":150,"diffs":[[1,"            return this.spriteMap[location.key];\r\n"]]},{"start1":2775,"length1":133,"diffs":[[1,"        getWallAtTile(location: Location): boolean {\r\n"]]},{"start1":2903,"length1":10,"diffs":[[1,""]]}]}]},{"timestamp":1761526410644,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":3332,"length1":12,"diffs":[[1,"        \r\n"]]}]}]},{"timestamp":1761526410969,"editorVersion":"2.0.61","changes":[{"type":"edited","filename":"pxt.json","patch":[{"start1":338,"length1":44,"diffs":[[1,""]]}]},{"type":"edited","filename":"tilespritemap.ts","patch":[{"start1":3332,"length1":39,"diffs":[[1,"        jo\r\n\r\n\r\n"]]}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"},{"type":"added","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block>\n</xml>"}]}],"snapshots":[{"timestamp":1760707403519,"editorVersion":"2.0.59","text":{"main.ts":" ","README.md":" ","assets.json":"","pxt.json":"{\n    \"name\": \"Void Battle\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\",\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1760743713395,"editorVersion":"2.0.59","text":{"main.ts":"tiles.setCurrentTilemap(tilemap`level1`);\r\nscene.centerCameraAt(96, 68);\r\n\r\nlet isP1Turn: boolean = false;\r\n\r\nlet player1Sprite = new VoidBattle.VBSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, SpriteKind.Player);\r\nplayer1Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`heroWalkLeft`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkBack`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkRight`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkFront`, 200, true)\r\n]);\r\ntiles.placeOnTile(player1Sprite, tiles.getTileLocation(1, 7));\r\n\r\n\r\nlet player2Sprite = new VoidBattle.VBSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, SpriteKind.Player);\r\nplayer2Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`heroWalkLeft`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkBack`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkRight`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkFront`, 200, true)\r\n]);\r\ntiles.placeOnTile(player2Sprite, tiles.getTileLocation(10, 2));\r\n\r\ngame.onPaint(function() {\r\n    // draw HUD\r\n    screen.drawLine(0, 0, 160, 0, isP1Turn ? 4 : 9);\r\n    screen.fillRect(0, 1, 160, 22, isP1Turn ? 2 : 6);\r\n    screen.drawLine(0, 23, 160, 23, isP1Turn ? 14 : 8);\r\n\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 2, 2);\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 138, 2);\r\n\r\n    screen.print(\"P\" + (isP1Turn ? \"1\" : \"2\") + \" Turn\", 60, 5, 1);\r\n});\r\n\r\nconst directionButtons = [ControllerButton.Left, ControllerButton.Up, ControllerButton.Right, ControllerButton.Down];\r\nconst directions = [Direction.Left, Direction.Up, Direction.Right, Direction.Down];\r\n\r\nfor(let i = 0; i < 4; ++i) {\r\n    controller.player1.onButtonEvent(directionButtons[i], ControllerButtonEvent.Pressed, function() {\r\n        if (!isP1Turn)\r\n            return;\r\n        player1Sprite.move(directions[i]);\r\n        switchTurn();\r\n    });\r\n\r\n    controller.player2.onButtonEvent(directionButtons[i], ControllerButtonEvent.Pressed, function () {\r\n        if (isP1Turn)\r\n            return;\r\n        player2Sprite.move(directions[i]);\r\n        switchTurn();\r\n    });\r\n}\r\n\r\ncontroller.player1.onButtonEvent(ControllerButton.A, ControllerButtonEvent.Pressed, function() {\r\n    if (!isP1Turn)\r\n        return;\r\n    switchTurn();\r\n});\r\n\r\ncontroller.player2.onButtonEvent(ControllerButton.A, ControllerButtonEvent.Pressed, function () {\r\n    if (isP1Turn)\r\n        return;\r\n    switchTurn();\r\n});\r\n\r\nfunction switchTurn() {\r\n    isP1Turn = !isP1Turn;\r\n}","README.md":" ","assets.json":"","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"level1\": {\n        \"id\": \"level1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAwYzAwMDgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"sprites.dungeon.floorLight2\"\n        ],\n        \"displayName\": \"level1\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","images.g.jres":"{\n    \"image1\": {\n        \"data\": \"hwQUABQAAAAAu7u7u7u7u7sAAACwHREREREREdELAADb0bu7u7u7ux29AAAbvczMzMzMzNuxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAby8zMzMzMzLyxAAAbvczMzMzMzNuxAADb0bu7u7u7ux29AACwHREREREREdELAAAAu7u7u7u7u7sAAAA=\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"selectedItemFrame\"\n    },\n    \"anim1\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim1\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmYyZmYyZmYwMDAwMDBmMGZmMjIyMmZmMGYwMDAwZmZlZmVlZWVmZWZmMDAwMGZmMmUyMjIyZTJmZTAwMDBlZmYyZmZmZjJmZmUwMDAwZmZmZmVlZWVmZmZmMDBmMGVmYmY0ZmY0ZmJmZTBmZjBlZTE0ZGZmZDQxZWUwZjAwZWZkZWRkZGRlZGZlMDAwMGYwZWU0NDQ0ZWUwZjAwMDA0ZTJmMjIyMmYyZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY1NDQ1ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDBmMGVmZjJmZmZmMmZmZTBmZjBmZmZmZWVlZWZmZmYwZjAwZWZiZjRmZjRmYmZlMDAwMGVmMTRkZmZkNDFmZTAwMDBmMDRlZGRkZGU0ZWYwMDAwZWYyZjIyZTJkZGU0MDAwMDRlMmYyMmUyZGQwZTAwMDAwMDRmNTRmNWVlMDAwMDAwMDBmZmZmZmYwZjAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDAwMGVmZjJmZmZmMmZmZTAwMDBmZmZmZWVlZWZmZmYwMGYwZWZiZjRmZjRmYmZlMGZmMGVlMTRkZmZkNDFlZTBmMDBlZmRlZGRkZGVkZmUwMDAwZjBlZTQ0NDRlZTBmMDAwMDRlMmYyMjIyZjJlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjU0NDVmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmMmZmMmZmMDAwMDAwZjBmZjIyMjJmZjBmMDAwMGZmZWZlZWVlZmVmZjAwMDBlZjJlMjIyMmUyZmYwMGYwZWZmMmZmZmYyZmZlMGZmMGZmZmZlZWVlZmZmZjBmMDBlZmJmNGZmNGZiZmUwMDAwZWYxNGRmZmQ0MWZlMDAwMGZlNGVkZGRkZTQwZjAwMDA0ZWRkMmUyMmYyZmUwMDAwZTBkZDJlMjJmMmU0MDAwMDAwZWU1ZjQ1ZjQwMDAwMDAwMGYwZmZmZmZmMDAwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkFront\"\n    },\n    \"anim2\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim2\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDBmZmZmZmYwMDAwMDAwMGYwZjJlZWVlZmYwMDAwMDAyZjIyZWZlZWZlMGYwMDAwZWZlZWZlZWZlZTBmMDBmMDJlMjJlMmZlZmYwZjAwZjBlMmZmZmYyMmUyMGYwMGYwZmZlZWZlZmZmZmZmMDBmMGVlNDRiZjRlZTRmZjAwMDBlZmRkMWZkNGU0ZmUwMDAwZjBkZGRkZTRlZTBmMDAwMGYwNGU0NGVlZmYwMDAwMDBmMDIyZTJkZDA0MDAwMDAwZjAyMmUyZGQwZTAwMDAwMGYwNTVmNGVlMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwMDAwMGZmMGYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZWRlZWVlMGYwMDAwZjA0ZWRlNGQwZjAwMDAwMGYwMjJkZWVkMGYwMDAwMDBmZjU1ZWZmZWZmMDAwMDAwZmZmZmZmZmZmZjAwMDAwMGYwZmYwMGYwMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZGRlNGVlMGYwMDAwZjA0ZTQ0ZWVmZjAwMDAwMGYwMjJlMmRkMDQwMDAwMDBmMDIyZTJkZDBlMDAwMDAwZjA1NWY0ZWUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmMGYyZWVlZWZmMDAwMDAwMmYyMmVmZWVmZTBmMDAwMGVmZWVmZWVmZWUwZjAwZjAyZTIyZTJmZWZmMGYwMGYwZTJmZmZmMjJlMjBmMDBmMGZmZWVmZWZmZmZmZjAwZjBlZTQ0YmY0ZWU0ZmYwMDAwZWZkZDFmZDRlNGZlMDAwMGYwZGRkZGU0ZWUwZjAwMDBmMDRlNDRkZTRkMDAwMDAwZjAyMjIyZGVlZDAwMDAwMGZmNTU0NGVmZmUwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjBmZjAwZjAwZjAwMDA=\",\n        \"displayName\": \"heroWalkLeft\"\n    },\n    \"anim3\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim3\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZmZlZWVlMmYwZjAwMDBmMGVmZWVmZTIyZjIwMDAwZjBlZWZlZWZlZWZlMDAwMGYwZmZlZjJlMjJlMjBmMDBmMDJlMjJmZmZmMmUwZjAwZmZmZmZmZWZlZWZmMGYwMGZmNGVlNGZiNDRlZTBmMDBlZjRlNGRmMWRkZmUwMDAwZjBlZTRlZGRkZDBmMDAwMDAwZmZlZTQ0ZTQwZjAwMDAwMDQwZGQyZTIyMGYwMDAwMDBlMGRkMmUyMjBmMDAwMDAwZjBlZTRmNTUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlZWVkZWRkMGYwMDAwMDBmMGQ0ZWRlNDBmMDAwMDAwZjBkZWVkMjIwZjAwMDAwMGZmZWZmZTU1ZmYwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjAwZjAwZmYwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlNGVkZGRkMGYwMDAwMDBmZmVlNDRlNDBmMDAwMDAwNDBkZDJlMjIwZjAwMDAwMGUwZGQyZTIyMGYwMDAwMDBmMGVlNGY1NTBmMDAwMDAwMDBmZmZmZmYwMDAwMDAwMDAwZjBmZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmYwMDAwMDAwMGZmZWVlZTJmMGYwMDAwZjBlZmVlZmUyMmYyMDAwMGYwZWVmZWVmZWVmZTAwMDBmMGZmZWYyZTIyZTIwZjAwZjAyZTIyZmZmZjJlMGYwMGZmZmZmZmVmZWVmZjBmMDBmZjRlZTRmYjQ0ZWUwZjAwZWY0ZTRkZjFkZGZlMDAwMGYwZWU0ZWRkZGQwZjAwMDAwMGQ0ZWQ0NGU0MGYwMDAwMDBkZWVkMjIyMjBmMDAwMDAwZWZmZTQ0NTVmZjAwMDAwMGZmZmZmZmZmZmYwMDAwMDBmMDBmMDBmZjBmMDA=\",\n        \"displayName\": \"heroWalkRight\"\n    },\n    \"anim4\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim4\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmZlZWVlZmYwMDAwMDBmMGVlZmVlZmVlMGYwMDAwZmZmZjJmZjJmZmZmMDAwMGZmMmUyZWUyZTJmZjAwMDBlZmYyZjIyZjJmZmUwMDAwZmYyZmUyMmVmMmZmMDBmMGVmMmZlZmZlZjJmZTBmZjBlZWZmZWVlZWVmZWUwZjAwZWZlZWVlZWVlZWZlMDAwMGYwZWVlZWVlZWUwZjAwMDA0ZWZmZmZmZmZmZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY0NDQ0ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmMGZmMmZmMmZmMGYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMmZmZjJmZTAwMDBmZjJmZWYyZWYyZmYwMDAwZWZmMmVmMmVlZmZlMDBmMGVmZmZlZWZlZWVmZTBmZjBlZmVlZWVlZWVlZmUwZjAwZjBlZWVlZWVlZTBmMDAwMGUwZmZmZmZmZmZlNDAwMDA0MDJmMjIyMmRlNGQwMDAwZTBmZmZmZmZlZTA0MDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmZmZmMmZmMmZmZmYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMjJmMmZmZTAwMDBmZjJmZTIyZWYyZmYwMGYwZWYyZmVmZmVmMmZlMGZmMGVlZmZlZWVlZWZlZTBmMDBlZmVlZWVlZWVlZmUwMDAwZjBlZWVlZWVlZTBmMDAwMDRlZmZmZmZmZmZlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjQ0NDRmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmZWVlZWZmMDAwMDAwZjBlZWZlZWZlZTBmMDAwMGYwZmYyZmYyZmYwZjAwMDBmZjJlMmVlMmUyZmYwMDAwZWYyZmZmMmYyZmZlMDAwMGZmMmZlMmZlZjJmZjAwMDBlZmZlZTJmZTJmZmUwMGYwZWZlZWVmZWVmZmZlMGZmMGVmZWVlZWVlZWVmZTBmMDBmMGVlZWVlZWVlMGYwMDAwNGVmZmZmZmZmZjBlMDAwMGQ0ZWQyMjIyZjIwNDAwMDA0MGVlZmZmZmZmMGUwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkBack\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}","images.g.ts":"","voidbattle.ts":"enum Direction {\n    Left = 0,\n    Up = 1,\n    Right = 2,\n    Down = 3\n}\n\nenum SpriteAction {\n    Idle,\n    Move,\n    Fall,\n    Die\n}\n\nnamespace animation {\n    const stateNamespace = \"__animation\";\n\n    interface AnimationState {\n        animations: SpriteAnimation[];\n    }\n\n    // this will tell the state machines that their animations are still active\n    export function updateActiveStateAnimations(): void {\n        let state: AnimationState = game.currentScene().data[stateNamespace];\n        if(state && state.animations) {\n            state.animations.forEach((anim: SpriteAnimation) => {\n                if (anim.sprite instanceof VoidBattle.VBSprite) {\n                    const vbs = anim.sprite as VoidBattle.VBSprite;\n                    if(vbs.sm)\n                        vbs.sm.animationActive = true;\n                }\n            });\n        }\n    }\n\n    export class Animation {\n        constructor(public frames: Image[], public frameInterval: number = 500, public loop: boolean = false){}\n        runAnimationOnSprite(sprite: Sprite) {\n            animation.runImageAnimation(sprite, this.frames, this.frameInterval, this.loop);\n        }\n    }\n\n    interface AnimationMap {\n        [key: number]: Animation[];\n    }\n\n    let stateMachines: AnimationStateMachine[];\n\n    // should allow you to change the sprite's animation based on its direction\n    // what should i put in here and what should just be part of VBSprite?\n    export class AnimationStateMachine {\n        dir: Direction = Direction.Down;\n        lastDir: Direction = Direction.Down;\n        sprite: VoidBattle.VBSprite;\n        lastAction: number;\n        animationActive: boolean = false;\n        stateAnimations: AnimationMap = {};\n\n        constructor(sprite: VoidBattle.VBSprite) {\n            this.sprite = sprite;\n            this.lastAction = sprite._action;\n            this._init();\n        }\n\n        _init() {\n            if (!stateMachines) {\n                stateMachines = [];\n                game.eventContext().registerFrameHandler(scene.ANIMATION_UPDATE_PRIORITY, () => {\n                    // see which animations are still active\n                    animation.updateActiveStateAnimations();\n\n                    // remove state machines of dead sprites\n                    stateMachines = stateMachines.filter((sm: AnimationStateMachine) => {\n                        if (sm.sprite.flags & sprites.Flag.Destroyed)\n                            return false;\n                        sm.update();\n                        return true;\n                    });\n                });\n            }\n            stateMachines.push(this);\n        }\n\n        update() {\n            // detect if the action has been changed\n            if(this.lastAction != this.sprite._action || this.lastDir != this.dir) {\n                this.lastAction = this.sprite._action;\n                this.lastDir = this.dir;\n                const anim = this.getAnimationFromState(this.lastAction)\n                if(anim)\n                    anim.runAnimationOnSprite(this.sprite);\n            }\n            this.animationActive = false;\n        }\n\n        setDirection(direction: Direction) {\n            this.dir = direction;\n        }\n\n        // You should really put these in the order [left, up, right, down]\n        setStateAnimations(state: number, animations: Animation[]) {\n            this.stateAnimations[state] = animations;\n        }\n\n        getAnimationFromState(state: number): Animation {\n            const anims: Animation[] = this.stateAnimations[state];\n            if (!anims || anims.length == 0)\n                return null;\n            \n            if (anims.length == 1 || this.dir < 0 || this.dir >= anims.length)\n                return anims[0];\n            \n            return anims[this.dir];\n\n        }\n        //constructor(frameInterval: number, )\n    }\n\n}\n\nnamespace VoidBattle {\n    const tileSize = 16;\n    export class VBSprite extends sprites.ExtendableSprite {\n        sm: animation.AnimationStateMachine;\n        dir: Direction = Direction.Down;\n        constructor(spriteImage: Image, kind?: number, dir?: Direction) {\n            super(spriteImage, kind);\n            this.sm = new animation.AnimationStateMachine(this);\n            this._action = SpriteAction.Idle;\n            if (dir)\n                this.setDirection(dir);\n            else\n                this.setDirection(Direction.Down);\n        }\n\n        setDirection(dir: Direction) {\n            this.dir = dir;\n            this.sm.setDirection(dir);\n        }\n        \n        move(dir: Direction) {\n            let x: number = 0, y: number = 0\n            \n            switch(dir){\n                case Direction.Left:\n                    x = -tileSize;\n                    break;\n                case Direction.Up:\n                    y = -tileSize;\n                    break;\n                case Direction.Right:\n                    x = tileSize;\n                    break;\n                case Direction.Down:\n                    y = tileSize;\n                    break;\n            }\n            this.setDirection(dir);\n            this.x += x;\n            this.y += y;\n        }       \n\n    }\n}","pxt.json":"{\n    \"name\": \"Void Battle\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\",\n        \"images.g.jres\",\n        \"images.g.ts\",\n        \"voidbattle.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}},{"timestamp":1760823560710,"editorVersion":"2.0.59","text":{"main.ts":"tiles.setCurrentTilemap(tilemap`level1`);\r\nscene.centerCameraAt(96, 68);\r\n\r\nlet isP1Turn: boolean = true;\r\n\r\nlet player1Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player1, SpriteKind.Player, Direction.Up);\r\nplayer1Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`heroWalkLeft`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkBack`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkRight`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkFront`, 200, true)\r\n]);\r\ntiles.placeOnTile(player1Sprite, tiles.getTileLocation(1, 7));\r\nplayer1Sprite.onTurnEnd(function() {\r\n    isP1Turn = false;\r\n    player2Sprite.startTurn();\r\n});\r\nplayer1Sprite.onDeath(function() {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 2 Wins!\");\r\n    game.gameOverPlayerWin(2);\r\n})\r\n\r\nlet player2Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player2, SpriteKind.Player, Direction.Down);\r\nplayer2Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`witchLeft`, 200, true),\r\n    new animation.Animation(assets.animation`witchBack`, 200, true),\r\n    new animation.Animation(assets.animation`witchRight`, 200, true),\r\n    new animation.Animation(assets.animation`witchForward`, 200, true)\r\n]);\r\ntiles.placeOnTile(player2Sprite, tiles.getTileLocation(10, 2));\r\nplayer2Sprite.onTurnEnd(function () {\r\n    isP1Turn = true;\r\n    player1Sprite.startTurn();\r\n});\r\nplayer2Sprite.onDeath(function () {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 1 Wins!\");\r\n    game.gameOverPlayerWin(1);\r\n})\r\n\r\ngame.onPaint(function() {\r\n    // draw HUD\r\n    screen.drawLine(0, 0, 160, 0, isP1Turn ? 4 : 9);\r\n    screen.fillRect(0, 1, 160, 22, isP1Turn ? 2 : 6);\r\n    screen.drawLine(0, 23, 160, 23, isP1Turn ? 14 : 8);\r\n\r\n    if (player1Sprite.storedTile)\r\n        screen.drawImage(player1Sprite.storedTile, 5, 5);\r\n    \r\n    if (player2Sprite.storedTile)\r\n        screen.drawImage(player2Sprite.storedTile, 141, 5);\r\n\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 2, 2);\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 138, 2);\r\n\r\n    screen.print(\"P\" + (isP1Turn ? \"1\" : \"2\") + \" Turn\", 60, 5, 1);\r\n});\r\n\r\nplayer1Sprite.startTurn();","README.md":" ","assets.json":"","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"level1\": {\n        \"id\": \"level1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAwYzAwMDkwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDIyMjIyMjIyMjIyMg==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"sprites.dungeon.floorLight2\"\n        ],\n        \"displayName\": \"level1\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","images.g.jres":"{\n    \"image2\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"blankTile\"\n    },\n    \"image1\": {\n        \"data\": \"hwQUABQAAAAAu7u7u7u7u7sAAACwHREREREREdELAADb0bu7u7u7ux29AAAbvQAAAAAAANuxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbvQAAAAAAANuxAADb0bu7u7u7ux29AACwHREREREREdELAAAAu7u7u7u7u7sAAAA=\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"selectedItemFrame\"\n    },\n    \"anim1\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim1\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmYyZmYyZmYwMDAwMDBmMGZmMjIyMmZmMGYwMDAwZmZlZmVlZWVmZWZmMDAwMGZmMmUyMjIyZTJmZTAwMDBlZmYyZmZmZjJmZmUwMDAwZmZmZmVlZWVmZmZmMDBmMGVmYmY0ZmY0ZmJmZTBmZjBlZTE0ZGZmZDQxZWUwZjAwZWZkZWRkZGRlZGZlMDAwMGYwZWU0NDQ0ZWUwZjAwMDA0ZTJmMjIyMmYyZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY1NDQ1ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDBmMGVmZjJmZmZmMmZmZTBmZjBmZmZmZWVlZWZmZmYwZjAwZWZiZjRmZjRmYmZlMDAwMGVmMTRkZmZkNDFmZTAwMDBmMDRlZGRkZGU0ZWYwMDAwZWYyZjIyZTJkZGU0MDAwMDRlMmYyMmUyZGQwZTAwMDAwMDRmNTRmNWVlMDAwMDAwMDBmZmZmZmYwZjAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDAwMGVmZjJmZmZmMmZmZTAwMDBmZmZmZWVlZWZmZmYwMGYwZWZiZjRmZjRmYmZlMGZmMGVlMTRkZmZkNDFlZTBmMDBlZmRlZGRkZGVkZmUwMDAwZjBlZTQ0NDRlZTBmMDAwMDRlMmYyMjIyZjJlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjU0NDVmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmMmZmMmZmMDAwMDAwZjBmZjIyMjJmZjBmMDAwMGZmZWZlZWVlZmVmZjAwMDBlZjJlMjIyMmUyZmYwMGYwZWZmMmZmZmYyZmZlMGZmMGZmZmZlZWVlZmZmZjBmMDBlZmJmNGZmNGZiZmUwMDAwZWYxNGRmZmQ0MWZlMDAwMGZlNGVkZGRkZTQwZjAwMDA0ZWRkMmUyMmYyZmUwMDAwZTBkZDJlMjJmMmU0MDAwMDAwZWU1ZjQ1ZjQwMDAwMDAwMGYwZmZmZmZmMDAwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkFront\"\n    },\n    \"anim2\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim2\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDBmZmZmZmYwMDAwMDAwMGYwZjJlZWVlZmYwMDAwMDAyZjIyZWZlZWZlMGYwMDAwZWZlZWZlZWZlZTBmMDBmMDJlMjJlMmZlZmYwZjAwZjBlMmZmZmYyMmUyMGYwMGYwZmZlZWZlZmZmZmZmMDBmMGVlNDRiZjRlZTRmZjAwMDBlZmRkMWZkNGU0ZmUwMDAwZjBkZGRkZTRlZTBmMDAwMGYwNGU0NGVlZmYwMDAwMDBmMDIyZTJkZDA0MDAwMDAwZjAyMmUyZGQwZTAwMDAwMGYwNTVmNGVlMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwMDAwMGZmMGYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZWRlZWVlMGYwMDAwZjA0ZWRlNGQwZjAwMDAwMGYwMjJkZWVkMGYwMDAwMDBmZjU1ZWZmZWZmMDAwMDAwZmZmZmZmZmZmZjAwMDAwMGYwZmYwMGYwMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZGRlNGVlMGYwMDAwZjA0ZTQ0ZWVmZjAwMDAwMGYwMjJlMmRkMDQwMDAwMDBmMDIyZTJkZDBlMDAwMDAwZjA1NWY0ZWUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmMGYyZWVlZWZmMDAwMDAwMmYyMmVmZWVmZTBmMDAwMGVmZWVmZWVmZWUwZjAwZjAyZTIyZTJmZWZmMGYwMGYwZTJmZmZmMjJlMjBmMDBmMGZmZWVmZWZmZmZmZjAwZjBlZTQ0YmY0ZWU0ZmYwMDAwZWZkZDFmZDRlNGZlMDAwMGYwZGRkZGU0ZWUwZjAwMDBmMDRlNDRkZTRkMDAwMDAwZjAyMjIyZGVlZDAwMDAwMGZmNTU0NGVmZmUwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjBmZjAwZjAwZjAwMDA=\",\n        \"displayName\": \"heroWalkLeft\"\n    },\n    \"anim3\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim3\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZmZlZWVlMmYwZjAwMDBmMGVmZWVmZTIyZjIwMDAwZjBlZWZlZWZlZWZlMDAwMGYwZmZlZjJlMjJlMjBmMDBmMDJlMjJmZmZmMmUwZjAwZmZmZmZmZWZlZWZmMGYwMGZmNGVlNGZiNDRlZTBmMDBlZjRlNGRmMWRkZmUwMDAwZjBlZTRlZGRkZDBmMDAwMDAwZmZlZTQ0ZTQwZjAwMDAwMDQwZGQyZTIyMGYwMDAwMDBlMGRkMmUyMjBmMDAwMDAwZjBlZTRmNTUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlZWVkZWRkMGYwMDAwMDBmMGQ0ZWRlNDBmMDAwMDAwZjBkZWVkMjIwZjAwMDAwMGZmZWZmZTU1ZmYwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjAwZjAwZmYwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlNGVkZGRkMGYwMDAwMDBmZmVlNDRlNDBmMDAwMDAwNDBkZDJlMjIwZjAwMDAwMGUwZGQyZTIyMGYwMDAwMDBmMGVlNGY1NTBmMDAwMDAwMDBmZmZmZmYwMDAwMDAwMDAwZjBmZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmYwMDAwMDAwMGZmZWVlZTJmMGYwMDAwZjBlZmVlZmUyMmYyMDAwMGYwZWVmZWVmZWVmZTAwMDBmMGZmZWYyZTIyZTIwZjAwZjAyZTIyZmZmZjJlMGYwMGZmZmZmZmVmZWVmZjBmMDBmZjRlZTRmYjQ0ZWUwZjAwZWY0ZTRkZjFkZGZlMDAwMGYwZWU0ZWRkZGQwZjAwMDAwMGQ0ZWQ0NGU0MGYwMDAwMDBkZWVkMjIyMjBmMDAwMDAwZWZmZTQ0NTVmZjAwMDAwMGZmZmZmZmZmZmYwMDAwMDBmMDBmMDBmZjBmMDA=\",\n        \"displayName\": \"heroWalkRight\"\n    },\n    \"anim4\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim4\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmZlZWVlZmYwMDAwMDBmMGVlZmVlZmVlMGYwMDAwZmZmZjJmZjJmZmZmMDAwMGZmMmUyZWUyZTJmZjAwMDBlZmYyZjIyZjJmZmUwMDAwZmYyZmUyMmVmMmZmMDBmMGVmMmZlZmZlZjJmZTBmZjBlZWZmZWVlZWVmZWUwZjAwZWZlZWVlZWVlZWZlMDAwMGYwZWVlZWVlZWUwZjAwMDA0ZWZmZmZmZmZmZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY0NDQ0ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmMGZmMmZmMmZmMGYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMmZmZjJmZTAwMDBmZjJmZWYyZWYyZmYwMDAwZWZmMmVmMmVlZmZlMDBmMGVmZmZlZWZlZWVmZTBmZjBlZmVlZWVlZWVlZmUwZjAwZjBlZWVlZWVlZTBmMDAwMGUwZmZmZmZmZmZlNDAwMDA0MDJmMjIyMmRlNGQwMDAwZTBmZmZmZmZlZTA0MDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmZmZmMmZmMmZmZmYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMjJmMmZmZTAwMDBmZjJmZTIyZWYyZmYwMGYwZWYyZmVmZmVmMmZlMGZmMGVlZmZlZWVlZWZlZTBmMDBlZmVlZWVlZWVlZmUwMDAwZjBlZWVlZWVlZTBmMDAwMDRlZmZmZmZmZmZlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjQ0NDRmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmZWVlZWZmMDAwMDAwZjBlZWZlZWZlZTBmMDAwMGYwZmYyZmYyZmYwZjAwMDBmZjJlMmVlMmUyZmYwMDAwZWYyZmZmMmYyZmZlMDAwMGZmMmZlMmZlZjJmZjAwMDBlZmZlZTJmZTJmZmUwMGYwZWZlZWVmZWVmZmZlMGZmMGVmZWVlZWVlZWVmZTBmMDBmMGVlZWVlZWVlMGYwMDAwNGVmZmZmZmZmZjBlMDAwMGQ0ZWQyMjIyZjIwNDAwMDA0MGVlZmZmZmZmMGUwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkBack\"\n    },\n    \"anim5\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim5\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwY2MwMDAwMDAwMDAwMDBiY2M1MDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmJmZWZmZWZiZmYwMDAwZmYxZmJmZmJmMWZmMDAwMGYwYmZiYmJiZmIwZjAwMDBlMGZlZWVlZWVmMGUwMDAwYmViY2I1NWJmYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward\"\n    },\n    \"anim6\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim6\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGNjMGMwMDAwMDAwMDAwMDA1Y2NiMDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGYwZmZmZmZmZmYwZjAwMDBlMGZlZmZmZmZmMGUwMDAwYmViZmI1NWJjYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZWJmZWZmYmZlYjAwMDBlMGJiYmU1YmY1ZWUwMDAwMDBlYzVlNTU1NTBmMDAwMDAwZjBmZmZmZmYwMDAwMDAwMDAwYzBjYzAwMDAwMDAwMDAwMGJjYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZmVmZmZmZWYwZTAwMDBiZWJjYjU1YmZiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMDAwNWMwYzAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmMGZmZmZmZmVlMGYwMDAwYmVmYmVlZWViZTBlMDAwMGVlNWZiNWViYmIwZTAwMDBmMDU1NTVlNWNlMDAwMDAwMDBmZmZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchBack\"\n    },\n    \"anim7\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim7\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDA1YzBjMDAwMDAwMDAwMGNjNTVjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGYwNTU1NTU1NTVmZjAwMDAwMGVmZWViZmVlZmYwMDAwMDBlZmJiMWZmYmZmMDAwMDAwYmZiYmJiZmIwZjAwMDAwMGYwZWVlZWVmMGUwMDAwMDBmMGI1ZWJiYjBlMDAwMDAwNWY1NWU1YmIwZTAwMDAwMGJjNTU1NWVlMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGNjYzUwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiZWJmZTBmMDAwMDAwZjBlZWJlZWIwZjAwMDAwMDVmYmJiZWViMDAwMDAwMDA1YzU1ZTVmZTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiYmJmYjBmMDAwMDAwZjBlZWVlZWYwZTAwMDAwMGYwYjVlYmJiMGUwMDAwMDA1ZjU1ZTViYjBlMDAwMDAwYmM1NTU1ZWUwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwY2NjNTAwMDAwMDAwMDBjYzU1YzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmMDU1NTU1NTU1ZmYwMDAwMDBlZmVlYmZlZWZmMDAwMDAwZWZiYjFmZmJmZjAwMDAwMGJmYmJiYmZiMGYwMDAwMDBmMGVlZWViZWViMDAwMDAwNWZiNWJiYmVlYjAwMDAwMDVjNTU1NWVlMGUwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchLeft\"\n    },\n    \"anim8\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim8\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDBjMGM1MDAwMDAwMDAwMGNjNWM1NWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTUwZjAwMDBmZmVlZmJlZWZlMDAwMDAwZmZiZmYxYmJmZTAwMDAwMGYwYmZiYmJiZmIwMDAwMDBlMGZlZWVlZTBmMDAwMDAwZTBiYmJlNWIwZjAwMDAwMGUwYmI1ZTU1ZjUwMDAwMDAwMGVlNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjY2MwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBlZmJlYmJmYjAwMDAwMGYwYmVlYmVlMGYwMDAwMDAwMGJlZWJiYmY1MDAwMDAwMDBlZjVlNTVjNTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBiZmJiYmJmYjAwMDAwMGUwZmVlZWVlMGYwMDAwMDBlMGJiYmU1YjBmMDAwMDAwZTBiYjVlNTVmNTAwMDAwMDAwZWU1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwNWNjYzAwMDAwMDAwMDBjYzVjNTVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1MGYwMDAwZmZlZWZiZWVmZTAwMDAwMGZmYmZmMWJiZmUwMDAwMDBmMGJmYmJiYmZiMDAwMDAwYmVlYmVlZWUwZjAwMDAwMGJlZWJiYjViZjUwMDAwMDBlMGVlNTU1NWM1MDAwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchRight\"\n    },\n    \"anim9\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim9\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDBjZmZhMDAwMDAwMDAwMGZmYWZmYWZmMDAwMDAwZmZmY2FhYWFmZmZmMDBmMGNjY2FhYWFhYWNjYzBmZjBhY2NhYWNjYWFjY2EwZjAwYWZhYWNjY2NhYWZhMDAwMGVmYWFhYWFhYWFmZTAwMDA0ZjllYmZmYmU5ZjQwMDAwNGYxNGQ4OGQ0MWY0MDAwMGYwZDRkZGRkNGQwZjAwMDBiMGZiYmJiYmJmMGIwMDAwZGJjZmNhYWNmY2JkMDAwMGJiYWZhYWFhZmFiYjAwMDAwMGNmYWFhYWZjMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward0\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}","images.g.ts":"","voidbattle.ts":"enum Direction {\n    Left = 0,\n    Up = 1,\n    Right = 2,\n    Down = 3\n}\n\nenum SpriteAction {\n    Idle,\n    Move,\n    Fall,\n    Die\n}\n\nnamespace animation {\n    const stateNamespace = \"__animation\";\n\n    interface AnimationState {\n        animations: SpriteAnimation[];\n    }\n\n    // this will tell the state machines that their animations are still active\n    export function updateActiveStateAnimations(): void {\n        let state: AnimationState = game.currentScene().data[stateNamespace];\n        if(state && state.animations) {\n            state.animations.forEach((anim: SpriteAnimation) => {\n                if (anim.sprite instanceof VoidBattle.VBSprite) {\n                    const vbs = anim.sprite as VoidBattle.VBSprite;\n                    if(vbs.sm)\n                        vbs.sm.animationActive = true;\n                }\n            });\n        }\n    }\n\n    export class Animation {\n        constructor(public frames: Image[], public frameInterval: number = 500, public loop: boolean = false){}\n        runAnimationOnSprite(sprite: Sprite) {\n            animation.runImageAnimation(sprite, this.frames, this.frameInterval, this.loop);\n        }\n    }\n\n    interface AnimationMap {\n        [key: number]: Animation[];\n    }\n\n    let stateMachines: AnimationStateMachine[];\n\n    // should allow you to change the sprite's animation based on its direction\n    // what should i put in here and what should just be part of VBSprite?\n    export class AnimationStateMachine {\n        dir: Direction = Direction.Down;\n        lastDir: Direction = Direction.Down;\n        sprite: VoidBattle.VBSprite;\n        lastAction: number;\n        animationActive: boolean = false;\n        stateAnimations: AnimationMap = {};\n\n        constructor(sprite: VoidBattle.VBSprite) {\n            this.sprite = sprite;\n            this.lastAction = sprite._action;\n            this._init();\n        }\n\n        _init() {\n            if (!stateMachines) {\n                stateMachines = [];\n                game.eventContext().registerFrameHandler(scene.ANIMATION_UPDATE_PRIORITY, () => {\n                    // see which animations are still active\n                    animation.updateActiveStateAnimations();\n\n                    // remove state machines of dead sprites\n                    stateMachines = stateMachines.filter((sm: AnimationStateMachine) => {\n                        if (sm.sprite.flags & sprites.Flag.Destroyed)\n                            return false;\n                        sm.update();\n                        return true;\n                    });\n                });\n            }\n            stateMachines.push(this);\n        }\n\n        update() {\n            // detect if the action has been changed\n            if(this.lastAction != this.sprite._action || this.lastDir != this.dir) {\n                this.lastAction = this.sprite._action;\n                this.lastDir = this.dir;\n                const anim = this.getAnimationFromState(this.lastAction)\n                if(anim)\n                    anim.runAnimationOnSprite(this.sprite);\n            }\n            this.animationActive = false;\n        }\n\n        setDirection(direction: Direction) {\n            this.dir = direction;\n        }\n\n        // You should really put these in the order [left, up, right, down]\n        setStateAnimations(state: number, animations: Animation[]) {\n            this.stateAnimations[state] = animations;\n        }\n\n        getAnimationFromState(state: number): Animation {\n            const anims: Animation[] = this.stateAnimations[state];\n            if (!anims || anims.length == 0)\n                return null;\n            \n            if (anims.length == 1 || this.dir < 0 || this.dir >= anims.length)\n                return anims[0];\n            \n            return anims[this.dir];\n\n        }\n        //constructor(frameInterval: number, )\n    }\n\n}\n\nnamespace VoidBattle {\n    const tileSize = 16;\n    export class VBSprite extends sprites.ExtendableSprite {\n        sm: animation.AnimationStateMachine;\n        dir: Direction = Direction.Down;\n        onDeathCallback: () => void;\n        canPush: boolean = false;\n        pushable: boolean = true;\n\n        constructor(spriteImage: Image, kind?: number, dir?: Direction) {\n            super(spriteImage, kind);\n            this.sm = new animation.AnimationStateMachine(this);\n            this._action = SpriteAction.Idle;\n            if (dir)\n                this.setDirection(dir);\n            else\n                this.setDirection(Direction.Down);\n            \n        }\n\n        update(deltaTimeMillis: number) {\n            if (this.tileKindAt(TileDirection.Center, assets.image`blankTile`)) {\n                sprites.destroy(this, effects.fire, 2000);\n                this.die();\n            }\n        }\n\n        die() {\n            if (this.onDeathCallback){\n                control.runInParallel(this.onDeathCallback);\n            } \n        }\n\n        onDeath(cb: () => void) {\n            this.onDeathCallback = cb;\n        }\n\n        setDirection(dir: Direction) {\n            this.dir = dir;\n            this.sm.setDirection(dir);\n        }\n\n        getNeighboringLocation(dir: Direction): tiles.Location {\n            const loc: tiles.Location = this.tilemapLocation();\n            let neighbor: tiles.Location;\n            switch (dir) {\n                case Direction.Left:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Left);\n                    break;\n                case Direction.Up:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Top);\n                    break;\n                case Direction.Right:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Right);\n                    break;\n                case Direction.Down:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Bottom);\n                    break;\n            }\n            return neighbor;\n        }\n        \n        // moves this sprite in a certain direction. Returns true if the move\n        // was successful\n        move(dir: Direction, turnToFaceDirection: boolean = false): boolean {\n            const neighbor = this.getNeighboringLocation(dir);\n            \n            if(turnToFaceDirection)\n                this.setDirection(dir);\n\n            if (tiles.tileAtLocationIsWall(neighbor)) {\n                scene.cameraShake(2, 200);\n                return false;\n            }\n\n            //game.currentScene().physicsEngine.overlaps(this);\n            tiles.placeOnTile(this, neighbor);\n            return true;\n            \n        }       \n\n    }\n\n    export class VBPlayerSprite extends VBSprite {\n        ctrl: controller.Controller;\n        isMyTurn: boolean = false;\n        turnEndCallback: () => void;\n        storedTile: Image;\n        // failsafe if there are shenanigans with the turns\n        controlsLocked: boolean = false;\n\n        constructor(spriteImage: Image, ctrl: controller.Controller, kind?: number, dir?: Direction){\n            super(spriteImage, kind, dir);\n            this.ctrl = ctrl;\n            this._setupButtonEvents();\n            this.canPush = true;\n            this.pushable = true;\n        }\n\n        _setupButtonEvents() {\n            // gotta do this for literally every event it seems. kill me\n            // maybe there's a better way, but if there is I haven't found one\n            this.ctrl.onButtonEvent(ControllerButton.Left, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Left, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Right, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Right, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Up, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Up, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Down, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Down, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.A, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.A, ControllerButtonEvent.Pressed);\n            });\n        }\n\n        startTurn() {\n            this.isMyTurn = true;\n        }\n\n        onTurnEnd(cb: () => void) {\n            this.turnEndCallback = cb;\n        }\n\n        endTurn() {\n            this.isMyTurn = false;\n            if( this.turnEndCallback ) this.turnEndCallback();\n        }\n\n        handleButtonInput(button: ControllerButton, event: ControllerButtonEvent) {\n            if(this.controlsLocked || !this.isMyTurn) return;\n            let moveCompleted: boolean = false;\n            switch(button) {\n                case ControllerButton.Left:\n                    this.move(Direction.Left, true);\n                    moveCompleted = true;\n                    break;\n                case ControllerButton.Up:\n                    this.move(Direction.Up, true);\n                    moveCompleted = true;\n                    break;\n                case ControllerButton.Right:\n                    this.move(Direction.Right, true);\n                    moveCompleted = true;\n                    break;\n                case ControllerButton.Down:\n                    this.move(Direction.Down, true);\n                    moveCompleted = true;\n                    break;\n                case ControllerButton.A:\n                    moveCompleted = this.tryPrimaryAction();\n                    break;\n            }\n            if (moveCompleted) this.endTurn();\n        }\n\n        // attempts to interact using the A button. If the action fails, return false\n        tryPrimaryAction(): boolean {\n            const neighbor: tiles.Location = this.getNeighboringLocation(this.dir);\n            \n            if (tiles.tileAtLocationIsWall(neighbor))\n                return false;\n            else if (tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && this.storedTile) {\n                tiles.setTileAt(neighbor, this.storedTile);\n                this.storedTile = null;\n                return true;\n            } else if (!tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && !this.storedTile) {\n                this.storedTile = tiles.getTileImage(neighbor);\n                tiles.setTileAt(neighbor, assets.image`blankTile`);\n                return true;\n            }\n            return false;\n        }\n    }\n}","pxt.json":"{\n    \"name\": \"Void Battle\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\",\n        \"images.g.jres\",\n        \"images.g.ts\",\n        \"voidbattle.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}},{"timestamp":1760907969785,"editorVersion":"2.0.59","text":{"main.ts":"tiles.setCurrentTilemap(tilemap`level1`);\r\nscene.centerCameraAt(96, 68);\r\ngame.debug = true;\r\nlet isP1Turn: boolean = true;\r\n\r\nlet player1Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player1, SpriteKind.Player, Direction.Up);\r\nplayer1Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`heroWalkLeft`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkBack`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkRight`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkFront`, 200, true)\r\n]);\r\ntiles.placeOnTile(player1Sprite, tiles.getTileLocation(1, 7));\r\nplayer1Sprite.onTurnEnd(function() {\r\n    isP1Turn = false;\r\n    player2Sprite.startTurn();\r\n});\r\nplayer1Sprite.onDeath(function() {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 2 Wins!\");\r\n    game.gameOverPlayerWin(2);\r\n})\r\n\r\nlet player2Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player2, SpriteKind.Player, Direction.Down);\r\nplayer2Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`witchLeft`, 200, true),\r\n    new animation.Animation(assets.animation`witchBack`, 200, true),\r\n    new animation.Animation(assets.animation`witchRight`, 200, true),\r\n    new animation.Animation(assets.animation`witchForward`, 200, true)\r\n]);\r\ntiles.placeOnTile(player2Sprite, tiles.getTileLocation(3, 7));\r\nplayer2Sprite.onTurnEnd(function () {\r\n    isP1Turn = true;\r\n    player1Sprite.startTurn();\r\n});\r\nplayer2Sprite.onDeath(function () {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 1 Wins!\");\r\n    game.gameOverPlayerWin(1);\r\n})\r\n\r\ngame.onPaint(function() {\r\n    // draw HUD\r\n    screen.drawLine(0, 0, 160, 0, isP1Turn ? 4 : 9);\r\n    screen.fillRect(0, 1, 160, 22, isP1Turn ? 2 : 6);\r\n    screen.drawLine(0, 23, 160, 23, isP1Turn ? 14 : 8);\r\n\r\n    if (player1Sprite.storedTile)\r\n        screen.drawImage(player1Sprite.storedTile, 5, 5);\r\n    \r\n    if (player2Sprite.storedTile)\r\n        screen.drawImage(player2Sprite.storedTile, 141, 5);\r\n\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 2, 2);\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 138, 2);\r\n\r\n    screen.print(\"P\" + (isP1Turn ? \"1\" : \"2\") + \" Turn\", 60, 5, 1);\r\n});\r\n\r\nplayer1Sprite.startTurn();","README.md":" ","assets.json":"","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"level1\": {\n        \"id\": \"level1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAwYzAwMDkwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDIwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMjAwMDAyMDAyMDAwMDAwMDAyMDIyMjIyMjIyMjIyMg==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"sprites.dungeon.floorLight2\",\n            \"sprites.castle.tileGrass1\"\n        ],\n        \"displayName\": \"level1\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","images.g.jres":"{\n    \"image2\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"blankTile\"\n    },\n    \"image1\": {\n        \"data\": \"hwQUABQAAAAAu7u7u7u7u7sAAACwHREREREREdELAADb0bu7u7u7ux29AAAbvQAAAAAAANuxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbvQAAAAAAANuxAADb0bu7u7u7ux29AACwHREREREREdELAAAAu7u7u7u7u7sAAAA=\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"selectedItemFrame\"\n    },\n    \"image3\": {\n        \"data\": \"hwQOAA4AAAARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREA\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"hitboxPlaceholder\"\n    },\n    \"anim1\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim1\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmYyZmYyZmYwMDAwMDBmMGZmMjIyMmZmMGYwMDAwZmZlZmVlZWVmZWZmMDAwMGZmMmUyMjIyZTJmZTAwMDBlZmYyZmZmZjJmZmUwMDAwZmZmZmVlZWVmZmZmMDBmMGVmYmY0ZmY0ZmJmZTBmZjBlZTE0ZGZmZDQxZWUwZjAwZWZkZWRkZGRlZGZlMDAwMGYwZWU0NDQ0ZWUwZjAwMDA0ZTJmMjIyMmYyZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY1NDQ1ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDBmMGVmZjJmZmZmMmZmZTBmZjBmZmZmZWVlZWZmZmYwZjAwZWZiZjRmZjRmYmZlMDAwMGVmMTRkZmZkNDFmZTAwMDBmMDRlZGRkZGU0ZWYwMDAwZWYyZjIyZTJkZGU0MDAwMDRlMmYyMmUyZGQwZTAwMDAwMDRmNTRmNWVlMDAwMDAwMDBmZmZmZmYwZjAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDAwMGVmZjJmZmZmMmZmZTAwMDBmZmZmZWVlZWZmZmYwMGYwZWZiZjRmZjRmYmZlMGZmMGVlMTRkZmZkNDFlZTBmMDBlZmRlZGRkZGVkZmUwMDAwZjBlZTQ0NDRlZTBmMDAwMDRlMmYyMjIyZjJlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjU0NDVmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmMmZmMmZmMDAwMDAwZjBmZjIyMjJmZjBmMDAwMGZmZWZlZWVlZmVmZjAwMDBlZjJlMjIyMmUyZmYwMGYwZWZmMmZmZmYyZmZlMGZmMGZmZmZlZWVlZmZmZjBmMDBlZmJmNGZmNGZiZmUwMDAwZWYxNGRmZmQ0MWZlMDAwMGZlNGVkZGRkZTQwZjAwMDA0ZWRkMmUyMmYyZmUwMDAwZTBkZDJlMjJmMmU0MDAwMDAwZWU1ZjQ1ZjQwMDAwMDAwMGYwZmZmZmZmMDAwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkFront\"\n    },\n    \"anim2\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim2\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDBmZmZmZmYwMDAwMDAwMGYwZjJlZWVlZmYwMDAwMDAyZjIyZWZlZWZlMGYwMDAwZWZlZWZlZWZlZTBmMDBmMDJlMjJlMmZlZmYwZjAwZjBlMmZmZmYyMmUyMGYwMGYwZmZlZWZlZmZmZmZmMDBmMGVlNDRiZjRlZTRmZjAwMDBlZmRkMWZkNGU0ZmUwMDAwZjBkZGRkZTRlZTBmMDAwMGYwNGU0NGVlZmYwMDAwMDBmMDIyZTJkZDA0MDAwMDAwZjAyMmUyZGQwZTAwMDAwMGYwNTVmNGVlMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwMDAwMGZmMGYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZWRlZWVlMGYwMDAwZjA0ZWRlNGQwZjAwMDAwMGYwMjJkZWVkMGYwMDAwMDBmZjU1ZWZmZWZmMDAwMDAwZmZmZmZmZmZmZjAwMDAwMGYwZmYwMGYwMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZGRlNGVlMGYwMDAwZjA0ZTQ0ZWVmZjAwMDAwMGYwMjJlMmRkMDQwMDAwMDBmMDIyZTJkZDBlMDAwMDAwZjA1NWY0ZWUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmMGYyZWVlZWZmMDAwMDAwMmYyMmVmZWVmZTBmMDAwMGVmZWVmZWVmZWUwZjAwZjAyZTIyZTJmZWZmMGYwMGYwZTJmZmZmMjJlMjBmMDBmMGZmZWVmZWZmZmZmZjAwZjBlZTQ0YmY0ZWU0ZmYwMDAwZWZkZDFmZDRlNGZlMDAwMGYwZGRkZGU0ZWUwZjAwMDBmMDRlNDRkZTRkMDAwMDAwZjAyMjIyZGVlZDAwMDAwMGZmNTU0NGVmZmUwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjBmZjAwZjAwZjAwMDA=\",\n        \"displayName\": \"heroWalkLeft\"\n    },\n    \"anim3\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim3\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZmZlZWVlMmYwZjAwMDBmMGVmZWVmZTIyZjIwMDAwZjBlZWZlZWZlZWZlMDAwMGYwZmZlZjJlMjJlMjBmMDBmMDJlMjJmZmZmMmUwZjAwZmZmZmZmZWZlZWZmMGYwMGZmNGVlNGZiNDRlZTBmMDBlZjRlNGRmMWRkZmUwMDAwZjBlZTRlZGRkZDBmMDAwMDAwZmZlZTQ0ZTQwZjAwMDAwMDQwZGQyZTIyMGYwMDAwMDBlMGRkMmUyMjBmMDAwMDAwZjBlZTRmNTUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlZWVkZWRkMGYwMDAwMDBmMGQ0ZWRlNDBmMDAwMDAwZjBkZWVkMjIwZjAwMDAwMGZmZWZmZTU1ZmYwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjAwZjAwZmYwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlNGVkZGRkMGYwMDAwMDBmZmVlNDRlNDBmMDAwMDAwNDBkZDJlMjIwZjAwMDAwMGUwZGQyZTIyMGYwMDAwMDBmMGVlNGY1NTBmMDAwMDAwMDBmZmZmZmYwMDAwMDAwMDAwZjBmZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmYwMDAwMDAwMGZmZWVlZTJmMGYwMDAwZjBlZmVlZmUyMmYyMDAwMGYwZWVmZWVmZWVmZTAwMDBmMGZmZWYyZTIyZTIwZjAwZjAyZTIyZmZmZjJlMGYwMGZmZmZmZmVmZWVmZjBmMDBmZjRlZTRmYjQ0ZWUwZjAwZWY0ZTRkZjFkZGZlMDAwMGYwZWU0ZWRkZGQwZjAwMDAwMGQ0ZWQ0NGU0MGYwMDAwMDBkZWVkMjIyMjBmMDAwMDAwZWZmZTQ0NTVmZjAwMDAwMGZmZmZmZmZmZmYwMDAwMDBmMDBmMDBmZjBmMDA=\",\n        \"displayName\": \"heroWalkRight\"\n    },\n    \"anim4\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim4\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmZlZWVlZmYwMDAwMDBmMGVlZmVlZmVlMGYwMDAwZmZmZjJmZjJmZmZmMDAwMGZmMmUyZWUyZTJmZjAwMDBlZmYyZjIyZjJmZmUwMDAwZmYyZmUyMmVmMmZmMDBmMGVmMmZlZmZlZjJmZTBmZjBlZWZmZWVlZWVmZWUwZjAwZWZlZWVlZWVlZWZlMDAwMGYwZWVlZWVlZWUwZjAwMDA0ZWZmZmZmZmZmZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY0NDQ0ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmMGZmMmZmMmZmMGYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMmZmZjJmZTAwMDBmZjJmZWYyZWYyZmYwMDAwZWZmMmVmMmVlZmZlMDBmMGVmZmZlZWZlZWVmZTBmZjBlZmVlZWVlZWVlZmUwZjAwZjBlZWVlZWVlZTBmMDAwMGUwZmZmZmZmZmZlNDAwMDA0MDJmMjIyMmRlNGQwMDAwZTBmZmZmZmZlZTA0MDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmZmZmMmZmMmZmZmYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMjJmMmZmZTAwMDBmZjJmZTIyZWYyZmYwMGYwZWYyZmVmZmVmMmZlMGZmMGVlZmZlZWVlZWZlZTBmMDBlZmVlZWVlZWVlZmUwMDAwZjBlZWVlZWVlZTBmMDAwMDRlZmZmZmZmZmZlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjQ0NDRmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmZWVlZWZmMDAwMDAwZjBlZWZlZWZlZTBmMDAwMGYwZmYyZmYyZmYwZjAwMDBmZjJlMmVlMmUyZmYwMDAwZWYyZmZmMmYyZmZlMDAwMGZmMmZlMmZlZjJmZjAwMDBlZmZlZTJmZTJmZmUwMGYwZWZlZWVmZWVmZmZlMGZmMGVmZWVlZWVlZWVmZTBmMDBmMGVlZWVlZWVlMGYwMDAwNGVmZmZmZmZmZjBlMDAwMGQ0ZWQyMjIyZjIwNDAwMDA0MGVlZmZmZmZmMGUwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkBack\"\n    },\n    \"anim5\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim5\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwY2MwMDAwMDAwMDAwMDBiY2M1MDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmJmZWZmZWZiZmYwMDAwZmYxZmJmZmJmMWZmMDAwMGYwYmZiYmJiZmIwZjAwMDBlMGZlZWVlZWVmMGUwMDAwYmViY2I1NWJmYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward\"\n    },\n    \"anim6\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim6\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGNjMGMwMDAwMDAwMDAwMDA1Y2NiMDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGYwZmZmZmZmZmYwZjAwMDBlMGZlZmZmZmZmMGUwMDAwYmViZmI1NWJjYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZWJmZWZmYmZlYjAwMDBlMGJiYmU1YmY1ZWUwMDAwMDBlYzVlNTU1NTBmMDAwMDAwZjBmZmZmZmYwMDAwMDAwMDAwYzBjYzAwMDAwMDAwMDAwMGJjYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZmVmZmZmZWYwZTAwMDBiZWJjYjU1YmZiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMDAwNWMwYzAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmMGZmZmZmZmVlMGYwMDAwYmVmYmVlZWViZTBlMDAwMGVlNWZiNWViYmIwZTAwMDBmMDU1NTVlNWNlMDAwMDAwMDBmZmZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchBack\"\n    },\n    \"anim7\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim7\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDA1YzBjMDAwMDAwMDAwMGNjNTVjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGYwNTU1NTU1NTVmZjAwMDAwMGVmZWViZmVlZmYwMDAwMDBlZmJiMWZmYmZmMDAwMDAwYmZiYmJiZmIwZjAwMDAwMGYwZWVlZWVmMGUwMDAwMDBmMGI1ZWJiYjBlMDAwMDAwNWY1NWU1YmIwZTAwMDAwMGJjNTU1NWVlMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGNjYzUwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiZWJmZTBmMDAwMDAwZjBlZWJlZWIwZjAwMDAwMDVmYmJiZWViMDAwMDAwMDA1YzU1ZTVmZTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiYmJmYjBmMDAwMDAwZjBlZWVlZWYwZTAwMDAwMGYwYjVlYmJiMGUwMDAwMDA1ZjU1ZTViYjBlMDAwMDAwYmM1NTU1ZWUwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwY2NjNTAwMDAwMDAwMDBjYzU1YzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmMDU1NTU1NTU1ZmYwMDAwMDBlZmVlYmZlZWZmMDAwMDAwZWZiYjFmZmJmZjAwMDAwMGJmYmJiYmZiMGYwMDAwMDBmMGVlZWViZWViMDAwMDAwNWZiNWJiYmVlYjAwMDAwMDVjNTU1NWVlMGUwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchLeft\"\n    },\n    \"anim8\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim8\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDBjMGM1MDAwMDAwMDAwMGNjNWM1NWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTUwZjAwMDBmZmVlZmJlZWZlMDAwMDAwZmZiZmYxYmJmZTAwMDAwMGYwYmZiYmJiZmIwMDAwMDBlMGZlZWVlZTBmMDAwMDAwZTBiYmJlNWIwZjAwMDAwMGUwYmI1ZTU1ZjUwMDAwMDAwMGVlNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjY2MwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBlZmJlYmJmYjAwMDAwMGYwYmVlYmVlMGYwMDAwMDAwMGJlZWJiYmY1MDAwMDAwMDBlZjVlNTVjNTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBiZmJiYmJmYjAwMDAwMGUwZmVlZWVlMGYwMDAwMDBlMGJiYmU1YjBmMDAwMDAwZTBiYjVlNTVmNTAwMDAwMDAwZWU1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwNWNjYzAwMDAwMDAwMDBjYzVjNTVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1MGYwMDAwZmZlZWZiZWVmZTAwMDAwMGZmYmZmMWJiZmUwMDAwMDBmMGJmYmJiYmZiMDAwMDAwYmVlYmVlZWUwZjAwMDAwMGJlZWJiYjViZjUwMDAwMDBlMGVlNTU1NWM1MDAwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchRight\"\n    },\n    \"anim9\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim9\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDBjZmZhMDAwMDAwMDAwMGZmYWZmYWZmMDAwMDAwZmZmY2FhYWFmZmZmMDBmMGNjY2FhYWFhYWNjYzBmZjBhY2NhYWNjYWFjY2EwZjAwYWZhYWNjY2NhYWZhMDAwMGVmYWFhYWFhYWFmZTAwMDA0ZjllYmZmYmU5ZjQwMDAwNGYxNGQ4OGQ0MWY0MDAwMGYwZDRkZGRkNGQwZjAwMDBiMGZiYmJiYmJmMGIwMDAwZGJjZmNhYWNmY2JkMDAwMGJiYWZhYWFhZmFiYjAwMDAwMGNmYWFhYWZjMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward0\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}","images.g.ts":"","voidbattle.ts":"enum Direction {\n    Left = 0,\n    Up = 1,\n    Right = 2,\n    Down = 3\n}\n\nenum SpriteAction {\n    Idle,\n    Move,\n    Fall,\n    Die\n}\n\nnamespace animation {\n    const stateNamespace = \"__animation\";\n\n    interface AnimationState {\n        animations: SpriteAnimation[];\n    }\n\n    // this will tell the state machines that their animations are still active\n    export function updateActiveStateAnimations(): void {\n        let state: AnimationState = game.currentScene().data[stateNamespace];\n        if(state && state.animations) {\n            state.animations.forEach((anim: SpriteAnimation) => {\n                if (anim.sprite instanceof VoidBattle.VBSprite) {\n                    const vbs = anim.sprite as VoidBattle.VBSprite;\n                    if(vbs.sm)\n                        vbs.sm.animationActive = true;\n                }\n            });\n        }\n    }\n\n    export class Animation {\n        constructor(public frames: Image[], public frameInterval: number = 500, public loop: boolean = false){}\n        runAnimationOnSprite(sprite: Sprite) {\n            animation.runImageAnimation(sprite, this.frames, this.frameInterval, this.loop);\n        }\n    }\n\n    interface AnimationMap {\n        [key: number]: Animation[];\n    }\n\n    let stateMachines: AnimationStateMachine[];\n\n    // should allow you to change the sprite's animation based on its direction\n    // what should i put in here and what should just be part of VBSprite?\n    export class AnimationStateMachine {\n        dir: Direction = Direction.Down;\n        lastDir: Direction = Direction.Down;\n        sprite: VoidBattle.VBSprite;\n        lastAction: number;\n        animationActive: boolean = false;\n        stateAnimations: AnimationMap = {};\n\n        constructor(sprite: VoidBattle.VBSprite) {\n            this.sprite = sprite;\n            this.lastAction = sprite._action;\n            this._init();\n        }\n\n        _init() {\n            if (!stateMachines) {\n                stateMachines = [];\n                game.eventContext().registerFrameHandler(scene.ANIMATION_UPDATE_PRIORITY, () => {\n                    // see which animations are still active\n                    animation.updateActiveStateAnimations();\n\n                    // remove state machines of dead sprites\n                    stateMachines = stateMachines.filter((sm: AnimationStateMachine) => {\n                        if (sm.sprite.flags & sprites.Flag.Destroyed)\n                            return false;\n                        sm.update();\n                        return true;\n                    });\n                });\n            }\n            stateMachines.push(this);\n        }\n\n        update() {\n            // detect if the action has been changed\n            if(this.lastAction != this.sprite._action || this.lastDir != this.dir) {\n                this.lastAction = this.sprite._action;\n                this.lastDir = this.dir;\n                const anim = this.getAnimationFromState(this.lastAction)\n                if(anim)\n                    anim.runAnimationOnSprite(this.sprite);\n            }\n            this.animationActive = false;\n        }\n\n        setDirection(direction: Direction) {\n            this.dir = direction;\n        }\n\n        // You should really put these in the order [left, up, right, down]\n        setStateAnimations(state: number, animations: Animation[]) {\n            this.stateAnimations[state] = animations;\n        }\n\n        getAnimationFromState(state: number): Animation {\n            const anims: Animation[] = this.stateAnimations[state];\n            if (!anims || anims.length == 0)\n                return null;\n            \n            if (anims.length == 1 || this.dir < 0 || this.dir >= anims.length)\n                return anims[0];\n            \n            return anims[this.dir];\n\n        }\n        //constructor(frameInterval: number, )\n    }\n\n}\n\nnamespace VoidBattle {\n    let collisionSprite: Sprite \n\n    // does not work\n    export function getCollisionsAtLocation(location: tiles.Location): Sprite[] {\n        const s: Sprite = sprites.create(assets.image`hitboxPlaceholder`);\n        s.setFlag(SpriteFlag.Invisible, true);\n        tiles.placeOnTile(s, location);\n        \n        const overlaps = game.currentScene().physicsEngine.overlaps(s);\n        sprites.destroy(s);\n        return overlaps;\n    }\n\n    export function vbCollisionCheck(location: tiles.Location, callback: (overlaps: Sprite[]) => void) {\n        control.runInParallel(() => {\n            tiles.placeOnTile(collisionSprite, location);\n            pause(1);\n            const overlaps = game.currentScene().physicsEngine.overlaps(collisionSprite);\n            callback(overlaps);\n        });\n    }\n\n    const tileSize = 16;\n    export class VBSprite extends sprites.ExtendableSprite {\n        sm: animation.AnimationStateMachine;\n        dir: Direction = Direction.Down;\n        onDeathCallback: () => void;\n        canPush: boolean = false;\n        pushable: boolean = false;\n\n        constructor(spriteImage: Image, kind?: number, dir?: Direction) {\n            super(spriteImage, kind);\n            this.flags ^= SpriteFlag.GhostThroughWalls;\n            this.setDimensions(24, 24);\n            this.sm = new animation.AnimationStateMachine(this);\n            this._action = SpriteAction.Idle;\n\n            if(!collisionSprite) {\n                collisionSprite = sprites.create(assets.image`hitboxPlaceholder`);\n                collisionSprite.setFlag(SpriteFlag.Invisible, true);\n                tiles.placeOnTile(collisionSprite, tiles.getTileLocation(-1, -1));\n            }\n\n            if (dir)\n                this.setDirection(dir);\n            else\n                this.setDirection(Direction.Down);\n            \n        }\n\n        update(deltaTimeMillis: number) {\n            if (this.tileKindAt(TileDirection.Center, assets.image`blankTile`)) {\n                sprites.destroy(this, effects.fire, 2000);\n                this.die();\n            }\n        }\n\n        die() {\n            if (this.onDeathCallback){\n                control.runInParallel(this.onDeathCallback);\n            } \n        }\n\n        onDeath(cb: () => void) {\n            this.onDeathCallback = cb;\n        }\n\n        setDirection(dir: Direction) {\n            this.dir = dir;\n            this.sm.setDirection(dir);\n        }\n\n        getNeighboringLocation(dir: Direction): tiles.Location {\n            const loc: tiles.Location = this.tilemapLocation();\n            let neighbor: tiles.Location;\n            switch (dir) {\n                case Direction.Left:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Left);\n                    break;\n                case Direction.Up:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Top);\n                    break;\n                case Direction.Right:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Right);\n                    break;\n                case Direction.Down:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Bottom);\n                    break;\n            }\n            return neighbor;\n        }\n        \n        // moves this sprite in a certain direction. Returns true if the move\n        // was successful\n        move(dir: Direction, turnToFaceDirection: boolean = false): boolean {\n            const neighbor = this.getNeighboringLocation(dir);\n            \n            if(turnToFaceDirection)\n                this.setDirection(dir);\n\n            if (tiles.tileAtLocationIsWall(neighbor)) {\n                scene.cameraShake(2, 200);\n                return false;\n            }\n        \n            const overlaps: Sprite[] = getCollisionsAtLocation(neighbor);\n\n            if(overlaps.length > 0)\n                return false;\n            \n            tiles.placeOnTile(this, neighbor);\n            return true;\n            \n        }\n\n\n\n    }\n\n    export class VBPlayerSprite extends VBSprite {\n        ctrl: controller.Controller;\n        isMyTurn: boolean = false;\n        turnEndCallback: () => void;\n        storedTile: Image;\n        // failsafe if there are shenanigans with the turns\n        controlsLocked: boolean = false;\n\n        constructor(spriteImage: Image, ctrl: controller.Controller, kind?: number, dir?: Direction){\n            super(spriteImage, kind, dir);\n            this.ctrl = ctrl;\n            this._setupButtonEvents();\n            this.canPush = true;\n            this.pushable = true;\n        }\n\n        _setupButtonEvents() {\n            // gotta do this for literally every event it seems. kill me\n            // maybe there's a better way, but if there is I haven't found one\n            this.ctrl.onButtonEvent(ControllerButton.Left, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Left, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Right, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Right, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Up, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Up, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Down, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Down, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.A, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.A, ControllerButtonEvent.Pressed);\n            });\n        }\n\n        startTurn() {\n            this.isMyTurn = true;\n        }\n\n        onTurnEnd(cb: () => void) {\n            this.turnEndCallback = cb;\n        }\n\n        endTurn() {\n            this.isMyTurn = false;\n            if( this.turnEndCallback ) this.turnEndCallback();\n        }\n\n        handleButtonInput(button: ControllerButton, event: ControllerButtonEvent) {\n            if(this.controlsLocked || !this.isMyTurn) return;\n            let moveCompleted: boolean = false;\n            switch(button) {\n                case ControllerButton.Left:\n                    this.move(Direction.Left, true);\n                    moveCompleted = true;\n                    break;\n                case ControllerButton.Up:\n                    this.move(Direction.Up, true);\n                    moveCompleted = true;\n                    break;\n                case ControllerButton.Right:\n                    this.move(Direction.Right, true);\n                    moveCompleted = true;\n                    break;\n                case ControllerButton.Down:\n                    this.move(Direction.Down, true);\n                    moveCompleted = true;\n                    break;\n                case ControllerButton.A:\n                    moveCompleted = this.tryPrimaryAction();\n                    break;\n            }\n            if (moveCompleted) this.endTurn();\n        }\n\n        // attempts to interact using the A button. If the action fails, return false\n        tryPrimaryAction(): boolean {\n            const neighbor: tiles.Location = this.getNeighboringLocation(this.dir);\n            \n            if (tiles.tileAtLocationIsWall(neighbor))\n                return false;\n            else if (tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && this.storedTile) {\n                tiles.setTileAt(neighbor, this.storedTile);\n                this.storedTile = null;\n                return true;\n            } else if (!tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && !this.storedTile) {\n                this.storedTile = tiles.getTileImage(neighbor);\n                tiles.setTileAt(neighbor, assets.image`blankTile`);\n                return true;\n            }\n            return false;\n        }\n    }\n}","pxt.json":"{\n    \"name\": \"Void Battle\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\",\n        \"images.g.jres\",\n        \"images.g.ts\",\n        \"voidbattle.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}},{"timestamp":1761073047414,"editorVersion":"2.0.60","text":{"main.ts":"tiles.setCurrentTilemap(tilemap`level1`);\r\nscene.centerCameraAt(96, 68);\r\n//game.debug = true;\r\nlet isP1Turn: boolean = true;\r\n\r\nlet player1Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player1, SpriteKind.Player, Direction.Up);\r\nplayer1Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`heroWalkLeft`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkBack`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkRight`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkFront`, 200, true)\r\n]);\r\ntiles.placeOnTile(player1Sprite, tiles.getTileLocation(1, 7));\r\nplayer1Sprite.onTurnEnd(function() {\r\n    isP1Turn = false;\r\n    player2Sprite.startTurn();\r\n});\r\nplayer1Sprite.onDeath(function() {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 2 Wins!\");\r\n    game.gameOverPlayerWin(2);\r\n})\r\n\r\nlet player2Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player2, SpriteKind.Player, Direction.Down);\r\nplayer2Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`witchLeft`, 200, true),\r\n    new animation.Animation(assets.animation`witchBack`, 200, true),\r\n    new animation.Animation(assets.animation`witchRight`, 200, true),\r\n    new animation.Animation(assets.animation`witchForward`, 200, true)\r\n]);\r\ntiles.placeOnTile(player2Sprite, tiles.getTileLocation(3, 7));\r\n//tiles.placeOnTile(player2Sprite, tiles.getTileLocation(10, 2));\r\nplayer2Sprite.onTurnEnd(function () {\r\n    isP1Turn = true;\r\n    player1Sprite.startTurn();\r\n});\r\nplayer2Sprite.onDeath(function () {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 1 Wins!\");\r\n    game.gameOverPlayerWin(1);\r\n})\r\n\r\ngame.onPaint(function() {\r\n    // draw HUD\r\n    screen.drawLine(0, 0, 160, 0, isP1Turn ? 4 : 9);\r\n    screen.fillRect(0, 1, 160, 22, isP1Turn ? 2 : 6);\r\n    screen.drawLine(0, 23, 160, 23, isP1Turn ? 14 : 8);\r\n\r\n    if (player1Sprite.storedTile)\r\n        screen.drawImage(player1Sprite.storedTile, 5, 5);\r\n    \r\n    if (player2Sprite.storedTile)\r\n        screen.drawImage(player2Sprite.storedTile, 141, 5);\r\n\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 2, 2);\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 138, 2);\r\n\r\n    screen.print(\"P\" + (isP1Turn ? \"1\" : \"2\") + \" Turn\", 60, 5, 1);\r\n});\r\n\r\nplayer1Sprite.startTurn();","README.md":" ","assets.json":"","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"level1\": {\n        \"id\": \"level1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAwYzAwMDkwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDIwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMjAwMDAyMDAyMDAwMDAwMDAyMDIyMjIyMjIyMjIyMg==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"sprites.dungeon.floorLight2\",\n            \"sprites.castle.tileGrass1\"\n        ],\n        \"displayName\": \"level1\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","images.g.jres":"{\n    \"image2\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"blankTile\"\n    },\n    \"image1\": {\n        \"data\": \"hwQUABQAAAAAu7u7u7u7u7sAAACwHREREREREdELAADb0bu7u7u7ux29AAAbvQAAAAAAANuxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbvQAAAAAAANuxAADb0bu7u7u7ux29AACwHREREREREdELAAAAu7u7u7u7u7sAAAA=\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"selectedItemFrame\"\n    },\n    \"image3\": {\n        \"data\": \"hwQOAA4AAAARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREA\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"hitboxPlaceholder\"\n    },\n    \"anim1\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim1\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmYyZmYyZmYwMDAwMDBmMGZmMjIyMmZmMGYwMDAwZmZlZmVlZWVmZWZmMDAwMGZmMmUyMjIyZTJmZTAwMDBlZmYyZmZmZjJmZmUwMDAwZmZmZmVlZWVmZmZmMDBmMGVmYmY0ZmY0ZmJmZTBmZjBlZTE0ZGZmZDQxZWUwZjAwZWZkZWRkZGRlZGZlMDAwMGYwZWU0NDQ0ZWUwZjAwMDA0ZTJmMjIyMmYyZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY1NDQ1ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDBmMGVmZjJmZmZmMmZmZTBmZjBmZmZmZWVlZWZmZmYwZjAwZWZiZjRmZjRmYmZlMDAwMGVmMTRkZmZkNDFmZTAwMDBmMDRlZGRkZGU0ZWYwMDAwZWYyZjIyZTJkZGU0MDAwMDRlMmYyMmUyZGQwZTAwMDAwMDRmNTRmNWVlMDAwMDAwMDBmZmZmZmYwZjAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDAwMGVmZjJmZmZmMmZmZTAwMDBmZmZmZWVlZWZmZmYwMGYwZWZiZjRmZjRmYmZlMGZmMGVlMTRkZmZkNDFlZTBmMDBlZmRlZGRkZGVkZmUwMDAwZjBlZTQ0NDRlZTBmMDAwMDRlMmYyMjIyZjJlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjU0NDVmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmMmZmMmZmMDAwMDAwZjBmZjIyMjJmZjBmMDAwMGZmZWZlZWVlZmVmZjAwMDBlZjJlMjIyMmUyZmYwMGYwZWZmMmZmZmYyZmZlMGZmMGZmZmZlZWVlZmZmZjBmMDBlZmJmNGZmNGZiZmUwMDAwZWYxNGRmZmQ0MWZlMDAwMGZlNGVkZGRkZTQwZjAwMDA0ZWRkMmUyMmYyZmUwMDAwZTBkZDJlMjJmMmU0MDAwMDAwZWU1ZjQ1ZjQwMDAwMDAwMGYwZmZmZmZmMDAwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkFront\"\n    },\n    \"anim2\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim2\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDBmZmZmZmYwMDAwMDAwMGYwZjJlZWVlZmYwMDAwMDAyZjIyZWZlZWZlMGYwMDAwZWZlZWZlZWZlZTBmMDBmMDJlMjJlMmZlZmYwZjAwZjBlMmZmZmYyMmUyMGYwMGYwZmZlZWZlZmZmZmZmMDBmMGVlNDRiZjRlZTRmZjAwMDBlZmRkMWZkNGU0ZmUwMDAwZjBkZGRkZTRlZTBmMDAwMGYwNGU0NGVlZmYwMDAwMDBmMDIyZTJkZDA0MDAwMDAwZjAyMmUyZGQwZTAwMDAwMGYwNTVmNGVlMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwMDAwMGZmMGYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZWRlZWVlMGYwMDAwZjA0ZWRlNGQwZjAwMDAwMGYwMjJkZWVkMGYwMDAwMDBmZjU1ZWZmZWZmMDAwMDAwZmZmZmZmZmZmZjAwMDAwMGYwZmYwMGYwMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZGRlNGVlMGYwMDAwZjA0ZTQ0ZWVmZjAwMDAwMGYwMjJlMmRkMDQwMDAwMDBmMDIyZTJkZDBlMDAwMDAwZjA1NWY0ZWUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmMGYyZWVlZWZmMDAwMDAwMmYyMmVmZWVmZTBmMDAwMGVmZWVmZWVmZWUwZjAwZjAyZTIyZTJmZWZmMGYwMGYwZTJmZmZmMjJlMjBmMDBmMGZmZWVmZWZmZmZmZjAwZjBlZTQ0YmY0ZWU0ZmYwMDAwZWZkZDFmZDRlNGZlMDAwMGYwZGRkZGU0ZWUwZjAwMDBmMDRlNDRkZTRkMDAwMDAwZjAyMjIyZGVlZDAwMDAwMGZmNTU0NGVmZmUwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjBmZjAwZjAwZjAwMDA=\",\n        \"displayName\": \"heroWalkLeft\"\n    },\n    \"anim3\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim3\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZmZlZWVlMmYwZjAwMDBmMGVmZWVmZTIyZjIwMDAwZjBlZWZlZWZlZWZlMDAwMGYwZmZlZjJlMjJlMjBmMDBmMDJlMjJmZmZmMmUwZjAwZmZmZmZmZWZlZWZmMGYwMGZmNGVlNGZiNDRlZTBmMDBlZjRlNGRmMWRkZmUwMDAwZjBlZTRlZGRkZDBmMDAwMDAwZmZlZTQ0ZTQwZjAwMDAwMDQwZGQyZTIyMGYwMDAwMDBlMGRkMmUyMjBmMDAwMDAwZjBlZTRmNTUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlZWVkZWRkMGYwMDAwMDBmMGQ0ZWRlNDBmMDAwMDAwZjBkZWVkMjIwZjAwMDAwMGZmZWZmZTU1ZmYwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjAwZjAwZmYwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlNGVkZGRkMGYwMDAwMDBmZmVlNDRlNDBmMDAwMDAwNDBkZDJlMjIwZjAwMDAwMGUwZGQyZTIyMGYwMDAwMDBmMGVlNGY1NTBmMDAwMDAwMDBmZmZmZmYwMDAwMDAwMDAwZjBmZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmYwMDAwMDAwMGZmZWVlZTJmMGYwMDAwZjBlZmVlZmUyMmYyMDAwMGYwZWVmZWVmZWVmZTAwMDBmMGZmZWYyZTIyZTIwZjAwZjAyZTIyZmZmZjJlMGYwMGZmZmZmZmVmZWVmZjBmMDBmZjRlZTRmYjQ0ZWUwZjAwZWY0ZTRkZjFkZGZlMDAwMGYwZWU0ZWRkZGQwZjAwMDAwMGQ0ZWQ0NGU0MGYwMDAwMDBkZWVkMjIyMjBmMDAwMDAwZWZmZTQ0NTVmZjAwMDAwMGZmZmZmZmZmZmYwMDAwMDBmMDBmMDBmZjBmMDA=\",\n        \"displayName\": \"heroWalkRight\"\n    },\n    \"anim4\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim4\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmZlZWVlZmYwMDAwMDBmMGVlZmVlZmVlMGYwMDAwZmZmZjJmZjJmZmZmMDAwMGZmMmUyZWUyZTJmZjAwMDBlZmYyZjIyZjJmZmUwMDAwZmYyZmUyMmVmMmZmMDBmMGVmMmZlZmZlZjJmZTBmZjBlZWZmZWVlZWVmZWUwZjAwZWZlZWVlZWVlZWZlMDAwMGYwZWVlZWVlZWUwZjAwMDA0ZWZmZmZmZmZmZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY0NDQ0ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmMGZmMmZmMmZmMGYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMmZmZjJmZTAwMDBmZjJmZWYyZWYyZmYwMDAwZWZmMmVmMmVlZmZlMDBmMGVmZmZlZWZlZWVmZTBmZjBlZmVlZWVlZWVlZmUwZjAwZjBlZWVlZWVlZTBmMDAwMGUwZmZmZmZmZmZlNDAwMDA0MDJmMjIyMmRlNGQwMDAwZTBmZmZmZmZlZTA0MDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmZmZmMmZmMmZmZmYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMjJmMmZmZTAwMDBmZjJmZTIyZWYyZmYwMGYwZWYyZmVmZmVmMmZlMGZmMGVlZmZlZWVlZWZlZTBmMDBlZmVlZWVlZWVlZmUwMDAwZjBlZWVlZWVlZTBmMDAwMDRlZmZmZmZmZmZlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjQ0NDRmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmZWVlZWZmMDAwMDAwZjBlZWZlZWZlZTBmMDAwMGYwZmYyZmYyZmYwZjAwMDBmZjJlMmVlMmUyZmYwMDAwZWYyZmZmMmYyZmZlMDAwMGZmMmZlMmZlZjJmZjAwMDBlZmZlZTJmZTJmZmUwMGYwZWZlZWVmZWVmZmZlMGZmMGVmZWVlZWVlZWVmZTBmMDBmMGVlZWVlZWVlMGYwMDAwNGVmZmZmZmZmZjBlMDAwMGQ0ZWQyMjIyZjIwNDAwMDA0MGVlZmZmZmZmMGUwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkBack\"\n    },\n    \"anim5\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim5\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwY2MwMDAwMDAwMDAwMDBiY2M1MDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmJmZWZmZWZiZmYwMDAwZmYxZmJmZmJmMWZmMDAwMGYwYmZiYmJiZmIwZjAwMDBlMGZlZWVlZWVmMGUwMDAwYmViY2I1NWJmYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward\"\n    },\n    \"anim6\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim6\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGNjMGMwMDAwMDAwMDAwMDA1Y2NiMDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGYwZmZmZmZmZmYwZjAwMDBlMGZlZmZmZmZmMGUwMDAwYmViZmI1NWJjYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZWJmZWZmYmZlYjAwMDBlMGJiYmU1YmY1ZWUwMDAwMDBlYzVlNTU1NTBmMDAwMDAwZjBmZmZmZmYwMDAwMDAwMDAwYzBjYzAwMDAwMDAwMDAwMGJjYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZmVmZmZmZWYwZTAwMDBiZWJjYjU1YmZiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMDAwNWMwYzAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmMGZmZmZmZmVlMGYwMDAwYmVmYmVlZWViZTBlMDAwMGVlNWZiNWViYmIwZTAwMDBmMDU1NTVlNWNlMDAwMDAwMDBmZmZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchBack\"\n    },\n    \"anim7\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim7\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDA1YzBjMDAwMDAwMDAwMGNjNTVjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGYwNTU1NTU1NTVmZjAwMDAwMGVmZWViZmVlZmYwMDAwMDBlZmJiMWZmYmZmMDAwMDAwYmZiYmJiZmIwZjAwMDAwMGYwZWVlZWVmMGUwMDAwMDBmMGI1ZWJiYjBlMDAwMDAwNWY1NWU1YmIwZTAwMDAwMGJjNTU1NWVlMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGNjYzUwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiZWJmZTBmMDAwMDAwZjBlZWJlZWIwZjAwMDAwMDVmYmJiZWViMDAwMDAwMDA1YzU1ZTVmZTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiYmJmYjBmMDAwMDAwZjBlZWVlZWYwZTAwMDAwMGYwYjVlYmJiMGUwMDAwMDA1ZjU1ZTViYjBlMDAwMDAwYmM1NTU1ZWUwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwY2NjNTAwMDAwMDAwMDBjYzU1YzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmMDU1NTU1NTU1ZmYwMDAwMDBlZmVlYmZlZWZmMDAwMDAwZWZiYjFmZmJmZjAwMDAwMGJmYmJiYmZiMGYwMDAwMDBmMGVlZWViZWViMDAwMDAwNWZiNWJiYmVlYjAwMDAwMDVjNTU1NWVlMGUwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchLeft\"\n    },\n    \"anim8\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim8\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDBjMGM1MDAwMDAwMDAwMGNjNWM1NWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTUwZjAwMDBmZmVlZmJlZWZlMDAwMDAwZmZiZmYxYmJmZTAwMDAwMGYwYmZiYmJiZmIwMDAwMDBlMGZlZWVlZTBmMDAwMDAwZTBiYmJlNWIwZjAwMDAwMGUwYmI1ZTU1ZjUwMDAwMDAwMGVlNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjY2MwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBlZmJlYmJmYjAwMDAwMGYwYmVlYmVlMGYwMDAwMDAwMGJlZWJiYmY1MDAwMDAwMDBlZjVlNTVjNTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBiZmJiYmJmYjAwMDAwMGUwZmVlZWVlMGYwMDAwMDBlMGJiYmU1YjBmMDAwMDAwZTBiYjVlNTVmNTAwMDAwMDAwZWU1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwNWNjYzAwMDAwMDAwMDBjYzVjNTVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1MGYwMDAwZmZlZWZiZWVmZTAwMDAwMGZmYmZmMWJiZmUwMDAwMDBmMGJmYmJiYmZiMDAwMDAwYmVlYmVlZWUwZjAwMDAwMGJlZWJiYjViZjUwMDAwMDBlMGVlNTU1NWM1MDAwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchRight\"\n    },\n    \"anim9\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim9\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDBjZmZhMDAwMDAwMDAwMGZmYWZmYWZmMDAwMDAwZmZmY2FhYWFmZmZmMDBmMGNjY2FhYWFhYWNjYzBmZjBhY2NhYWNjYWFjY2EwZjAwYWZhYWNjY2NhYWZhMDAwMGVmYWFhYWFhYWFmZTAwMDA0ZjllYmZmYmU5ZjQwMDAwNGYxNGQ4OGQ0MWY0MDAwMGYwZDRkZGRkNGQwZjAwMDBiMGZiYmJiYmJmMGIwMDAwZGJjZmNhYWNmY2JkMDAwMGJiYWZhYWFhZmFiYjAwMDAwMGNmYWFhYWZjMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward0\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}","images.g.ts":"","voidbattle.ts":"enum Direction {\n    Left = 0,\n    Up = 1,\n    Right = 2,\n    Down = 3\n}\n\nenum SpriteAction {\n    Idle,\n    Move,\n    Fall,\n    Die\n}\n\nnamespace animation {\n    const stateNamespace = \"__animation\";\n\n    interface AnimationState {\n        animations: SpriteAnimation[];\n    }\n\n    // this will tell the state machines that their animations are still active\n    export function updateActiveStateAnimations(): void {\n        let state: AnimationState = game.currentScene().data[stateNamespace];\n        if(state && state.animations) {\n            state.animations.forEach((anim: SpriteAnimation) => {\n                if (anim.sprite instanceof VoidBattle.VBSprite) {\n                    const vbs = anim.sprite as VoidBattle.VBSprite;\n                    if(vbs.sm)\n                        vbs.sm.animationActive = true;\n                }\n            });\n        }\n    }\n\n    export class Animation {\n        constructor(public frames: Image[], public frameInterval: number = 500, public loop: boolean = false){}\n        runAnimationOnSprite(sprite: Sprite) {\n            animation.runImageAnimation(sprite, this.frames, this.frameInterval, this.loop);\n        }\n    }\n\n    interface AnimationMap {\n        [key: number]: Animation[];\n    }\n\n    let stateMachines: AnimationStateMachine[];\n\n    // should allow you to change the sprite's animation based on its direction\n    // what should i put in here and what should just be part of VBSprite?\n    export class AnimationStateMachine {\n        dir: Direction = Direction.Down;\n        lastDir: Direction = Direction.Down;\n        sprite: VoidBattle.VBSprite;\n        lastAction: number;\n        animationActive: boolean = false;\n        stateAnimations: AnimationMap = {};\n\n        constructor(sprite: VoidBattle.VBSprite) {\n            this.sprite = sprite;\n            this.lastAction = sprite._action;\n            this._init();\n        }\n\n        _init() {\n            if (!stateMachines) {\n                stateMachines = [];\n                game.eventContext().registerFrameHandler(scene.ANIMATION_UPDATE_PRIORITY, () => {\n                    // see which animations are still active\n                    animation.updateActiveStateAnimations();\n\n                    // remove state machines of dead sprites\n                    stateMachines = stateMachines.filter((sm: AnimationStateMachine) => {\n                        if (sm.sprite.flags & sprites.Flag.Destroyed)\n                            return false;\n                        sm.update();\n                        return true;\n                    });\n                });\n            }\n            stateMachines.push(this);\n        }\n\n        update() {\n            // detect if the action has been changed\n            if(this.lastAction != this.sprite._action || this.lastDir != this.dir) {\n                this.lastAction = this.sprite._action;\n                this.lastDir = this.dir;\n                const anim = this.getAnimationFromState(this.lastAction)\n                if(anim)\n                    anim.runAnimationOnSprite(this.sprite);\n            }\n            this.animationActive = false;\n        }\n\n        setDirection(direction: Direction) {\n            this.dir = direction;\n        }\n\n        // You should really put these in the order [left, up, right, down]\n        setStateAnimations(state: number, animations: Animation[]) {\n            this.stateAnimations[state] = animations;\n        }\n\n        getAnimationFromState(state: number): Animation {\n            const anims: Animation[] = this.stateAnimations[state];\n            if (!anims || anims.length == 0)\n                return null;\n            \n            if (anims.length == 1 || this.dir < 0 || this.dir >= anims.length)\n                return anims[0];\n            \n            return anims[this.dir];\n\n        }\n        //constructor(frameInterval: number, )\n    }\n\n}\n\nnamespace VoidBattle {\n    let collisionSprite: Sprite \n\n    // does not work\n    export function getCollisionsAtLocation(location: tiles.Location): Sprite[] {\n        const s: Sprite = sprites.create(assets.image`hitboxPlaceholder`);\n        s.setFlag(SpriteFlag.Invisible, true);\n        tiles.placeOnTile(s, location);\n        \n        const overlaps = game.currentScene().physicsEngine.overlaps(s);\n        sprites.destroy(s);\n        return overlaps;\n    }\n\n    export function vbCollisionCheck(location: tiles.Location, callback: (overlaps: Sprite[]) => void) {\n        control.runInParallel(() => {\n            tiles.placeOnTile(collisionSprite, location);\n            pause(1);\n            const overlaps = game.currentScene().physicsEngine.overlaps(collisionSprite);\n            callback(overlaps);\n        });\n    }\n\n    const tileSize = 16;\n    export class VBSprite extends sprites.ExtendableSprite {\n        sm: animation.AnimationStateMachine;\n        dir: Direction = Direction.Down;\n        onDeathCallback: () => void;\n        canPush: boolean = false;\n        pushable: boolean = false;\n        hitboxWidth: number = 24;\n        hitboxHeight: number = 24;\n\n        constructor(spriteImage: Image, kind?: number, dir?: Direction) {\n            super(spriteImage, kind);\n            this.flags ^= SpriteFlag.GhostThroughWalls;\n            this.setDimensions(this.hitboxWidth, this.hitboxHeight);\n            //this._hitbox.ox = Fx8(-4);\n            //this._hitbox.oy = Fx8(-4);\n            this.sm = new animation.AnimationStateMachine(this);\n            this._action = SpriteAction.Idle;\n\n            if(!collisionSprite) {\n                collisionSprite = sprites.create(assets.image`hitboxPlaceholder`);\n                collisionSprite.setFlag(SpriteFlag.Invisible, true);\n                tiles.placeOnTile(collisionSprite, tiles.getTileLocation(-1, -1));\n            }\n\n            if (dir)\n                this.setDirection(dir);\n            else\n                this.setDirection(Direction.Down);\n            \n        }\n\n        // Accounts for the offset from the hitbox, which is wider so we can\n        // detect neighboring sprites\n        draw(drawLeft: number, drawTop: number) {\n            drawLeft += (this.hitboxWidth - this.image.width) >> 1;\n            drawTop += (this.hitboxHeight - this.image.height) >> 1;\n            super.draw(drawLeft, drawTop);\n        }\n\n        setPosition(x: number, y: number): void {\n            const physics = game.currentScene().physicsEngine;\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n            // call it a second time to correct a bug where sprites that ghost \n            // through walls are still pushed out\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n        }\n\n        update(deltaTimeMillis: number) {\n            if (this.tileKindAt(TileDirection.Center, assets.image`blankTile`)) {\n                sprites.destroy(this, effects.fire, 2000);\n                this.die();\n            }\n        }\n\n        die() {\n            if (this.onDeathCallback){\n                control.runInParallel(this.onDeathCallback);\n            } \n        }\n\n        onDeath(cb: () => void) {\n            this.onDeathCallback = cb;\n        }\n\n        setDirection(dir: Direction) {\n            this.dir = dir;\n            this.sm.setDirection(dir);\n        }\n\n        getNeighboringLocation(dir: Direction): tiles.Location {\n            const loc: tiles.Location = this.tilemapLocation();\n            let neighbor: tiles.Location;\n            switch (dir) {\n                case Direction.Left:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Left);\n                    break;\n                case Direction.Up:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Top);\n                    break;\n                case Direction.Right:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Right);\n                    break;\n                case Direction.Down:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Bottom);\n                    break;\n            }\n            return neighbor;\n        }\n        \n        // moves this sprite in a certain direction. Returns true if the move\n        // was successful\n        move(dir: Direction, turnToFaceDirection: boolean = false): boolean {\n            const neighbor = this.getNeighboringLocation(dir);\n            \n            if(turnToFaceDirection)\n                this.setDirection(dir);\n\n            if (tiles.tileAtLocationIsWall(neighbor)) {\n                scene.cameraShake(2, 200);\n                return false;\n            }\n        \n            //const overlaps: Sprite[] = getCollisionsAtLocation(neighbor);\n            const neighborSprite = this.getNeighboringSprite(neighbor);\n\n            if(neighborSprite)\n                return false;\n            \n            // gotta do it twice because there's a bug where it ignores the ghost \n            // through walls flag\n            //tiles.placeOnTile(this, neighbor);\n            tiles.placeOnTile(this, neighbor);\n            return true;\n            \n        }\n\n        getNeighboringSprite(loc: tiles.Location): Sprite {\n            const engine = game.currentScene().physicsEngine;\n            let neighbors: Sprite[];\n            if(engine instanceof ArcadePhysicsEngine){\n                const ape = engine as ArcadePhysicsEngine;\n                neighbors = ape.map.neighbors(this)\n            }\n            let overlaps = game.currentScene().physicsEngine.overlaps(this);\n            for(let i = 0; i < overlaps.length; i++) {\n                const s = overlaps[i];\n                if (s.tilemapLocation().column == loc.column && s.tilemapLocation().row == loc.row)\n                    return s;\n            }\n            return null;\n        }\n\n    }\n\n    export class VBPlayerSprite extends VBSprite {\n        ctrl: controller.Controller;\n        isMyTurn: boolean = false;\n        turnEndCallback: () => void;\n        storedTile: Image;\n        // failsafe if there are shenanigans with the turns\n        controlsLocked: boolean = false;\n\n        constructor(spriteImage: Image, ctrl: controller.Controller, kind?: number, dir?: Direction){\n            super(spriteImage, kind, dir);\n            this.ctrl = ctrl;\n            this._setupButtonEvents();\n            this.canPush = true;\n            this.pushable = true;\n        }\n\n        _setupButtonEvents() {\n            // gotta do this for literally every event it seems. kill me\n            // maybe there's a better way, but if there is I haven't found one\n            this.ctrl.onButtonEvent(ControllerButton.Left, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Left, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Right, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Right, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Up, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Up, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Down, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Down, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.A, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.A, ControllerButtonEvent.Pressed);\n            });\n        }\n\n        startTurn() {\n            this.isMyTurn = true;\n        }\n\n        onTurnEnd(cb: () => void) {\n            this.turnEndCallback = cb;\n        }\n\n        endTurn() {\n            this.isMyTurn = false;\n            if( this.turnEndCallback ) this.turnEndCallback();\n        }\n\n        handleButtonInput(button: ControllerButton, event: ControllerButtonEvent) {\n            if(this.controlsLocked || !this.isMyTurn) return;\n            let moveCompleted: boolean = false;\n            switch(button) {\n                case ControllerButton.Left:\n                    this.move(Direction.Left, true);\n                    moveCompleted = true;\n                    break;\n                case ControllerButton.Up:\n                    this.move(Direction.Up, true);\n                    moveCompleted = true;\n                    break;\n                case ControllerButton.Right:\n                    this.move(Direction.Right, true);\n                    moveCompleted = true;\n                    break;\n                case ControllerButton.Down:\n                    this.move(Direction.Down, true);\n                    moveCompleted = true;\n                    break;\n                case ControllerButton.A:\n                    moveCompleted = this.tryPrimaryAction();\n                    break;\n            }\n            if (moveCompleted) this.endTurn();\n        }\n\n        // attempts to interact using the A button. If the action fails, return false\n        tryPrimaryAction(): boolean {\n            const neighbor: tiles.Location = this.getNeighboringLocation(this.dir);\n            \n            if (tiles.tileAtLocationIsWall(neighbor))\n                return false;\n            else if (tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && this.storedTile) {\n                tiles.setTileAt(neighbor, this.storedTile);\n                this.storedTile = null;\n                return true;\n            } else if (!tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && !this.storedTile) {\n                this.storedTile = tiles.getTileImage(neighbor);\n                tiles.setTileAt(neighbor, assets.image`blankTile`);\n                return true;\n            }\n            return false;\n        }\n    }\n}","pxt.json":"{\n    \"name\": \"Void Battle\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\",\n        \"images.g.jres\",\n        \"images.g.ts\",\n        \"voidbattle.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}},{"timestamp":1761175072460,"editorVersion":"2.0.60","text":{"main.ts":"tiles.setCurrentTilemap(tilemap`level1`);\r\nscene.centerCameraAt(96, 68);\r\n//game.debug = true;\r\nlet isP1Turn: boolean = true;\r\n\r\nlet player1Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player1, SpriteKind.Player, Direction.Up);\r\nplayer1Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`heroWalkLeft`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkBack`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkRight`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkFront`, 200, true)\r\n]);\r\ntiles.placeOnTile(player1Sprite, tiles.getTileLocation(1, 7));\r\nplayer1Sprite.onTurnEnd(function() {\r\n    isP1Turn = false;\r\n    player2Sprite.startTurn();\r\n});\r\nplayer1Sprite.onDeath(function() {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 2 Wins!\");\r\n    game.gameOverPlayerWin(2);\r\n})\r\n\r\nlet player2Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player2, SpriteKind.Player, Direction.Down);\r\nplayer2Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`witchLeft`, 200, true),\r\n    new animation.Animation(assets.animation`witchBack`, 200, true),\r\n    new animation.Animation(assets.animation`witchRight`, 200, true),\r\n    new animation.Animation(assets.animation`witchForward`, 200, true)\r\n]);\r\ntiles.placeOnTile(player2Sprite, tiles.getTileLocation(3, 7));\r\n//tiles.placeOnTile(player2Sprite, tiles.getTileLocation(10, 2));\r\nplayer2Sprite.onTurnEnd(function () {\r\n    isP1Turn = true;\r\n    player1Sprite.startTurn();\r\n});\r\nplayer2Sprite.onDeath(function () {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 1 Wins!\");\r\n    game.gameOverPlayerWin(1);\r\n})\r\n\r\ngame.onPaint(function() {\r\n    // draw HUD\r\n    screen.drawLine(0, 0, 160, 0, isP1Turn ? 4 : 9);\r\n    screen.fillRect(0, 1, 160, 22, isP1Turn ? 2 : 6);\r\n    screen.drawLine(0, 23, 160, 23, isP1Turn ? 14 : 8);\r\n\r\n    if (player1Sprite.storedTile)\r\n        screen.drawImage(player1Sprite.storedTile, 5, 5);\r\n    \r\n    if (player2Sprite.storedTile)\r\n        screen.drawImage(player2Sprite.storedTile, 141, 5);\r\n\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 2, 2);\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 138, 2);\r\n\r\n    screen.print(\"P\" + (isP1Turn ? \"1\" : \"2\") + \" Turn\", 60, 5, 1);\r\n});\r\n\r\nplayer1Sprite.startTurn();","README.md":" ","assets.json":"","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"level1\": {\n        \"id\": \"level1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAwYzAwMDkwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDIwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMjAwMDAyMDAyMDAwMDAwMDAyMDIyMjIyMjIyMjIyMg==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"sprites.dungeon.floorLight2\",\n            \"sprites.castle.tileGrass1\"\n        ],\n        \"displayName\": \"level1\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","images.g.jres":"{\n    \"image2\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"blankTile\"\n    },\n    \"image1\": {\n        \"data\": \"hwQUABQAAAAAu7u7u7u7u7sAAACwHREREREREdELAADb0bu7u7u7ux29AAAbvQAAAAAAANuxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbvQAAAAAAANuxAADb0bu7u7u7ux29AACwHREREREREdELAAAAu7u7u7u7u7sAAAA=\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"selectedItemFrame\"\n    },\n    \"image3\": {\n        \"data\": \"hwQOAA4AAAARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREA\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"hitboxPlaceholder\"\n    },\n    \"anim1\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim1\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmYyZmYyZmYwMDAwMDBmMGZmMjIyMmZmMGYwMDAwZmZlZmVlZWVmZWZmMDAwMGZmMmUyMjIyZTJmZTAwMDBlZmYyZmZmZjJmZmUwMDAwZmZmZmVlZWVmZmZmMDBmMGVmYmY0ZmY0ZmJmZTBmZjBlZTE0ZGZmZDQxZWUwZjAwZWZkZWRkZGRlZGZlMDAwMGYwZWU0NDQ0ZWUwZjAwMDA0ZTJmMjIyMmYyZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY1NDQ1ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDBmMGVmZjJmZmZmMmZmZTBmZjBmZmZmZWVlZWZmZmYwZjAwZWZiZjRmZjRmYmZlMDAwMGVmMTRkZmZkNDFmZTAwMDBmMDRlZGRkZGU0ZWYwMDAwZWYyZjIyZTJkZGU0MDAwMDRlMmYyMmUyZGQwZTAwMDAwMDRmNTRmNWVlMDAwMDAwMDBmZmZmZmYwZjAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDAwMGVmZjJmZmZmMmZmZTAwMDBmZmZmZWVlZWZmZmYwMGYwZWZiZjRmZjRmYmZlMGZmMGVlMTRkZmZkNDFlZTBmMDBlZmRlZGRkZGVkZmUwMDAwZjBlZTQ0NDRlZTBmMDAwMDRlMmYyMjIyZjJlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjU0NDVmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmMmZmMmZmMDAwMDAwZjBmZjIyMjJmZjBmMDAwMGZmZWZlZWVlZmVmZjAwMDBlZjJlMjIyMmUyZmYwMGYwZWZmMmZmZmYyZmZlMGZmMGZmZmZlZWVlZmZmZjBmMDBlZmJmNGZmNGZiZmUwMDAwZWYxNGRmZmQ0MWZlMDAwMGZlNGVkZGRkZTQwZjAwMDA0ZWRkMmUyMmYyZmUwMDAwZTBkZDJlMjJmMmU0MDAwMDAwZWU1ZjQ1ZjQwMDAwMDAwMGYwZmZmZmZmMDAwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkFront\"\n    },\n    \"anim2\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim2\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDBmZmZmZmYwMDAwMDAwMGYwZjJlZWVlZmYwMDAwMDAyZjIyZWZlZWZlMGYwMDAwZWZlZWZlZWZlZTBmMDBmMDJlMjJlMmZlZmYwZjAwZjBlMmZmZmYyMmUyMGYwMGYwZmZlZWZlZmZmZmZmMDBmMGVlNDRiZjRlZTRmZjAwMDBlZmRkMWZkNGU0ZmUwMDAwZjBkZGRkZTRlZTBmMDAwMGYwNGU0NGVlZmYwMDAwMDBmMDIyZTJkZDA0MDAwMDAwZjAyMmUyZGQwZTAwMDAwMGYwNTVmNGVlMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwMDAwMGZmMGYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZWRlZWVlMGYwMDAwZjA0ZWRlNGQwZjAwMDAwMGYwMjJkZWVkMGYwMDAwMDBmZjU1ZWZmZWZmMDAwMDAwZmZmZmZmZmZmZjAwMDAwMGYwZmYwMGYwMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZGRlNGVlMGYwMDAwZjA0ZTQ0ZWVmZjAwMDAwMGYwMjJlMmRkMDQwMDAwMDBmMDIyZTJkZDBlMDAwMDAwZjA1NWY0ZWUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmMGYyZWVlZWZmMDAwMDAwMmYyMmVmZWVmZTBmMDAwMGVmZWVmZWVmZWUwZjAwZjAyZTIyZTJmZWZmMGYwMGYwZTJmZmZmMjJlMjBmMDBmMGZmZWVmZWZmZmZmZjAwZjBlZTQ0YmY0ZWU0ZmYwMDAwZWZkZDFmZDRlNGZlMDAwMGYwZGRkZGU0ZWUwZjAwMDBmMDRlNDRkZTRkMDAwMDAwZjAyMjIyZGVlZDAwMDAwMGZmNTU0NGVmZmUwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjBmZjAwZjAwZjAwMDA=\",\n        \"displayName\": \"heroWalkLeft\"\n    },\n    \"anim3\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim3\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZmZlZWVlMmYwZjAwMDBmMGVmZWVmZTIyZjIwMDAwZjBlZWZlZWZlZWZlMDAwMGYwZmZlZjJlMjJlMjBmMDBmMDJlMjJmZmZmMmUwZjAwZmZmZmZmZWZlZWZmMGYwMGZmNGVlNGZiNDRlZTBmMDBlZjRlNGRmMWRkZmUwMDAwZjBlZTRlZGRkZDBmMDAwMDAwZmZlZTQ0ZTQwZjAwMDAwMDQwZGQyZTIyMGYwMDAwMDBlMGRkMmUyMjBmMDAwMDAwZjBlZTRmNTUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlZWVkZWRkMGYwMDAwMDBmMGQ0ZWRlNDBmMDAwMDAwZjBkZWVkMjIwZjAwMDAwMGZmZWZmZTU1ZmYwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjAwZjAwZmYwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlNGVkZGRkMGYwMDAwMDBmZmVlNDRlNDBmMDAwMDAwNDBkZDJlMjIwZjAwMDAwMGUwZGQyZTIyMGYwMDAwMDBmMGVlNGY1NTBmMDAwMDAwMDBmZmZmZmYwMDAwMDAwMDAwZjBmZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmYwMDAwMDAwMGZmZWVlZTJmMGYwMDAwZjBlZmVlZmUyMmYyMDAwMGYwZWVmZWVmZWVmZTAwMDBmMGZmZWYyZTIyZTIwZjAwZjAyZTIyZmZmZjJlMGYwMGZmZmZmZmVmZWVmZjBmMDBmZjRlZTRmYjQ0ZWUwZjAwZWY0ZTRkZjFkZGZlMDAwMGYwZWU0ZWRkZGQwZjAwMDAwMGQ0ZWQ0NGU0MGYwMDAwMDBkZWVkMjIyMjBmMDAwMDAwZWZmZTQ0NTVmZjAwMDAwMGZmZmZmZmZmZmYwMDAwMDBmMDBmMDBmZjBmMDA=\",\n        \"displayName\": \"heroWalkRight\"\n    },\n    \"anim4\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim4\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmZlZWVlZmYwMDAwMDBmMGVlZmVlZmVlMGYwMDAwZmZmZjJmZjJmZmZmMDAwMGZmMmUyZWUyZTJmZjAwMDBlZmYyZjIyZjJmZmUwMDAwZmYyZmUyMmVmMmZmMDBmMGVmMmZlZmZlZjJmZTBmZjBlZWZmZWVlZWVmZWUwZjAwZWZlZWVlZWVlZWZlMDAwMGYwZWVlZWVlZWUwZjAwMDA0ZWZmZmZmZmZmZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY0NDQ0ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmMGZmMmZmMmZmMGYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMmZmZjJmZTAwMDBmZjJmZWYyZWYyZmYwMDAwZWZmMmVmMmVlZmZlMDBmMGVmZmZlZWZlZWVmZTBmZjBlZmVlZWVlZWVlZmUwZjAwZjBlZWVlZWVlZTBmMDAwMGUwZmZmZmZmZmZlNDAwMDA0MDJmMjIyMmRlNGQwMDAwZTBmZmZmZmZlZTA0MDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmZmZmMmZmMmZmZmYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMjJmMmZmZTAwMDBmZjJmZTIyZWYyZmYwMGYwZWYyZmVmZmVmMmZlMGZmMGVlZmZlZWVlZWZlZTBmMDBlZmVlZWVlZWVlZmUwMDAwZjBlZWVlZWVlZTBmMDAwMDRlZmZmZmZmZmZlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjQ0NDRmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmZWVlZWZmMDAwMDAwZjBlZWZlZWZlZTBmMDAwMGYwZmYyZmYyZmYwZjAwMDBmZjJlMmVlMmUyZmYwMDAwZWYyZmZmMmYyZmZlMDAwMGZmMmZlMmZlZjJmZjAwMDBlZmZlZTJmZTJmZmUwMGYwZWZlZWVmZWVmZmZlMGZmMGVmZWVlZWVlZWVmZTBmMDBmMGVlZWVlZWVlMGYwMDAwNGVmZmZmZmZmZjBlMDAwMGQ0ZWQyMjIyZjIwNDAwMDA0MGVlZmZmZmZmMGUwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkBack\"\n    },\n    \"anim5\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim5\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwY2MwMDAwMDAwMDAwMDBiY2M1MDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmJmZWZmZWZiZmYwMDAwZmYxZmJmZmJmMWZmMDAwMGYwYmZiYmJiZmIwZjAwMDBlMGZlZWVlZWVmMGUwMDAwYmViY2I1NWJmYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward\"\n    },\n    \"anim6\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim6\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGNjMGMwMDAwMDAwMDAwMDA1Y2NiMDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGYwZmZmZmZmZmYwZjAwMDBlMGZlZmZmZmZmMGUwMDAwYmViZmI1NWJjYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZWJmZWZmYmZlYjAwMDBlMGJiYmU1YmY1ZWUwMDAwMDBlYzVlNTU1NTBmMDAwMDAwZjBmZmZmZmYwMDAwMDAwMDAwYzBjYzAwMDAwMDAwMDAwMGJjYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZmVmZmZmZWYwZTAwMDBiZWJjYjU1YmZiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMDAwNWMwYzAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmMGZmZmZmZmVlMGYwMDAwYmVmYmVlZWViZTBlMDAwMGVlNWZiNWViYmIwZTAwMDBmMDU1NTVlNWNlMDAwMDAwMDBmZmZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchBack\"\n    },\n    \"anim7\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim7\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDA1YzBjMDAwMDAwMDAwMGNjNTVjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGYwNTU1NTU1NTVmZjAwMDAwMGVmZWViZmVlZmYwMDAwMDBlZmJiMWZmYmZmMDAwMDAwYmZiYmJiZmIwZjAwMDAwMGYwZWVlZWVmMGUwMDAwMDBmMGI1ZWJiYjBlMDAwMDAwNWY1NWU1YmIwZTAwMDAwMGJjNTU1NWVlMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGNjYzUwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiZWJmZTBmMDAwMDAwZjBlZWJlZWIwZjAwMDAwMDVmYmJiZWViMDAwMDAwMDA1YzU1ZTVmZTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiYmJmYjBmMDAwMDAwZjBlZWVlZWYwZTAwMDAwMGYwYjVlYmJiMGUwMDAwMDA1ZjU1ZTViYjBlMDAwMDAwYmM1NTU1ZWUwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwY2NjNTAwMDAwMDAwMDBjYzU1YzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmMDU1NTU1NTU1ZmYwMDAwMDBlZmVlYmZlZWZmMDAwMDAwZWZiYjFmZmJmZjAwMDAwMGJmYmJiYmZiMGYwMDAwMDBmMGVlZWViZWViMDAwMDAwNWZiNWJiYmVlYjAwMDAwMDVjNTU1NWVlMGUwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchLeft\"\n    },\n    \"anim8\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim8\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDBjMGM1MDAwMDAwMDAwMGNjNWM1NWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTUwZjAwMDBmZmVlZmJlZWZlMDAwMDAwZmZiZmYxYmJmZTAwMDAwMGYwYmZiYmJiZmIwMDAwMDBlMGZlZWVlZTBmMDAwMDAwZTBiYmJlNWIwZjAwMDAwMGUwYmI1ZTU1ZjUwMDAwMDAwMGVlNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjY2MwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBlZmJlYmJmYjAwMDAwMGYwYmVlYmVlMGYwMDAwMDAwMGJlZWJiYmY1MDAwMDAwMDBlZjVlNTVjNTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBiZmJiYmJmYjAwMDAwMGUwZmVlZWVlMGYwMDAwMDBlMGJiYmU1YjBmMDAwMDAwZTBiYjVlNTVmNTAwMDAwMDAwZWU1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwNWNjYzAwMDAwMDAwMDBjYzVjNTVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1MGYwMDAwZmZlZWZiZWVmZTAwMDAwMGZmYmZmMWJiZmUwMDAwMDBmMGJmYmJiYmZiMDAwMDAwYmVlYmVlZWUwZjAwMDAwMGJlZWJiYjViZjUwMDAwMDBlMGVlNTU1NWM1MDAwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchRight\"\n    },\n    \"anim9\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim9\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDBjZmZhMDAwMDAwMDAwMGZmYWZmYWZmMDAwMDAwZmZmY2FhYWFmZmZmMDBmMGNjY2FhYWFhYWNjYzBmZjBhY2NhYWNjYWFjY2EwZjAwYWZhYWNjY2NhYWZhMDAwMGVmYWFhYWFhYWFmZTAwMDA0ZjllYmZmYmU5ZjQwMDAwNGYxNGQ4OGQ0MWY0MDAwMGYwZDRkZGRkNGQwZjAwMDBiMGZiYmJiYmJmMGIwMDAwZGJjZmNhYWNmY2JkMDAwMGJiYWZhYWFhZmFiYjAwMDAwMGNmYWFhYWZjMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward0\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}","images.g.ts":"","voidbattle.ts":"enum Direction {\n    Left = 0,\n    Up = 1,\n    Right = 2,\n    Down = 3\n}\n\nenum SpriteAction {\n    Idle,\n    Move,\n    Fall,\n    Die\n}\n\nnamespace SpriteKind {\n    export const Detector = SpriteKind.create();\n}\n\nnamespace animation {\n    const stateNamespace = \"__animation\";\n\n    interface AnimationState {\n        animations: SpriteAnimation[];\n    }\n\n    // this will tell the state machines that their animations are still active\n    export function updateActiveStateAnimations(): void {\n        let state: AnimationState = game.currentScene().data[stateNamespace];\n        if(state && state.animations) {\n            state.animations.forEach((anim: SpriteAnimation) => {\n                if (anim.sprite instanceof VoidBattle.VBSprite) {\n                    const vbs = anim.sprite as VoidBattle.VBSprite;\n                    if(vbs.sm)\n                        vbs.sm.animationActive = true;\n                }\n            });\n        }\n    }\n\n    export class Animation {\n        constructor(public frames: Image[], public frameInterval: number = 500, public loop: boolean = false){}\n        runAnimationOnSprite(sprite: Sprite) {\n            animation.runImageAnimation(sprite, this.frames, this.frameInterval, this.loop);\n        }\n    }\n\n    interface AnimationMap {\n        [key: number]: Animation[];\n    }\n\n    let stateMachines: AnimationStateMachine[];\n\n    // should allow you to change the sprite's animation based on its direction\n    // what should i put in here and what should just be part of VBSprite?\n    export class AnimationStateMachine {\n        dir: Direction = Direction.Down;\n        lastDir: Direction = Direction.Down;\n        sprite: VoidBattle.VBSprite;\n        lastAction: number;\n        animationActive: boolean = false;\n        stateAnimations: AnimationMap = {};\n\n        constructor(sprite: VoidBattle.VBSprite) {\n            this.sprite = sprite;\n            this.lastAction = sprite._action;\n            this._init();\n        }\n\n        _init() {\n            if (!stateMachines) {\n                stateMachines = [];\n                game.eventContext().registerFrameHandler(scene.ANIMATION_UPDATE_PRIORITY, () => {\n                    // see which animations are still active\n                    animation.updateActiveStateAnimations();\n\n                    // remove state machines of dead sprites\n                    stateMachines = stateMachines.filter((sm: AnimationStateMachine) => {\n                        if (sm.sprite.flags & sprites.Flag.Destroyed)\n                            return false;\n                        sm.update();\n                        return true;\n                    });\n                });\n            }\n            stateMachines.push(this);\n        }\n\n        update() {\n            // detect if the action has been changed\n            if(this.lastAction != this.sprite._action || this.lastDir != this.dir) {\n                this.lastAction = this.sprite._action;\n                this.lastDir = this.dir;\n                const anim = this.getAnimationFromState(this.lastAction)\n                if(anim)\n                    anim.runAnimationOnSprite(this.sprite);\n            }\n            this.animationActive = false;\n        }\n\n        setDirection(direction: Direction) {\n            this.dir = direction;\n        }\n\n        // You should really put these in the order [left, up, right, down]\n        setStateAnimations(state: number, animations: Animation[]) {\n            this.stateAnimations[state] = animations;\n        }\n\n        getAnimationFromState(state: number): Animation {\n            const anims: Animation[] = this.stateAnimations[state];\n            if (!anims || anims.length == 0)\n                return null;\n            \n            if (anims.length == 1 || this.dir < 0 || this.dir >= anims.length)\n                return anims[0];\n            \n            return anims[this.dir];\n\n        }\n        //constructor(frameInterval: number, )\n    }\n\n}\n\n\nnamespace VoidBattle {\n    let collisionSprite: Sprite\n    let detectionSetUp: boolean = false;\n\n    // does not work\n    export function getCollisionsAtLocation(location: tiles.Location): Sprite[] {\n        const s: Sprite = sprites.create(assets.image`hitboxPlaceholder`);\n        s.setFlag(SpriteFlag.Invisible, true);\n        tiles.placeOnTile(s, location);\n        \n        const overlaps = game.currentScene().physicsEngine.overlaps(s);\n        sprites.destroy(s);\n        return overlaps;\n    }\n\n    export function vbCollisionCheck(location: tiles.Location, callback: (overlaps: Sprite[]) => void) {\n        control.runInParallel(() => {\n            tiles.placeOnTile(collisionSprite, location);\n            pause(1);\n            const overlaps = game.currentScene().physicsEngine.overlaps(collisionSprite);\n            callback(overlaps);\n        });\n    }\n\n    export class SpriteDetector extends sprites.ExtendableSprite {\n        \n        overlappers: Sprite[] = [];\n        cb: (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => void;\n        isActive: boolean = true;\n\n        constructor(loc: tiles.Location, callback: (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => void) {\n            super(assets.image`hitboxPlaceholder`, SpriteKind.Detector);\n            this.setFlag(SpriteFlag.Invisible, true);\n            tiles.placeOnTile(this, loc);\n            this.cb = callback;\n        }\n\n        update(deltaTimeMillis: number) {\n            if (this.isActive && this.cb) {\n                const isOnWall: boolean = tiles.tileAtLocationIsWall(this.tilemapLocation());\n                this.cb(this, this.overlappers, isOnWall);\n            }\n            this.overlappers = [];\n        }\n    }\n\n    const tileSize = 16;\n    export class VBSprite extends sprites.ExtendableSprite {\n        sm: animation.AnimationStateMachine;\n        dir: Direction = Direction.Down;\n        onDeathCallback: () => void;\n        canPush: boolean = false;\n        pushable: boolean = false;\n        hitboxWidth: number = 16;\n        hitboxHeight: number = 16;\n\n        constructor(spriteImage: Image, kind?: number, dir?: Direction) {\n            super(spriteImage, kind);\n            this.flags ^= SpriteFlag.GhostThroughWalls;\n            this.setDimensions(this.hitboxWidth, this.hitboxHeight);\n            //this._hitbox.ox = Fx8(-4);\n            //this._hitbox.oy = Fx8(-4);\n            this.sm = new animation.AnimationStateMachine(this);\n            this._action = SpriteAction.Idle;\n\n            if(!detectionSetUp) {\n                sprites.onOverlap(SpriteKind.Detector, SpriteKind.Player, function (sprite: Sprite, otherSprite: Sprite) {\n                    if (sprite instanceof VoidBattle.SpriteDetector) {\n                        const sd = sprite as VoidBattle.SpriteDetector;\n                        sd.overlappers.push(otherSprite);\n                    }\n                });\n            }\n\n            if (dir)\n                this.setDirection(dir);\n            else\n                this.setDirection(Direction.Down);\n            \n        }\n\n        // Accounts for the offset from the hitbox, which is wider so we can\n        // detect neighboring sprites\n        draw(drawLeft: number, drawTop: number) {\n            drawLeft += (this.hitboxWidth - this.image.width) >> 1;\n            drawTop += (this.hitboxHeight - this.image.height) >> 1;\n            super.draw(drawLeft, drawTop);\n        }\n\n        setPosition(x: number, y: number): void {\n            const physics = game.currentScene().physicsEngine;\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n            // call it a second time to correct a bug where sprites that ghost \n            // through walls are still pushed out\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n        }\n\n        update(deltaTimeMillis: number) {\n            if (this.tileKindAt(TileDirection.Center, assets.image`blankTile`)) {\n                sprites.destroy(this, effects.fire, 2000);\n                this.die();\n            }\n        }\n\n        die() {\n            if (this.onDeathCallback){\n                control.runInParallel(this.onDeathCallback);\n            } \n        }\n\n        onDeath(cb: () => void) {\n            this.onDeathCallback = cb;\n        }\n\n        setDirection(dir: Direction) {\n            this.dir = dir;\n            this.sm.setDirection(dir);\n        }\n\n        getNeighboringLocation(dir: Direction): tiles.Location {\n            const loc: tiles.Location = this.tilemapLocation();\n            let neighbor: tiles.Location;\n            switch (dir) {\n                case Direction.Left:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Left);\n                    break;\n                case Direction.Up:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Top);\n                    break;\n                case Direction.Right:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Right);\n                    break;\n                case Direction.Down:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Bottom);\n                    break;\n            }\n            return neighbor;\n        }\n        \n        // moves this sprite in a certain direction. Returns true if the move\n        // was successful\n        move(dir: Direction, turnToFaceDirection: boolean = false): boolean {\n            const neighbor = this.getNeighboringLocation(dir);\n            \n            if(turnToFaceDirection)\n                this.setDirection(dir);\n\n            if (tiles.tileAtLocationIsWall(neighbor)) {\n                scene.cameraShake(2, 200);\n                return false;\n            }\n        \n            //const overlaps: Sprite[] = getCollisionsAtLocation(neighbor);\n            const neighborSprite = this.getNeighboringSprite(neighbor);\n\n            if(neighborSprite)\n                return false;\n            \n            // gotta do it twice because there's a bug where it ignores the ghost \n            // through walls flag\n            //tiles.placeOnTile(this, neighbor);\n            tiles.placeOnTile(this, neighbor);\n            return true;\n            \n        }\n\n        getNeighboringSprite(loc: tiles.Location): Sprite {\n            const engine = game.currentScene().physicsEngine;\n            let neighbors: Sprite[];\n            // the overlaps function simply does not work :/ i hate this engine so much\n            /*\n            if(engine instanceof ArcadePhysicsEngine){\n                const ape = engine as ArcadePhysicsEngine;\n                neighbors = ape.map.neighbors(this)\n            }\n            */\n            let overlaps = game.currentScene().physicsEngine.overlaps(this);\n            for(let i = 0; i < overlaps.length; i++) {\n                const s = overlaps[i];\n                if (s.tilemapLocation().column == loc.column && s.tilemapLocation().row == loc.row)\n                    return s;\n            }\n            return null;\n        }\n\n    }\n\n    export class VBPlayerSprite extends VBSprite {\n        ctrl: controller.Controller;\n        isMyTurn: boolean = false;\n        // used when the player has already started an input but is waiting on some\n        // number of processes to complete before control can be restored or the turn\n        // can end\n        awaitingTurnCompletion: boolean = false;\n        turnEndCallback: () => void;\n        storedTile: Image;\n        // failsafe if there are shenanigans with the turns\n        controlsLocked: boolean = false;\n\n        constructor(spriteImage: Image, ctrl: controller.Controller, kind?: number, dir?: Direction){\n            super(spriteImage, kind, dir);\n            this.ctrl = ctrl;\n            this._setupButtonEvents();\n            this.canPush = true;\n            this.pushable = true;\n        }\n\n        _setupButtonEvents() {\n            // gotta do this for literally every event it seems. kill me\n            // maybe there's a better way, but if there is I haven't found one\n            this.ctrl.onButtonEvent(ControllerButton.Left, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Left, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Right, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Right, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Up, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Up, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Down, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Down, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.A, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.A, ControllerButtonEvent.Pressed);\n            });\n        }\n\n        startTurn() {\n            this.isMyTurn = true;\n        }\n\n        onTurnEnd(cb: () => void) {\n            this.turnEndCallback = cb;\n        }\n\n        endTurn() {\n            this.awaitingTurnCompletion = false;\n            this.isMyTurn = false;\n            if( this.turnEndCallback ) this.turnEndCallback();\n        }\n\n        handleButtonInput(button: ControllerButton, event: ControllerButtonEvent) {\n            if(this.awaitingTurnCompletion || this.controlsLocked || !this.isMyTurn) return;\n            \n            switch(button) {\n                case ControllerButton.Left:\n                    this.step(Direction.Left);\n                    break;\n                case ControllerButton.Up:\n                    this.step(Direction.Up);\n                    break;\n                case ControllerButton.Right:\n                    this.step(Direction.Right);\n                    break;\n                case ControllerButton.Down:\n                    this.step(Direction.Down);\n                    break;\n                case ControllerButton.A:\n                    this.tryPrimaryAction();\n                    break;\n            }\n            //if (moveCompleted) this.endTurn();\n        }\n\n        // step in a particular direction\n        // if there is an immovable obstacle, face it but do not move\n        step(dir: Direction) {\n            this.awaitingTurnCompletion = true;\n\n            this.setDirection(dir);\n            const neighbor = this.getNeighboringLocation(dir);\n\n            const detector = new SpriteDetector(neighbor, (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => {\n                if (isOnWall)\n                    scene.cameraShake(2, 200);\n                else if (overlappers && overlappers.length > 0) {}\n                else\n                    tiles.placeOnTile(this, neighbor);\n                \n                sprites.destroy(detector);\n                this.awaitingTurnCompletion = false;\n                this.endTurn();\n            });\n        }\n\n        // attempts to interact using the A button. If the action fails, return false\n        tryPrimaryAction() {\n            const neighbor: tiles.Location = this.getNeighboringLocation(this.dir);\n            \n            if (tiles.tileAtLocationIsWall(neighbor))\n                return;\n            else if (tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && this.storedTile) {\n                tiles.setTileAt(neighbor, this.storedTile);\n                this.storedTile = null;\n                this.endTurn();\n            } else if (!tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && !this.storedTile) {\n                this.storedTile = tiles.getTileImage(neighbor);\n                tiles.setTileAt(neighbor, assets.image`blankTile`);\n                this.endTurn();\n            }\n        }\n    }\n}\n\n","pxt.json":"{\n    \"name\": \"Void Battle\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\",\n        \"images.g.jres\",\n        \"images.g.ts\",\n        \"voidbattle.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}},{"timestamp":1761228769617,"editorVersion":"2.0.60","text":{"main.ts":"tiles.setCurrentTilemap(tilemap`level1`);\r\nscene.centerCameraAt(96, 68);\r\n//game.debug = true;\r\nlet isP1Turn: boolean = true;\r\n\r\nlet player1Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player1, SpriteKind.Player, Direction.Up);\r\nplayer1Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`heroWalkLeft`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkBack`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkRight`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkFront`, 200, true)\r\n]);\r\ntiles.placeOnTile(player1Sprite, tiles.getTileLocation(1, 7));\r\nplayer1Sprite.onTurnEnd(function() {\r\n    isP1Turn = false;\r\n    player2Sprite.startTurn();\r\n});\r\nplayer1Sprite.onDeath(function() {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 2 Wins!\");\r\n    game.gameOverPlayerWin(2);\r\n})\r\n\r\nlet player2Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player2, SpriteKind.Player, Direction.Down);\r\nplayer2Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`witchLeft`, 200, true),\r\n    new animation.Animation(assets.animation`witchBack`, 200, true),\r\n    new animation.Animation(assets.animation`witchRight`, 200, true),\r\n    new animation.Animation(assets.animation`witchForward`, 200, true)\r\n]);\r\ntiles.placeOnTile(player2Sprite, tiles.getTileLocation(2, 7));\r\n//tiles.placeOnTile(player2Sprite, tiles.getTileLocation(10, 2));\r\nplayer2Sprite.onTurnEnd(function () {\r\n    isP1Turn = true;\r\n    player1Sprite.startTurn();\r\n});\r\nplayer2Sprite.onDeath(function () {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 1 Wins!\");\r\n    game.gameOverPlayerWin(1);\r\n})\r\n\r\ngame.onPaint(function() {\r\n    // draw HUD\r\n    screen.drawLine(0, 0, 160, 0, isP1Turn ? 4 : 9);\r\n    screen.fillRect(0, 1, 160, 22, isP1Turn ? 2 : 6);\r\n    screen.drawLine(0, 23, 160, 23, isP1Turn ? 14 : 8);\r\n\r\n    if (player1Sprite.storedTile)\r\n        screen.drawImage(player1Sprite.storedTile, 5, 5);\r\n    \r\n    if (player2Sprite.storedTile)\r\n        screen.drawImage(player2Sprite.storedTile, 141, 5);\r\n\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 2, 2);\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 138, 2);\r\n\r\n    screen.print(\"P\" + (isP1Turn ? \"1\" : \"2\") + \" Turn\", 60, 5, 1);\r\n});\r\n\r\nplayer1Sprite.startTurn();","README.md":" ","assets.json":"","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"level1\": {\n        \"id\": \"level1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAwYzAwMDkwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDIwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMjAwMDAyMDAyMDAwMDAwMDAyMDIyMjIyMjIyMjIyMg==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"sprites.dungeon.floorLight2\",\n            \"sprites.castle.tileGrass1\"\n        ],\n        \"displayName\": \"level1\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","images.g.jres":"{\n    \"image2\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"blankTile\"\n    },\n    \"image1\": {\n        \"data\": \"hwQUABQAAAAAu7u7u7u7u7sAAACwHREREREREdELAADb0bu7u7u7ux29AAAbvQAAAAAAANuxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbvQAAAAAAANuxAADb0bu7u7u7ux29AACwHREREREREdELAAAAu7u7u7u7u7sAAAA=\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"selectedItemFrame\"\n    },\n    \"image3\": {\n        \"data\": \"hwQOAA4AAAARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREA\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"hitboxPlaceholder\"\n    },\n    \"anim1\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim1\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmYyZmYyZmYwMDAwMDBmMGZmMjIyMmZmMGYwMDAwZmZlZmVlZWVmZWZmMDAwMGZmMmUyMjIyZTJmZTAwMDBlZmYyZmZmZjJmZmUwMDAwZmZmZmVlZWVmZmZmMDBmMGVmYmY0ZmY0ZmJmZTBmZjBlZTE0ZGZmZDQxZWUwZjAwZWZkZWRkZGRlZGZlMDAwMGYwZWU0NDQ0ZWUwZjAwMDA0ZTJmMjIyMmYyZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY1NDQ1ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDBmMGVmZjJmZmZmMmZmZTBmZjBmZmZmZWVlZWZmZmYwZjAwZWZiZjRmZjRmYmZlMDAwMGVmMTRkZmZkNDFmZTAwMDBmMDRlZGRkZGU0ZWYwMDAwZWYyZjIyZTJkZGU0MDAwMDRlMmYyMmUyZGQwZTAwMDAwMDRmNTRmNWVlMDAwMDAwMDBmZmZmZmYwZjAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDAwMGVmZjJmZmZmMmZmZTAwMDBmZmZmZWVlZWZmZmYwMGYwZWZiZjRmZjRmYmZlMGZmMGVlMTRkZmZkNDFlZTBmMDBlZmRlZGRkZGVkZmUwMDAwZjBlZTQ0NDRlZTBmMDAwMDRlMmYyMjIyZjJlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjU0NDVmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmMmZmMmZmMDAwMDAwZjBmZjIyMjJmZjBmMDAwMGZmZWZlZWVlZmVmZjAwMDBlZjJlMjIyMmUyZmYwMGYwZWZmMmZmZmYyZmZlMGZmMGZmZmZlZWVlZmZmZjBmMDBlZmJmNGZmNGZiZmUwMDAwZWYxNGRmZmQ0MWZlMDAwMGZlNGVkZGRkZTQwZjAwMDA0ZWRkMmUyMmYyZmUwMDAwZTBkZDJlMjJmMmU0MDAwMDAwZWU1ZjQ1ZjQwMDAwMDAwMGYwZmZmZmZmMDAwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkFront\"\n    },\n    \"anim2\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim2\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDBmZmZmZmYwMDAwMDAwMGYwZjJlZWVlZmYwMDAwMDAyZjIyZWZlZWZlMGYwMDAwZWZlZWZlZWZlZTBmMDBmMDJlMjJlMmZlZmYwZjAwZjBlMmZmZmYyMmUyMGYwMGYwZmZlZWZlZmZmZmZmMDBmMGVlNDRiZjRlZTRmZjAwMDBlZmRkMWZkNGU0ZmUwMDAwZjBkZGRkZTRlZTBmMDAwMGYwNGU0NGVlZmYwMDAwMDBmMDIyZTJkZDA0MDAwMDAwZjAyMmUyZGQwZTAwMDAwMGYwNTVmNGVlMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwMDAwMGZmMGYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZWRlZWVlMGYwMDAwZjA0ZWRlNGQwZjAwMDAwMGYwMjJkZWVkMGYwMDAwMDBmZjU1ZWZmZWZmMDAwMDAwZmZmZmZmZmZmZjAwMDAwMGYwZmYwMGYwMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZGRlNGVlMGYwMDAwZjA0ZTQ0ZWVmZjAwMDAwMGYwMjJlMmRkMDQwMDAwMDBmMDIyZTJkZDBlMDAwMDAwZjA1NWY0ZWUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmMGYyZWVlZWZmMDAwMDAwMmYyMmVmZWVmZTBmMDAwMGVmZWVmZWVmZWUwZjAwZjAyZTIyZTJmZWZmMGYwMGYwZTJmZmZmMjJlMjBmMDBmMGZmZWVmZWZmZmZmZjAwZjBlZTQ0YmY0ZWU0ZmYwMDAwZWZkZDFmZDRlNGZlMDAwMGYwZGRkZGU0ZWUwZjAwMDBmMDRlNDRkZTRkMDAwMDAwZjAyMjIyZGVlZDAwMDAwMGZmNTU0NGVmZmUwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjBmZjAwZjAwZjAwMDA=\",\n        \"displayName\": \"heroWalkLeft\"\n    },\n    \"anim3\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim3\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZmZlZWVlMmYwZjAwMDBmMGVmZWVmZTIyZjIwMDAwZjBlZWZlZWZlZWZlMDAwMGYwZmZlZjJlMjJlMjBmMDBmMDJlMjJmZmZmMmUwZjAwZmZmZmZmZWZlZWZmMGYwMGZmNGVlNGZiNDRlZTBmMDBlZjRlNGRmMWRkZmUwMDAwZjBlZTRlZGRkZDBmMDAwMDAwZmZlZTQ0ZTQwZjAwMDAwMDQwZGQyZTIyMGYwMDAwMDBlMGRkMmUyMjBmMDAwMDAwZjBlZTRmNTUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlZWVkZWRkMGYwMDAwMDBmMGQ0ZWRlNDBmMDAwMDAwZjBkZWVkMjIwZjAwMDAwMGZmZWZmZTU1ZmYwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjAwZjAwZmYwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlNGVkZGRkMGYwMDAwMDBmZmVlNDRlNDBmMDAwMDAwNDBkZDJlMjIwZjAwMDAwMGUwZGQyZTIyMGYwMDAwMDBmMGVlNGY1NTBmMDAwMDAwMDBmZmZmZmYwMDAwMDAwMDAwZjBmZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmYwMDAwMDAwMGZmZWVlZTJmMGYwMDAwZjBlZmVlZmUyMmYyMDAwMGYwZWVmZWVmZWVmZTAwMDBmMGZmZWYyZTIyZTIwZjAwZjAyZTIyZmZmZjJlMGYwMGZmZmZmZmVmZWVmZjBmMDBmZjRlZTRmYjQ0ZWUwZjAwZWY0ZTRkZjFkZGZlMDAwMGYwZWU0ZWRkZGQwZjAwMDAwMGQ0ZWQ0NGU0MGYwMDAwMDBkZWVkMjIyMjBmMDAwMDAwZWZmZTQ0NTVmZjAwMDAwMGZmZmZmZmZmZmYwMDAwMDBmMDBmMDBmZjBmMDA=\",\n        \"displayName\": \"heroWalkRight\"\n    },\n    \"anim4\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim4\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmZlZWVlZmYwMDAwMDBmMGVlZmVlZmVlMGYwMDAwZmZmZjJmZjJmZmZmMDAwMGZmMmUyZWUyZTJmZjAwMDBlZmYyZjIyZjJmZmUwMDAwZmYyZmUyMmVmMmZmMDBmMGVmMmZlZmZlZjJmZTBmZjBlZWZmZWVlZWVmZWUwZjAwZWZlZWVlZWVlZWZlMDAwMGYwZWVlZWVlZWUwZjAwMDA0ZWZmZmZmZmZmZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY0NDQ0ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmMGZmMmZmMmZmMGYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMmZmZjJmZTAwMDBmZjJmZWYyZWYyZmYwMDAwZWZmMmVmMmVlZmZlMDBmMGVmZmZlZWZlZWVmZTBmZjBlZmVlZWVlZWVlZmUwZjAwZjBlZWVlZWVlZTBmMDAwMGUwZmZmZmZmZmZlNDAwMDA0MDJmMjIyMmRlNGQwMDAwZTBmZmZmZmZlZTA0MDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmZmZmMmZmMmZmZmYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMjJmMmZmZTAwMDBmZjJmZTIyZWYyZmYwMGYwZWYyZmVmZmVmMmZlMGZmMGVlZmZlZWVlZWZlZTBmMDBlZmVlZWVlZWVlZmUwMDAwZjBlZWVlZWVlZTBmMDAwMDRlZmZmZmZmZmZlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjQ0NDRmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmZWVlZWZmMDAwMDAwZjBlZWZlZWZlZTBmMDAwMGYwZmYyZmYyZmYwZjAwMDBmZjJlMmVlMmUyZmYwMDAwZWYyZmZmMmYyZmZlMDAwMGZmMmZlMmZlZjJmZjAwMDBlZmZlZTJmZTJmZmUwMGYwZWZlZWVmZWVmZmZlMGZmMGVmZWVlZWVlZWVmZTBmMDBmMGVlZWVlZWVlMGYwMDAwNGVmZmZmZmZmZjBlMDAwMGQ0ZWQyMjIyZjIwNDAwMDA0MGVlZmZmZmZmMGUwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkBack\"\n    },\n    \"anim5\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim5\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwY2MwMDAwMDAwMDAwMDBiY2M1MDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmJmZWZmZWZiZmYwMDAwZmYxZmJmZmJmMWZmMDAwMGYwYmZiYmJiZmIwZjAwMDBlMGZlZWVlZWVmMGUwMDAwYmViY2I1NWJmYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward\"\n    },\n    \"anim6\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim6\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGNjMGMwMDAwMDAwMDAwMDA1Y2NiMDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGYwZmZmZmZmZmYwZjAwMDBlMGZlZmZmZmZmMGUwMDAwYmViZmI1NWJjYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZWJmZWZmYmZlYjAwMDBlMGJiYmU1YmY1ZWUwMDAwMDBlYzVlNTU1NTBmMDAwMDAwZjBmZmZmZmYwMDAwMDAwMDAwYzBjYzAwMDAwMDAwMDAwMGJjYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZmVmZmZmZWYwZTAwMDBiZWJjYjU1YmZiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMDAwNWMwYzAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmMGZmZmZmZmVlMGYwMDAwYmVmYmVlZWViZTBlMDAwMGVlNWZiNWViYmIwZTAwMDBmMDU1NTVlNWNlMDAwMDAwMDBmZmZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchBack\"\n    },\n    \"anim7\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim7\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDA1YzBjMDAwMDAwMDAwMGNjNTVjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGYwNTU1NTU1NTVmZjAwMDAwMGVmZWViZmVlZmYwMDAwMDBlZmJiMWZmYmZmMDAwMDAwYmZiYmJiZmIwZjAwMDAwMGYwZWVlZWVmMGUwMDAwMDBmMGI1ZWJiYjBlMDAwMDAwNWY1NWU1YmIwZTAwMDAwMGJjNTU1NWVlMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGNjYzUwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiZWJmZTBmMDAwMDAwZjBlZWJlZWIwZjAwMDAwMDVmYmJiZWViMDAwMDAwMDA1YzU1ZTVmZTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiYmJmYjBmMDAwMDAwZjBlZWVlZWYwZTAwMDAwMGYwYjVlYmJiMGUwMDAwMDA1ZjU1ZTViYjBlMDAwMDAwYmM1NTU1ZWUwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwY2NjNTAwMDAwMDAwMDBjYzU1YzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmMDU1NTU1NTU1ZmYwMDAwMDBlZmVlYmZlZWZmMDAwMDAwZWZiYjFmZmJmZjAwMDAwMGJmYmJiYmZiMGYwMDAwMDBmMGVlZWViZWViMDAwMDAwNWZiNWJiYmVlYjAwMDAwMDVjNTU1NWVlMGUwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchLeft\"\n    },\n    \"anim8\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim8\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDBjMGM1MDAwMDAwMDAwMGNjNWM1NWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTUwZjAwMDBmZmVlZmJlZWZlMDAwMDAwZmZiZmYxYmJmZTAwMDAwMGYwYmZiYmJiZmIwMDAwMDBlMGZlZWVlZTBmMDAwMDAwZTBiYmJlNWIwZjAwMDAwMGUwYmI1ZTU1ZjUwMDAwMDAwMGVlNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjY2MwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBlZmJlYmJmYjAwMDAwMGYwYmVlYmVlMGYwMDAwMDAwMGJlZWJiYmY1MDAwMDAwMDBlZjVlNTVjNTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBiZmJiYmJmYjAwMDAwMGUwZmVlZWVlMGYwMDAwMDBlMGJiYmU1YjBmMDAwMDAwZTBiYjVlNTVmNTAwMDAwMDAwZWU1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwNWNjYzAwMDAwMDAwMDBjYzVjNTVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1MGYwMDAwZmZlZWZiZWVmZTAwMDAwMGZmYmZmMWJiZmUwMDAwMDBmMGJmYmJiYmZiMDAwMDAwYmVlYmVlZWUwZjAwMDAwMGJlZWJiYjViZjUwMDAwMDBlMGVlNTU1NWM1MDAwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchRight\"\n    },\n    \"anim9\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim9\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDBjZmZhMDAwMDAwMDAwMGZmYWZmYWZmMDAwMDAwZmZmY2FhYWFmZmZmMDBmMGNjY2FhYWFhYWNjYzBmZjBhY2NhYWNjYWFjY2EwZjAwYWZhYWNjY2NhYWZhMDAwMGVmYWFhYWFhYWFmZTAwMDA0ZjllYmZmYmU5ZjQwMDAwNGYxNGQ4OGQ0MWY0MDAwMGYwZDRkZGRkNGQwZjAwMDBiMGZiYmJiYmJmMGIwMDAwZGJjZmNhYWNmY2JkMDAwMGJiYWZhYWFhZmFiYjAwMDAwMGNmYWFhYWZjMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward0\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}","images.g.ts":"","voidbattle.ts":"enum Direction {\n    Left = 0,\n    Up = 1,\n    Right = 2,\n    Down = 3\n}\n\nenum SpriteAction {\n    Idle,\n    Move,\n    Fall,\n    Die\n}\n\nnamespace SpriteKind {\n    export const Detector = SpriteKind.create();\n}\n\nnamespace animation {\n    const stateNamespace = \"__animation\";\n\n    interface AnimationState {\n        animations: SpriteAnimation[];\n    }\n\n    // this will tell the state machines that their animations are still active\n    export function updateActiveStateAnimations(): void {\n        let state: AnimationState = game.currentScene().data[stateNamespace];\n        if(state && state.animations) {\n            state.animations.forEach((anim: SpriteAnimation) => {\n                if (anim.sprite instanceof VoidBattle.VBSprite) {\n                    const vbs = anim.sprite as VoidBattle.VBSprite;\n                    if(vbs.sm)\n                        vbs.sm.animationActive = true;\n                }\n            });\n        }\n    }\n\n    export class Animation {\n        constructor(public frames: Image[], public frameInterval: number = 500, public loop: boolean = false){}\n        runAnimationOnSprite(sprite: Sprite) {\n            animation.runImageAnimation(sprite, this.frames, this.frameInterval, this.loop);\n        }\n    }\n\n    interface AnimationMap {\n        [key: number]: Animation[];\n    }\n\n    let stateMachines: AnimationStateMachine[];\n\n    // should allow you to change the sprite's animation based on its direction\n    // what should i put in here and what should just be part of VBSprite?\n    export class AnimationStateMachine {\n        dir: Direction = Direction.Down;\n        lastDir: Direction = Direction.Down;\n        sprite: VoidBattle.VBSprite;\n        lastAction: number;\n        animationActive: boolean = false;\n        stateAnimations: AnimationMap = {};\n\n        constructor(sprite: VoidBattle.VBSprite) {\n            this.sprite = sprite;\n            this.lastAction = sprite._action;\n            this._init();\n        }\n\n        _init() {\n            if (!stateMachines) {\n                stateMachines = [];\n                game.eventContext().registerFrameHandler(scene.ANIMATION_UPDATE_PRIORITY, () => {\n                    // see which animations are still active\n                    animation.updateActiveStateAnimations();\n\n                    // remove state machines of dead sprites\n                    stateMachines = stateMachines.filter((sm: AnimationStateMachine) => {\n                        if (sm.sprite.flags & sprites.Flag.Destroyed)\n                            return false;\n                        sm.update();\n                        return true;\n                    });\n                });\n            }\n            stateMachines.push(this);\n        }\n\n        update() {\n            // detect if the action has been changed\n            if(this.lastAction != this.sprite._action || this.lastDir != this.dir) {\n                this.lastAction = this.sprite._action;\n                this.lastDir = this.dir;\n                const anim = this.getAnimationFromState(this.lastAction)\n                if(anim)\n                    anim.runAnimationOnSprite(this.sprite);\n            }\n            this.animationActive = false;\n        }\n\n        setDirection(direction: Direction) {\n            this.dir = direction;\n        }\n\n        // You should really put these in the order [left, up, right, down]\n        setStateAnimations(state: number, animations: Animation[]) {\n            this.stateAnimations[state] = animations;\n        }\n\n        getAnimationFromState(state: number): Animation {\n            const anims: Animation[] = this.stateAnimations[state];\n            if (!anims || anims.length == 0)\n                return null;\n            \n            if (anims.length == 1 || this.dir < 0 || this.dir >= anims.length)\n                return anims[0];\n            \n            return anims[this.dir];\n\n        }\n        //constructor(frameInterval: number, )\n    }\n\n}\n\n\nnamespace VoidBattle {\n    let collisionSprite: Sprite\n    let detectionSetUp: boolean = false;\n\n    // does not work\n    export function getCollisionsAtLocation(location: tiles.Location): Sprite[] {\n        const s: Sprite = sprites.create(assets.image`hitboxPlaceholder`);\n        s.setFlag(SpriteFlag.Invisible, true);\n        tiles.placeOnTile(s, location);\n        \n        const overlaps = game.currentScene().physicsEngine.overlaps(s);\n        sprites.destroy(s);\n        return overlaps;\n    }\n\n    export function vbCollisionCheck(location: tiles.Location, callback: (overlaps: Sprite[]) => void) {\n        control.runInParallel(() => {\n            tiles.placeOnTile(collisionSprite, location);\n            pause(1);\n            const overlaps = game.currentScene().physicsEngine.overlaps(collisionSprite);\n            callback(overlaps);\n        });\n    }\n\n    export class SpriteDetector extends sprites.ExtendableSprite {\n        \n        overlappers: Sprite[] = [];\n        cb: (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => void;\n        isActive: boolean = true;\n\n        constructor(loc: tiles.Location, callback: (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => void) {\n            super(assets.image`hitboxPlaceholder`, SpriteKind.Detector);\n            //this.setFlag(SpriteFlag.Invisible, true);\n            tiles.placeOnTile(this, loc);\n            this.cb = callback;\n        }\n\n        update(deltaTimeMillis: number) {\n            if (this.isActive && this.cb) {\n                const isOnWall: boolean = tiles.tileAtLocationIsWall(this.tilemapLocation());\n                this.cb(this, this.overlappers, isOnWall);\n            }\n            this.overlappers = [];\n        }\n    }\n\n    const tileSize = 16;\n    export class VBSprite extends sprites.ExtendableSprite {\n        sm: animation.AnimationStateMachine;\n        dir: Direction = Direction.Down;\n        onDeathCallback: () => void;\n        canPush: boolean = false;\n        pushable: boolean = false;\n        hitboxWidth: number = 16;\n        hitboxHeight: number = 16;\n\n        constructor(spriteImage: Image, kind?: number, dir?: Direction) {\n            super(spriteImage, kind);\n            this.flags ^= SpriteFlag.GhostThroughWalls;\n            this.setDimensions(this.hitboxWidth, this.hitboxHeight);\n            //this._hitbox.ox = Fx8(-4);\n            //this._hitbox.oy = Fx8(-4);\n            this.sm = new animation.AnimationStateMachine(this);\n            this._action = SpriteAction.Idle;\n\n            if(!detectionSetUp) {\n                sprites.onOverlap(SpriteKind.Detector, SpriteKind.Player, function (sprite: Sprite, otherSprite: Sprite) {\n                    if (sprite instanceof VoidBattle.SpriteDetector) {\n                        const sd = sprite as VoidBattle.SpriteDetector;\n                        sd.overlappers.push(otherSprite);\n                    }\n                });\n                detectionSetUp = true;\n            }\n\n            if (dir)\n                this.setDirection(dir);\n            else\n                this.setDirection(Direction.Down);\n            \n        }\n\n        // Accounts for the offset from the hitbox, which is wider so we can\n        // detect neighboring sprites\n        draw(drawLeft: number, drawTop: number) {\n            drawLeft += (this.hitboxWidth - this.image.width) >> 1;\n            drawTop += (this.hitboxHeight - this.image.height) >> 1;\n            super.draw(drawLeft, drawTop);\n        }\n\n        setPosition(x: number, y: number): void {\n            const physics = game.currentScene().physicsEngine;\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n            // call it a second time to correct a bug where sprites that ghost \n            // through walls are still pushed out\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n        }\n\n        update(deltaTimeMillis: number) {\n            if (this.tileKindAt(TileDirection.Center, assets.image`blankTile`)) {\n                sprites.destroy(this, effects.fire, 2000);\n                this.die();\n            }\n        }\n\n        die() {\n            if (this.onDeathCallback){\n                control.runInParallel(this.onDeathCallback);\n            } \n        }\n\n        onDeath(cb: () => void) {\n            this.onDeathCallback = cb;\n        }\n\n        setDirection(dir: Direction) {\n            this.dir = dir;\n            this.sm.setDirection(dir);\n        }\n\n        getNeighboringLocation(dir: Direction): tiles.Location {\n            const loc: tiles.Location = this.tilemapLocation();\n            let neighbor: tiles.Location;\n            switch (dir) {\n                case Direction.Left:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Left);\n                    break;\n                case Direction.Up:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Top);\n                    break;\n                case Direction.Right:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Right);\n                    break;\n                case Direction.Down:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Bottom);\n                    break;\n            }\n            return neighbor;\n        }\n        \n        // moves this sprite in a certain direction. Returns true if the move\n        // was successful\n        move(dir: Direction, turnToFaceDirection: boolean = false): boolean {\n            const neighbor = this.getNeighboringLocation(dir);\n            \n            if(turnToFaceDirection)\n                this.setDirection(dir);\n\n            if (tiles.tileAtLocationIsWall(neighbor)) {\n                scene.cameraShake(2, 200);\n                return false;\n            }\n        \n            //const overlaps: Sprite[] = getCollisionsAtLocation(neighbor);\n            const neighborSprite = this.getNeighboringSprite(neighbor);\n\n            if(neighborSprite)\n                return false;\n            \n            // gotta do it twice because there's a bug where it ignores the ghost \n            // through walls flag\n            //tiles.placeOnTile(this, neighbor);\n            tiles.placeOnTile(this, neighbor);\n            return true;\n            \n        }\n\n        getNeighboringSprite(loc: tiles.Location): Sprite {\n            const engine = game.currentScene().physicsEngine;\n            let neighbors: Sprite[];\n            // the overlaps function simply does not work :/ i hate this engine so much\n            /*\n            if(engine instanceof ArcadePhysicsEngine){\n                const ape = engine as ArcadePhysicsEngine;\n                neighbors = ape.map.neighbors(this)\n            }\n            */\n            let overlaps = game.currentScene().physicsEngine.overlaps(this);\n            for(let i = 0; i < overlaps.length; i++) {\n                const s = overlaps[i];\n                if (s.tilemapLocation().column == loc.column && s.tilemapLocation().row == loc.row)\n                    return s;\n            }\n            return null;\n        }\n\n    }\n\n    export class VBPlayerSprite extends VBSprite {\n        ctrl: controller.Controller;\n        isMyTurn: boolean = false;\n        // used when the player has already started an input but is waiting on some\n        // number of processes to complete before control can be restored or the turn\n        // can end\n        awaitingTurnCompletion: boolean = false;\n        turnEndCallback: () => void;\n        storedTile: Image;\n        // failsafe if there are shenanigans with the turns\n        controlsLocked: boolean = false;\n\n        constructor(spriteImage: Image, ctrl: controller.Controller, kind?: number, dir?: Direction){\n            super(spriteImage, kind, dir);\n            this.ctrl = ctrl;\n            this._setupButtonEvents();\n            this.canPush = true;\n            this.pushable = true;\n        }\n\n        _setupButtonEvents() {\n            // gotta do this for literally every event it seems. kill me\n            // maybe there's a better way, but if there is I haven't found one\n            this.ctrl.onButtonEvent(ControllerButton.Left, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Left, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Right, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Right, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Up, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Up, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Down, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Down, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.A, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.A, ControllerButtonEvent.Pressed);\n            });\n        }\n\n        startTurn() {\n            this.isMyTurn = true;\n        }\n\n        onTurnEnd(cb: () => void) {\n            this.turnEndCallback = cb;\n        }\n\n        endTurn() {\n            this.awaitingTurnCompletion = false;\n            this.isMyTurn = false;\n            if( this.turnEndCallback ) this.turnEndCallback();\n        }\n\n        handleButtonInput(button: ControllerButton, event: ControllerButtonEvent) {\n            if(this.awaitingTurnCompletion || this.controlsLocked || !this.isMyTurn) return;\n            \n            switch(button) {\n                case ControllerButton.Left:\n                    this.step(Direction.Left);\n                    break;\n                case ControllerButton.Up:\n                    this.step(Direction.Up);\n                    break;\n                case ControllerButton.Right:\n                    this.step(Direction.Right);\n                    break;\n                case ControllerButton.Down:\n                    this.step(Direction.Down);\n                    break;\n                case ControllerButton.A:\n                    this.tryPrimaryAction();\n                    break;\n            }\n            //if (moveCompleted) this.endTurn();\n        }\n\n        // step in a particular direction\n        // if there is an immovable obstacle, face it but do not move\n        step(dir: Direction) {\n            this.awaitingTurnCompletion = true;\n\n            this.setDirection(dir);\n            const neighbor = this.getNeighboringLocation(dir);\n\n            const detector = new SpriteDetector(neighbor, (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => {\n                if (isOnWall)\n                    scene.cameraShake(2, 200);\n                else if (overlappers && overlappers.length > 0) {}\n                else\n                    tiles.placeOnTile(this, neighbor);\n                \n                //sprites.destroy(detector, effects.spray, 200);\n                //this.awaitingTurnCompletion = false;\n                //this.endTurn();\n            });\n        }\n\n        // attempts to interact using the A button. If the action fails, return false\n        tryPrimaryAction() {\n            const neighbor: tiles.Location = this.getNeighboringLocation(this.dir);\n            \n            if (tiles.tileAtLocationIsWall(neighbor))\n                return;\n            else if (tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && this.storedTile) {\n                tiles.setTileAt(neighbor, this.storedTile);\n                this.storedTile = null;\n                this.endTurn();\n            } else if (!tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && !this.storedTile) {\n                this.storedTile = tiles.getTileImage(neighbor);\n                tiles.setTileAt(neighbor, assets.image`blankTile`);\n                this.endTurn();\n            }\n        }\n    }\n}\n\n","pxt.json":"{\n    \"name\": \"Void Battle\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\",\n        \"images.g.jres\",\n        \"images.g.ts\",\n        \"voidbattle.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}},{"timestamp":1761490109583,"editorVersion":"2.0.61","text":{"main.ts":"tiles.setCurrentTilemap(tilemap`level1`);\r\nscene.centerCameraAt(96, 68);\r\n//game.debug = true;\r\nlet isP1Turn: boolean = true;\r\n\r\nlet player1Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player1, SpriteKind.Player, Direction.Up);\r\nplayer1Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`heroWalkLeft`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkBack`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkRight`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkFront`, 200, true)\r\n]);\r\ntiles.placeOnTile(player1Sprite, tiles.getTileLocation(1, 7));\r\nplayer1Sprite.onTurnEnd(function() {\r\n    isP1Turn = false;\r\n    player2Sprite.startTurn();\r\n});\r\nplayer1Sprite.onDeath(function() {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 2 Wins!\");\r\n    game.gameOverPlayerWin(2);\r\n})\r\n\r\nlet player2Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player2, SpriteKind.Player, Direction.Down);\r\nplayer2Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`witchLeft`, 200, true),\r\n    new animation.Animation(assets.animation`witchBack`, 200, true),\r\n    new animation.Animation(assets.animation`witchRight`, 200, true),\r\n    new animation.Animation(assets.animation`witchForward`, 200, true)\r\n]);\r\ntiles.placeOnTile(player2Sprite, tiles.getTileLocation(2, 7));\r\n//tiles.placeOnTile(player2Sprite, tiles.getTileLocation(10, 2));\r\nplayer2Sprite.onTurnEnd(function () {\r\n    isP1Turn = true;\r\n    player1Sprite.startTurn();\r\n});\r\nplayer2Sprite.onDeath(function () {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 1 Wins!\");\r\n    game.gameOverPlayerWin(1);\r\n})\r\n\r\ngame.onPaint(function() {\r\n    // draw HUD\r\n    screen.drawLine(0, 0, 160, 0, isP1Turn ? 4 : 9);\r\n    screen.fillRect(0, 1, 160, 22, isP1Turn ? 2 : 6);\r\n    screen.drawLine(0, 23, 160, 23, isP1Turn ? 14 : 8);\r\n\r\n    if (player1Sprite.storedTile)\r\n        screen.drawImage(player1Sprite.storedTile, 5, 5);\r\n    \r\n    if (player2Sprite.storedTile)\r\n        screen.drawImage(player2Sprite.storedTile, 141, 5);\r\n\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 2, 2);\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 138, 2);\r\n\r\n    screen.print(\"P\" + (isP1Turn ? \"1\" : \"2\") + \" Turn\", 60, 5, 1);\r\n});\r\n\r\nplayer1Sprite.startTurn();","README.md":" ","assets.json":"","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"level1\": {\n        \"id\": \"level1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAwYzAwMDkwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDIwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMjAwMDAyMDAyMDAwMDAwMDAyMDIyMjIyMjIyMjIyMg==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"sprites.dungeon.floorLight2\",\n            \"sprites.castle.tileGrass1\"\n        ],\n        \"displayName\": \"level1\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","images.g.jres":"{\n    \"image2\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"blankTile\"\n    },\n    \"image1\": {\n        \"data\": \"hwQUABQAAAAAu7u7u7u7u7sAAACwHREREREREdELAADb0bu7u7u7ux29AAAbvQAAAAAAANuxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbvQAAAAAAANuxAADb0bu7u7u7ux29AACwHREREREREdELAAAAu7u7u7u7u7sAAAA=\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"selectedItemFrame\"\n    },\n    \"image3\": {\n        \"data\": \"hwQOAA4AAAARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREA\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"hitboxPlaceholder\"\n    },\n    \"anim1\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim1\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmYyZmYyZmYwMDAwMDBmMGZmMjIyMmZmMGYwMDAwZmZlZmVlZWVmZWZmMDAwMGZmMmUyMjIyZTJmZTAwMDBlZmYyZmZmZjJmZmUwMDAwZmZmZmVlZWVmZmZmMDBmMGVmYmY0ZmY0ZmJmZTBmZjBlZTE0ZGZmZDQxZWUwZjAwZWZkZWRkZGRlZGZlMDAwMGYwZWU0NDQ0ZWUwZjAwMDA0ZTJmMjIyMmYyZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY1NDQ1ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDBmMGVmZjJmZmZmMmZmZTBmZjBmZmZmZWVlZWZmZmYwZjAwZWZiZjRmZjRmYmZlMDAwMGVmMTRkZmZkNDFmZTAwMDBmMDRlZGRkZGU0ZWYwMDAwZWYyZjIyZTJkZGU0MDAwMDRlMmYyMmUyZGQwZTAwMDAwMDRmNTRmNWVlMDAwMDAwMDBmZmZmZmYwZjAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDAwMGVmZjJmZmZmMmZmZTAwMDBmZmZmZWVlZWZmZmYwMGYwZWZiZjRmZjRmYmZlMGZmMGVlMTRkZmZkNDFlZTBmMDBlZmRlZGRkZGVkZmUwMDAwZjBlZTQ0NDRlZTBmMDAwMDRlMmYyMjIyZjJlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjU0NDVmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmMmZmMmZmMDAwMDAwZjBmZjIyMjJmZjBmMDAwMGZmZWZlZWVlZmVmZjAwMDBlZjJlMjIyMmUyZmYwMGYwZWZmMmZmZmYyZmZlMGZmMGZmZmZlZWVlZmZmZjBmMDBlZmJmNGZmNGZiZmUwMDAwZWYxNGRmZmQ0MWZlMDAwMGZlNGVkZGRkZTQwZjAwMDA0ZWRkMmUyMmYyZmUwMDAwZTBkZDJlMjJmMmU0MDAwMDAwZWU1ZjQ1ZjQwMDAwMDAwMGYwZmZmZmZmMDAwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkFront\"\n    },\n    \"anim2\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim2\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDBmZmZmZmYwMDAwMDAwMGYwZjJlZWVlZmYwMDAwMDAyZjIyZWZlZWZlMGYwMDAwZWZlZWZlZWZlZTBmMDBmMDJlMjJlMmZlZmYwZjAwZjBlMmZmZmYyMmUyMGYwMGYwZmZlZWZlZmZmZmZmMDBmMGVlNDRiZjRlZTRmZjAwMDBlZmRkMWZkNGU0ZmUwMDAwZjBkZGRkZTRlZTBmMDAwMGYwNGU0NGVlZmYwMDAwMDBmMDIyZTJkZDA0MDAwMDAwZjAyMmUyZGQwZTAwMDAwMGYwNTVmNGVlMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwMDAwMGZmMGYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZWRlZWVlMGYwMDAwZjA0ZWRlNGQwZjAwMDAwMGYwMjJkZWVkMGYwMDAwMDBmZjU1ZWZmZWZmMDAwMDAwZmZmZmZmZmZmZjAwMDAwMGYwZmYwMGYwMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZGRlNGVlMGYwMDAwZjA0ZTQ0ZWVmZjAwMDAwMGYwMjJlMmRkMDQwMDAwMDBmMDIyZTJkZDBlMDAwMDAwZjA1NWY0ZWUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmMGYyZWVlZWZmMDAwMDAwMmYyMmVmZWVmZTBmMDAwMGVmZWVmZWVmZWUwZjAwZjAyZTIyZTJmZWZmMGYwMGYwZTJmZmZmMjJlMjBmMDBmMGZmZWVmZWZmZmZmZjAwZjBlZTQ0YmY0ZWU0ZmYwMDAwZWZkZDFmZDRlNGZlMDAwMGYwZGRkZGU0ZWUwZjAwMDBmMDRlNDRkZTRkMDAwMDAwZjAyMjIyZGVlZDAwMDAwMGZmNTU0NGVmZmUwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjBmZjAwZjAwZjAwMDA=\",\n        \"displayName\": \"heroWalkLeft\"\n    },\n    \"anim3\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim3\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZmZlZWVlMmYwZjAwMDBmMGVmZWVmZTIyZjIwMDAwZjBlZWZlZWZlZWZlMDAwMGYwZmZlZjJlMjJlMjBmMDBmMDJlMjJmZmZmMmUwZjAwZmZmZmZmZWZlZWZmMGYwMGZmNGVlNGZiNDRlZTBmMDBlZjRlNGRmMWRkZmUwMDAwZjBlZTRlZGRkZDBmMDAwMDAwZmZlZTQ0ZTQwZjAwMDAwMDQwZGQyZTIyMGYwMDAwMDBlMGRkMmUyMjBmMDAwMDAwZjBlZTRmNTUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlZWVkZWRkMGYwMDAwMDBmMGQ0ZWRlNDBmMDAwMDAwZjBkZWVkMjIwZjAwMDAwMGZmZWZmZTU1ZmYwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjAwZjAwZmYwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlNGVkZGRkMGYwMDAwMDBmZmVlNDRlNDBmMDAwMDAwNDBkZDJlMjIwZjAwMDAwMGUwZGQyZTIyMGYwMDAwMDBmMGVlNGY1NTBmMDAwMDAwMDBmZmZmZmYwMDAwMDAwMDAwZjBmZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmYwMDAwMDAwMGZmZWVlZTJmMGYwMDAwZjBlZmVlZmUyMmYyMDAwMGYwZWVmZWVmZWVmZTAwMDBmMGZmZWYyZTIyZTIwZjAwZjAyZTIyZmZmZjJlMGYwMGZmZmZmZmVmZWVmZjBmMDBmZjRlZTRmYjQ0ZWUwZjAwZWY0ZTRkZjFkZGZlMDAwMGYwZWU0ZWRkZGQwZjAwMDAwMGQ0ZWQ0NGU0MGYwMDAwMDBkZWVkMjIyMjBmMDAwMDAwZWZmZTQ0NTVmZjAwMDAwMGZmZmZmZmZmZmYwMDAwMDBmMDBmMDBmZjBmMDA=\",\n        \"displayName\": \"heroWalkRight\"\n    },\n    \"anim4\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim4\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmZlZWVlZmYwMDAwMDBmMGVlZmVlZmVlMGYwMDAwZmZmZjJmZjJmZmZmMDAwMGZmMmUyZWUyZTJmZjAwMDBlZmYyZjIyZjJmZmUwMDAwZmYyZmUyMmVmMmZmMDBmMGVmMmZlZmZlZjJmZTBmZjBlZWZmZWVlZWVmZWUwZjAwZWZlZWVlZWVlZWZlMDAwMGYwZWVlZWVlZWUwZjAwMDA0ZWZmZmZmZmZmZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY0NDQ0ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmMGZmMmZmMmZmMGYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMmZmZjJmZTAwMDBmZjJmZWYyZWYyZmYwMDAwZWZmMmVmMmVlZmZlMDBmMGVmZmZlZWZlZWVmZTBmZjBlZmVlZWVlZWVlZmUwZjAwZjBlZWVlZWVlZTBmMDAwMGUwZmZmZmZmZmZlNDAwMDA0MDJmMjIyMmRlNGQwMDAwZTBmZmZmZmZlZTA0MDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmZmZmMmZmMmZmZmYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMjJmMmZmZTAwMDBmZjJmZTIyZWYyZmYwMGYwZWYyZmVmZmVmMmZlMGZmMGVlZmZlZWVlZWZlZTBmMDBlZmVlZWVlZWVlZmUwMDAwZjBlZWVlZWVlZTBmMDAwMDRlZmZmZmZmZmZlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjQ0NDRmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmZWVlZWZmMDAwMDAwZjBlZWZlZWZlZTBmMDAwMGYwZmYyZmYyZmYwZjAwMDBmZjJlMmVlMmUyZmYwMDAwZWYyZmZmMmYyZmZlMDAwMGZmMmZlMmZlZjJmZjAwMDBlZmZlZTJmZTJmZmUwMGYwZWZlZWVmZWVmZmZlMGZmMGVmZWVlZWVlZWVmZTBmMDBmMGVlZWVlZWVlMGYwMDAwNGVmZmZmZmZmZjBlMDAwMGQ0ZWQyMjIyZjIwNDAwMDA0MGVlZmZmZmZmMGUwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkBack\"\n    },\n    \"anim5\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim5\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwY2MwMDAwMDAwMDAwMDBiY2M1MDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmJmZWZmZWZiZmYwMDAwZmYxZmJmZmJmMWZmMDAwMGYwYmZiYmJiZmIwZjAwMDBlMGZlZWVlZWVmMGUwMDAwYmViY2I1NWJmYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward\"\n    },\n    \"anim6\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim6\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGNjMGMwMDAwMDAwMDAwMDA1Y2NiMDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGYwZmZmZmZmZmYwZjAwMDBlMGZlZmZmZmZmMGUwMDAwYmViZmI1NWJjYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZWJmZWZmYmZlYjAwMDBlMGJiYmU1YmY1ZWUwMDAwMDBlYzVlNTU1NTBmMDAwMDAwZjBmZmZmZmYwMDAwMDAwMDAwYzBjYzAwMDAwMDAwMDAwMGJjYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZmVmZmZmZWYwZTAwMDBiZWJjYjU1YmZiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMDAwNWMwYzAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmMGZmZmZmZmVlMGYwMDAwYmVmYmVlZWViZTBlMDAwMGVlNWZiNWViYmIwZTAwMDBmMDU1NTVlNWNlMDAwMDAwMDBmZmZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchBack\"\n    },\n    \"anim7\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim7\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDA1YzBjMDAwMDAwMDAwMGNjNTVjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGYwNTU1NTU1NTVmZjAwMDAwMGVmZWViZmVlZmYwMDAwMDBlZmJiMWZmYmZmMDAwMDAwYmZiYmJiZmIwZjAwMDAwMGYwZWVlZWVmMGUwMDAwMDBmMGI1ZWJiYjBlMDAwMDAwNWY1NWU1YmIwZTAwMDAwMGJjNTU1NWVlMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGNjYzUwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiZWJmZTBmMDAwMDAwZjBlZWJlZWIwZjAwMDAwMDVmYmJiZWViMDAwMDAwMDA1YzU1ZTVmZTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiYmJmYjBmMDAwMDAwZjBlZWVlZWYwZTAwMDAwMGYwYjVlYmJiMGUwMDAwMDA1ZjU1ZTViYjBlMDAwMDAwYmM1NTU1ZWUwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwY2NjNTAwMDAwMDAwMDBjYzU1YzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmMDU1NTU1NTU1ZmYwMDAwMDBlZmVlYmZlZWZmMDAwMDAwZWZiYjFmZmJmZjAwMDAwMGJmYmJiYmZiMGYwMDAwMDBmMGVlZWViZWViMDAwMDAwNWZiNWJiYmVlYjAwMDAwMDVjNTU1NWVlMGUwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchLeft\"\n    },\n    \"anim8\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim8\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDBjMGM1MDAwMDAwMDAwMGNjNWM1NWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTUwZjAwMDBmZmVlZmJlZWZlMDAwMDAwZmZiZmYxYmJmZTAwMDAwMGYwYmZiYmJiZmIwMDAwMDBlMGZlZWVlZTBmMDAwMDAwZTBiYmJlNWIwZjAwMDAwMGUwYmI1ZTU1ZjUwMDAwMDAwMGVlNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjY2MwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBlZmJlYmJmYjAwMDAwMGYwYmVlYmVlMGYwMDAwMDAwMGJlZWJiYmY1MDAwMDAwMDBlZjVlNTVjNTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBiZmJiYmJmYjAwMDAwMGUwZmVlZWVlMGYwMDAwMDBlMGJiYmU1YjBmMDAwMDAwZTBiYjVlNTVmNTAwMDAwMDAwZWU1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwNWNjYzAwMDAwMDAwMDBjYzVjNTVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1MGYwMDAwZmZlZWZiZWVmZTAwMDAwMGZmYmZmMWJiZmUwMDAwMDBmMGJmYmJiYmZiMDAwMDAwYmVlYmVlZWUwZjAwMDAwMGJlZWJiYjViZjUwMDAwMDBlMGVlNTU1NWM1MDAwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchRight\"\n    },\n    \"anim9\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim9\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDBjZmZhMDAwMDAwMDAwMGZmYWZmYWZmMDAwMDAwZmZmY2FhYWFmZmZmMDBmMGNjY2FhYWFhYWNjYzBmZjBhY2NhYWNjYWFjY2EwZjAwYWZhYWNjY2NhYWZhMDAwMGVmYWFhYWFhYWFmZTAwMDA0ZjllYmZmYmU5ZjQwMDAwNGYxNGQ4OGQ0MWY0MDAwMGYwZDRkZGRkNGQwZjAwMDBiMGZiYmJiYmJmMGIwMDAwZGJjZmNhYWNmY2JkMDAwMGJiYWZhYWFhZmFiYjAwMDAwMGNmYWFhYWZjMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward0\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}","images.g.ts":"","voidbattle.ts":"enum Direction {\n    Left = 0,\n    Up = 1,\n    Right = 2,\n    Down = 3\n}\n\nenum SpriteAction {\n    Idle,\n    Move,\n    Fall,\n    Die\n}\n\nnamespace SpriteKind {\n    export const Detector = SpriteKind.create();\n}\n\nnamespace animation {\n    const stateNamespace = \"__animation\";\n\n    interface AnimationState {\n        animations: SpriteAnimation[];\n    }\n\n    // this will tell the state machines that their animations are still active\n    export function updateActiveStateAnimations(): void {\n        let state: AnimationState = game.currentScene().data[stateNamespace];\n        if(state && state.animations) {\n            state.animations.forEach((anim: SpriteAnimation) => {\n                if (anim.sprite instanceof VoidBattle.VBSprite) {\n                    const vbs = anim.sprite as VoidBattle.VBSprite;\n                    if(vbs.sm)\n                        vbs.sm.animationActive = true;\n                }\n            });\n        }\n    }\n\n    export class Animation {\n        constructor(public frames: Image[], public frameInterval: number = 500, public loop: boolean = false){}\n        runAnimationOnSprite(sprite: Sprite) {\n            animation.runImageAnimation(sprite, this.frames, this.frameInterval, this.loop);\n        }\n    }\n\n    interface AnimationMap {\n        [key: number]: Animation[];\n    }\n\n    let stateMachines: AnimationStateMachine[];\n\n    // should allow you to change the sprite's animation based on its direction\n    // what should i put in here and what should just be part of VBSprite?\n    export class AnimationStateMachine {\n        dir: Direction = Direction.Down;\n        lastDir: Direction = Direction.Down;\n        sprite: VoidBattle.VBSprite;\n        lastAction: number;\n        animationActive: boolean = false;\n        stateAnimations: AnimationMap = {};\n\n        constructor(sprite: VoidBattle.VBSprite) {\n            this.sprite = sprite;\n            this.lastAction = sprite._action;\n            this._init();\n        }\n\n        _init() {\n            if (!stateMachines) {\n                stateMachines = [];\n                game.eventContext().registerFrameHandler(scene.ANIMATION_UPDATE_PRIORITY, () => {\n                    // see which animations are still active\n                    animation.updateActiveStateAnimations();\n\n                    // remove state machines of dead sprites\n                    stateMachines = stateMachines.filter((sm: AnimationStateMachine) => {\n                        if (sm.sprite.flags & sprites.Flag.Destroyed)\n                            return false;\n                        sm.update();\n                        return true;\n                    });\n                });\n            }\n            stateMachines.push(this);\n        }\n\n        update() {\n            // detect if the action has been changed\n            if(this.lastAction != this.sprite._action || this.lastDir != this.dir) {\n                this.lastAction = this.sprite._action;\n                this.lastDir = this.dir;\n                const anim = this.getAnimationFromState(this.lastAction)\n                if(anim)\n                    anim.runAnimationOnSprite(this.sprite);\n            }\n            this.animationActive = false;\n        }\n\n        setDirection(direction: Direction) {\n            this.dir = direction;\n        }\n\n        // You should really put these in the order [left, up, right, down]\n        setStateAnimations(state: number, animations: Animation[]) {\n            this.stateAnimations[state] = animations;\n        }\n\n        getAnimationFromState(state: number): Animation {\n            const anims: Animation[] = this.stateAnimations[state];\n            if (!anims || anims.length == 0)\n                return null;\n            \n            if (anims.length == 1 || this.dir < 0 || this.dir >= anims.length)\n                return anims[0];\n            \n            return anims[this.dir];\n\n        }\n        //constructor(frameInterval: number, )\n    }\n\n}\n\n\nnamespace VoidBattle {\n    let collisionSprite: Sprite\n    let detectionSetUp: boolean = false;\n\n    // does not work\n    export function getCollisionsAtLocation(location: tiles.Location): Sprite[] {\n        const s: Sprite = sprites.create(assets.image`hitboxPlaceholder`);\n        s.setFlag(SpriteFlag.Invisible, true);\n        tiles.placeOnTile(s, location);\n        \n        const overlaps = game.currentScene().physicsEngine.overlaps(s);\n        sprites.destroy(s);\n        return overlaps;\n    }\n\n    export function vbCollisionCheck(location: tiles.Location, callback: (overlaps: Sprite[]) => void) {\n        control.runInParallel(() => {\n            tiles.placeOnTile(collisionSprite, location);\n            pause(1);\n            const overlaps = game.currentScene().physicsEngine.overlaps(collisionSprite);\n            callback(overlaps);\n        });\n    }\n\n    export class SpriteDetector extends sprites.ExtendableSprite {\n        \n        overlappers: Sprite[] = [];\n        cb: (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => void;\n        isActive: boolean = true;\n        framesToWait: number = 2;\n\n        constructor(loc: tiles.Location, callback: (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => void) {\n            super(assets.image`hitboxPlaceholder`, SpriteKind.Detector);\n            //this.setFlag(SpriteFlag.Invisible, true);\n            tiles.placeOnTile(this, loc);\n            this.cb = callback;\n        }\n\n        update(deltaTimeMillis: number) {\n            this.framesToWait --\n            if (this.framesToWait <= 0)\n                if (this.isActive && this.cb) {\n                    console.log(\"hi\");\n                    console.log(this.overlappers);\n                    const isOnWall: boolean = tiles.tileAtLocationIsWall(this.tilemapLocation());\n                    this.cb(this, this.overlappers, isOnWall);\n                }\n            this.overlappers = [];\n        }\n    }\n\n    const tileSize = 16;\n    export class VBSprite extends sprites.ExtendableSprite {\n        sm: animation.AnimationStateMachine;\n        dir: Direction = Direction.Down;\n        onDeathCallback: () => void;\n        canPush: boolean = false;\n        pushable: boolean = false;\n        hitboxWidth: number = 16;\n        hitboxHeight: number = 16;\n\n        constructor(spriteImage: Image, kind?: number, dir?: Direction) {\n            super(spriteImage, kind);\n            this.flags ^= SpriteFlag.GhostThroughWalls;\n            this.setDimensions(this.hitboxWidth, this.hitboxHeight);\n            //this._hitbox.ox = Fx8(-4);\n            //this._hitbox.oy = Fx8(-4);\n            this.sm = new animation.AnimationStateMachine(this);\n            this._action = SpriteAction.Idle;\n\n            if(!detectionSetUp) {\n                console.log(\"setting up detection!\");\n                sprites.onOverlap(SpriteKind.Detector, SpriteKind.Player, function (sprite: Sprite, otherSprite: Sprite) {\n                    console.log(\"hello\")\n                    if (sprite instanceof VoidBattle.SpriteDetector) {\n                        const sd = sprite as VoidBattle.SpriteDetector;\n                        sd.overlappers.push(otherSprite);\n                        console.log(sd.overlappers);\n                    }\n                });\n                detectionSetUp = true;\n            }\n\n            if (dir)\n                this.setDirection(dir);\n            else\n                this.setDirection(Direction.Down);\n            \n        }\n\n        // Accounts for the offset from the hitbox, which is wider so we can\n        // detect neighboring sprites\n        draw(drawLeft: number, drawTop: number) {\n            drawLeft += (this.hitboxWidth - this.image.width) >> 1;\n            drawTop += (this.hitboxHeight - this.image.height) >> 1;\n            super.draw(drawLeft, drawTop);\n        }\n\n        setPosition(x: number, y: number): void {\n            const physics = game.currentScene().physicsEngine;\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n            // call it a second time to correct a bug where sprites that ghost \n            // through walls are still pushed out\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n        }\n\n        update(deltaTimeMillis: number) {\n            if (this.tileKindAt(TileDirection.Center, assets.image`blankTile`)) {\n                sprites.destroy(this, effects.fire, 2000);\n                this.die();\n            }\n        }\n\n        die() {\n            if (this.onDeathCallback){\n                control.runInParallel(this.onDeathCallback);\n            } \n        }\n\n        onDeath(cb: () => void) {\n            this.onDeathCallback = cb;\n        }\n\n        setDirection(dir: Direction) {\n            this.dir = dir;\n            this.sm.setDirection(dir);\n        }\n\n        getNeighboringLocation(dir: Direction): tiles.Location {\n            const loc: tiles.Location = this.tilemapLocation();\n            let neighbor: tiles.Location;\n            switch (dir) {\n                case Direction.Left:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Left);\n                    break;\n                case Direction.Up:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Top);\n                    break;\n                case Direction.Right:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Right);\n                    break;\n                case Direction.Down:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Bottom);\n                    break;\n            }\n            return neighbor;\n        }\n        \n        // moves this sprite in a certain direction. Returns true if the move\n        // was successful\n        move(dir: Direction, turnToFaceDirection: boolean = false): boolean {\n            const neighbor = this.getNeighboringLocation(dir);\n            \n            if(turnToFaceDirection)\n                this.setDirection(dir);\n\n            if (tiles.tileAtLocationIsWall(neighbor)) {\n                scene.cameraShake(2, 200);\n                return false;\n            }\n        \n            //const overlaps: Sprite[] = getCollisionsAtLocation(neighbor);\n            const neighborSprite = this.getNeighboringSprite(neighbor);\n\n            if(neighborSprite)\n                return false;\n            \n            // gotta do it twice because there's a bug where it ignores the ghost \n            // through walls flag\n            //tiles.placeOnTile(this, neighbor);\n            tiles.placeOnTile(this, neighbor);\n            return true;\n            \n        }\n\n        getNeighboringSprite(loc: tiles.Location): Sprite {\n            const engine = game.currentScene().physicsEngine;\n            let neighbors: Sprite[];\n            // the overlaps function simply does not work :/ i hate this engine so much\n            /*\n            if(engine instanceof ArcadePhysicsEngine){\n                const ape = engine as ArcadePhysicsEngine;\n                neighbors = ape.map.neighbors(this)\n            }\n            */\n            let overlaps = game.currentScene().physicsEngine.overlaps(this);\n            for(let i = 0; i < overlaps.length; i++) {\n                const s = overlaps[i];\n                if (s.tilemapLocation().column == loc.column && s.tilemapLocation().row == loc.row)\n                    return s;\n            }\n            return null;\n        }\n\n    }\n\n    export class VBPlayerSprite extends VBSprite {\n        ctrl: controller.Controller;\n        isMyTurn: boolean = false;\n        // used when the player has already started an input but is waiting on some\n        // number of processes to complete before control can be restored or the turn\n        // can end\n        awaitingTurnCompletion: boolean = false;\n        turnEndCallback: () => void;\n        storedTile: Image;\n        // failsafe if there are shenanigans with the turns\n        controlsLocked: boolean = false;\n\n        constructor(spriteImage: Image, ctrl: controller.Controller, kind?: number, dir?: Direction){\n            super(spriteImage, kind, dir);\n            this.ctrl = ctrl;\n            this._setupButtonEvents();\n            this.canPush = true;\n            this.pushable = true;\n        }\n\n        _setupButtonEvents() {\n            // gotta do this for literally every event it seems. kill me\n            // maybe there's a better way, but if there is I haven't found one\n            this.ctrl.onButtonEvent(ControllerButton.Left, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Left, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Right, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Right, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Up, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Up, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Down, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Down, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.A, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.A, ControllerButtonEvent.Pressed);\n            });\n        }\n\n        startTurn() {\n            this.isMyTurn = true;\n        }\n\n        onTurnEnd(cb: () => void) {\n            this.turnEndCallback = cb;\n        }\n\n        endTurn() {\n            this.awaitingTurnCompletion = false;\n            this.isMyTurn = false;\n            if( this.turnEndCallback ) this.turnEndCallback();\n        }\n\n        handleButtonInput(button: ControllerButton, event: ControllerButtonEvent) {\n            if(this.awaitingTurnCompletion || this.controlsLocked || !this.isMyTurn) return;\n            \n            switch(button) {\n                case ControllerButton.Left:\n                    this.step(Direction.Left);\n                    break;\n                case ControllerButton.Up:\n                    this.step(Direction.Up);\n                    break;\n                case ControllerButton.Right:\n                    this.step(Direction.Right);\n                    break;\n                case ControllerButton.Down:\n                    this.step(Direction.Down);\n                    break;\n                case ControllerButton.A:\n                    this.tryPrimaryAction();\n                    break;\n            }\n            //if (moveCompleted) this.endTurn();\n        }\n\n        // step in a particular direction\n        // if there is an immovable obstacle, face it but do not move\n        step(dir: Direction) {\n            this.awaitingTurnCompletion = true;\n\n            this.setDirection(dir);\n            const neighbor = this.getNeighboringLocation(dir);\n\n            const detector = new SpriteDetector(neighbor, (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => {\n                if (isOnWall)\n                    scene.cameraShake(2, 200);\n                else if (overlappers && overlappers.length > 0) {}\n                else\n                    tiles.placeOnTile(this, neighbor);\n                \n                sprites.destroy(detector);//, effects.spray, 200);\n                this.awaitingTurnCompletion = false;\n                this.endTurn();\n            });\n        }\n\n        // attempts to interact using the A button. If the action fails, return false\n        tryPrimaryAction() {\n            const neighbor: tiles.Location = this.getNeighboringLocation(this.dir);\n            \n            if (tiles.tileAtLocationIsWall(neighbor))\n                return;\n            else if (tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && this.storedTile) {\n                tiles.setTileAt(neighbor, this.storedTile);\n                this.storedTile = null;\n                this.endTurn();\n            } else if (!tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && !this.storedTile) {\n                this.storedTile = tiles.getTileImage(neighbor);\n                tiles.setTileAt(neighbor, assets.image`blankTile`);\n                this.endTurn();\n            }\n        }\n    }\n}\n\n","pxt.json":"{\n    \"name\": \"Void Battle\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\",\n        \"images.g.jres\",\n        \"images.g.ts\",\n        \"voidbattle.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}},{"timestamp":1761493349025,"editorVersion":"2.0.61","text":{"main.ts":"tiles.setCurrentTilemap(tilemap`level1`);\r\nscene.centerCameraAt(96, 68);\r\n//game.debug = true;\r\nlet isP1Turn: boolean = true;\r\n\r\nlet player1Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player1, SpriteKind.Player, Direction.Up);\r\nplayer1Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`heroWalkLeft`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkBack`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkRight`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkFront`, 200, true)\r\n]);\r\ntiles.placeOnTile(player1Sprite, tiles.getTileLocation(1, 7));\r\nplayer1Sprite.onTurnEnd(function() {\r\n    isP1Turn = false;\r\n    player2Sprite.startTurn();\r\n});\r\nplayer1Sprite.onDeath(function() {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 2 Wins!\");\r\n    game.gameOverPlayerWin(2);\r\n})\r\n\r\nlet player2Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player2, SpriteKind.Player, Direction.Down);\r\nplayer2Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`witchLeft`, 200, true),\r\n    new animation.Animation(assets.animation`witchBack`, 200, true),\r\n    new animation.Animation(assets.animation`witchRight`, 200, true),\r\n    new animation.Animation(assets.animation`witchForward`, 200, true)\r\n]);\r\ntiles.placeOnTile(player2Sprite, tiles.getTileLocation(2, 7));\r\n//tiles.placeOnTile(player2Sprite, tiles.getTileLocation(10, 2));\r\nplayer2Sprite.onTurnEnd(function () {\r\n    isP1Turn = true;\r\n    player1Sprite.startTurn();\r\n});\r\nplayer2Sprite.onDeath(function () {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 1 Wins!\");\r\n    game.gameOverPlayerWin(1);\r\n})\r\n\r\ngame.onPaint(function() {\r\n    // draw HUD\r\n    screen.drawLine(0, 0, 160, 0, isP1Turn ? 4 : 9);\r\n    screen.fillRect(0, 1, 160, 22, isP1Turn ? 2 : 6);\r\n    screen.drawLine(0, 23, 160, 23, isP1Turn ? 14 : 8);\r\n\r\n    if (player1Sprite.storedTile)\r\n        screen.drawImage(player1Sprite.storedTile, 5, 5);\r\n    \r\n    if (player2Sprite.storedTile)\r\n        screen.drawImage(player2Sprite.storedTile, 141, 5);\r\n\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 2, 2);\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 138, 2);\r\n\r\n    screen.print(\"P\" + (isP1Turn ? \"1\" : \"2\") + \" Turn\", 60, 5, 1);\r\n});\r\n\r\nplayer1Sprite.startTurn();","README.md":" ","assets.json":"","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"level1\": {\n        \"id\": \"level1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAwYzAwMDkwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDIwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMjAwMDAyMDAyMDAwMDAwMDAyMDIyMjIyMjIyMjIyMg==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"sprites.dungeon.floorLight2\",\n            \"sprites.castle.tileGrass1\"\n        ],\n        \"displayName\": \"level1\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","images.g.jres":"{\n    \"image2\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"blankTile\"\n    },\n    \"image1\": {\n        \"data\": \"hwQUABQAAAAAu7u7u7u7u7sAAACwHREREREREdELAADb0bu7u7u7ux29AAAbvQAAAAAAANuxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbvQAAAAAAANuxAADb0bu7u7u7ux29AACwHREREREREdELAAAAu7u7u7u7u7sAAAA=\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"selectedItemFrame\"\n    },\n    \"image3\": {\n        \"data\": \"hwQOAA4AAAARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREA\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"hitboxPlaceholder\"\n    },\n    \"anim1\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim1\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmYyZmYyZmYwMDAwMDBmMGZmMjIyMmZmMGYwMDAwZmZlZmVlZWVmZWZmMDAwMGZmMmUyMjIyZTJmZTAwMDBlZmYyZmZmZjJmZmUwMDAwZmZmZmVlZWVmZmZmMDBmMGVmYmY0ZmY0ZmJmZTBmZjBlZTE0ZGZmZDQxZWUwZjAwZWZkZWRkZGRlZGZlMDAwMGYwZWU0NDQ0ZWUwZjAwMDA0ZTJmMjIyMmYyZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY1NDQ1ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDBmMGVmZjJmZmZmMmZmZTBmZjBmZmZmZWVlZWZmZmYwZjAwZWZiZjRmZjRmYmZlMDAwMGVmMTRkZmZkNDFmZTAwMDBmMDRlZGRkZGU0ZWYwMDAwZWYyZjIyZTJkZGU0MDAwMDRlMmYyMmUyZGQwZTAwMDAwMDRmNTRmNWVlMDAwMDAwMDBmZmZmZmYwZjAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDAwMGVmZjJmZmZmMmZmZTAwMDBmZmZmZWVlZWZmZmYwMGYwZWZiZjRmZjRmYmZlMGZmMGVlMTRkZmZkNDFlZTBmMDBlZmRlZGRkZGVkZmUwMDAwZjBlZTQ0NDRlZTBmMDAwMDRlMmYyMjIyZjJlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjU0NDVmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmMmZmMmZmMDAwMDAwZjBmZjIyMjJmZjBmMDAwMGZmZWZlZWVlZmVmZjAwMDBlZjJlMjIyMmUyZmYwMGYwZWZmMmZmZmYyZmZlMGZmMGZmZmZlZWVlZmZmZjBmMDBlZmJmNGZmNGZiZmUwMDAwZWYxNGRmZmQ0MWZlMDAwMGZlNGVkZGRkZTQwZjAwMDA0ZWRkMmUyMmYyZmUwMDAwZTBkZDJlMjJmMmU0MDAwMDAwZWU1ZjQ1ZjQwMDAwMDAwMGYwZmZmZmZmMDAwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkFront\"\n    },\n    \"anim2\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim2\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDBmZmZmZmYwMDAwMDAwMGYwZjJlZWVlZmYwMDAwMDAyZjIyZWZlZWZlMGYwMDAwZWZlZWZlZWZlZTBmMDBmMDJlMjJlMmZlZmYwZjAwZjBlMmZmZmYyMmUyMGYwMGYwZmZlZWZlZmZmZmZmMDBmMGVlNDRiZjRlZTRmZjAwMDBlZmRkMWZkNGU0ZmUwMDAwZjBkZGRkZTRlZTBmMDAwMGYwNGU0NGVlZmYwMDAwMDBmMDIyZTJkZDA0MDAwMDAwZjAyMmUyZGQwZTAwMDAwMGYwNTVmNGVlMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwMDAwMGZmMGYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZWRlZWVlMGYwMDAwZjA0ZWRlNGQwZjAwMDAwMGYwMjJkZWVkMGYwMDAwMDBmZjU1ZWZmZWZmMDAwMDAwZmZmZmZmZmZmZjAwMDAwMGYwZmYwMGYwMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZGRlNGVlMGYwMDAwZjA0ZTQ0ZWVmZjAwMDAwMGYwMjJlMmRkMDQwMDAwMDBmMDIyZTJkZDBlMDAwMDAwZjA1NWY0ZWUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmMGYyZWVlZWZmMDAwMDAwMmYyMmVmZWVmZTBmMDAwMGVmZWVmZWVmZWUwZjAwZjAyZTIyZTJmZWZmMGYwMGYwZTJmZmZmMjJlMjBmMDBmMGZmZWVmZWZmZmZmZjAwZjBlZTQ0YmY0ZWU0ZmYwMDAwZWZkZDFmZDRlNGZlMDAwMGYwZGRkZGU0ZWUwZjAwMDBmMDRlNDRkZTRkMDAwMDAwZjAyMjIyZGVlZDAwMDAwMGZmNTU0NGVmZmUwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjBmZjAwZjAwZjAwMDA=\",\n        \"displayName\": \"heroWalkLeft\"\n    },\n    \"anim3\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim3\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZmZlZWVlMmYwZjAwMDBmMGVmZWVmZTIyZjIwMDAwZjBlZWZlZWZlZWZlMDAwMGYwZmZlZjJlMjJlMjBmMDBmMDJlMjJmZmZmMmUwZjAwZmZmZmZmZWZlZWZmMGYwMGZmNGVlNGZiNDRlZTBmMDBlZjRlNGRmMWRkZmUwMDAwZjBlZTRlZGRkZDBmMDAwMDAwZmZlZTQ0ZTQwZjAwMDAwMDQwZGQyZTIyMGYwMDAwMDBlMGRkMmUyMjBmMDAwMDAwZjBlZTRmNTUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlZWVkZWRkMGYwMDAwMDBmMGQ0ZWRlNDBmMDAwMDAwZjBkZWVkMjIwZjAwMDAwMGZmZWZmZTU1ZmYwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjAwZjAwZmYwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlNGVkZGRkMGYwMDAwMDBmZmVlNDRlNDBmMDAwMDAwNDBkZDJlMjIwZjAwMDAwMGUwZGQyZTIyMGYwMDAwMDBmMGVlNGY1NTBmMDAwMDAwMDBmZmZmZmYwMDAwMDAwMDAwZjBmZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmYwMDAwMDAwMGZmZWVlZTJmMGYwMDAwZjBlZmVlZmUyMmYyMDAwMGYwZWVmZWVmZWVmZTAwMDBmMGZmZWYyZTIyZTIwZjAwZjAyZTIyZmZmZjJlMGYwMGZmZmZmZmVmZWVmZjBmMDBmZjRlZTRmYjQ0ZWUwZjAwZWY0ZTRkZjFkZGZlMDAwMGYwZWU0ZWRkZGQwZjAwMDAwMGQ0ZWQ0NGU0MGYwMDAwMDBkZWVkMjIyMjBmMDAwMDAwZWZmZTQ0NTVmZjAwMDAwMGZmZmZmZmZmZmYwMDAwMDBmMDBmMDBmZjBmMDA=\",\n        \"displayName\": \"heroWalkRight\"\n    },\n    \"anim4\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim4\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmZlZWVlZmYwMDAwMDBmMGVlZmVlZmVlMGYwMDAwZmZmZjJmZjJmZmZmMDAwMGZmMmUyZWUyZTJmZjAwMDBlZmYyZjIyZjJmZmUwMDAwZmYyZmUyMmVmMmZmMDBmMGVmMmZlZmZlZjJmZTBmZjBlZWZmZWVlZWVmZWUwZjAwZWZlZWVlZWVlZWZlMDAwMGYwZWVlZWVlZWUwZjAwMDA0ZWZmZmZmZmZmZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY0NDQ0ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmMGZmMmZmMmZmMGYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMmZmZjJmZTAwMDBmZjJmZWYyZWYyZmYwMDAwZWZmMmVmMmVlZmZlMDBmMGVmZmZlZWZlZWVmZTBmZjBlZmVlZWVlZWVlZmUwZjAwZjBlZWVlZWVlZTBmMDAwMGUwZmZmZmZmZmZlNDAwMDA0MDJmMjIyMmRlNGQwMDAwZTBmZmZmZmZlZTA0MDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmZmZmMmZmMmZmZmYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMjJmMmZmZTAwMDBmZjJmZTIyZWYyZmYwMGYwZWYyZmVmZmVmMmZlMGZmMGVlZmZlZWVlZWZlZTBmMDBlZmVlZWVlZWVlZmUwMDAwZjBlZWVlZWVlZTBmMDAwMDRlZmZmZmZmZmZlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjQ0NDRmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmZWVlZWZmMDAwMDAwZjBlZWZlZWZlZTBmMDAwMGYwZmYyZmYyZmYwZjAwMDBmZjJlMmVlMmUyZmYwMDAwZWYyZmZmMmYyZmZlMDAwMGZmMmZlMmZlZjJmZjAwMDBlZmZlZTJmZTJmZmUwMGYwZWZlZWVmZWVmZmZlMGZmMGVmZWVlZWVlZWVmZTBmMDBmMGVlZWVlZWVlMGYwMDAwNGVmZmZmZmZmZjBlMDAwMGQ0ZWQyMjIyZjIwNDAwMDA0MGVlZmZmZmZmMGUwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkBack\"\n    },\n    \"anim5\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim5\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwY2MwMDAwMDAwMDAwMDBiY2M1MDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmJmZWZmZWZiZmYwMDAwZmYxZmJmZmJmMWZmMDAwMGYwYmZiYmJiZmIwZjAwMDBlMGZlZWVlZWVmMGUwMDAwYmViY2I1NWJmYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward\"\n    },\n    \"anim6\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim6\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGNjMGMwMDAwMDAwMDAwMDA1Y2NiMDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGYwZmZmZmZmZmYwZjAwMDBlMGZlZmZmZmZmMGUwMDAwYmViZmI1NWJjYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZWJmZWZmYmZlYjAwMDBlMGJiYmU1YmY1ZWUwMDAwMDBlYzVlNTU1NTBmMDAwMDAwZjBmZmZmZmYwMDAwMDAwMDAwYzBjYzAwMDAwMDAwMDAwMGJjYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZmVmZmZmZWYwZTAwMDBiZWJjYjU1YmZiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMDAwNWMwYzAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmMGZmZmZmZmVlMGYwMDAwYmVmYmVlZWViZTBlMDAwMGVlNWZiNWViYmIwZTAwMDBmMDU1NTVlNWNlMDAwMDAwMDBmZmZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchBack\"\n    },\n    \"anim7\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim7\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDA1YzBjMDAwMDAwMDAwMGNjNTVjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGYwNTU1NTU1NTVmZjAwMDAwMGVmZWViZmVlZmYwMDAwMDBlZmJiMWZmYmZmMDAwMDAwYmZiYmJiZmIwZjAwMDAwMGYwZWVlZWVmMGUwMDAwMDBmMGI1ZWJiYjBlMDAwMDAwNWY1NWU1YmIwZTAwMDAwMGJjNTU1NWVlMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGNjYzUwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiZWJmZTBmMDAwMDAwZjBlZWJlZWIwZjAwMDAwMDVmYmJiZWViMDAwMDAwMDA1YzU1ZTVmZTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiYmJmYjBmMDAwMDAwZjBlZWVlZWYwZTAwMDAwMGYwYjVlYmJiMGUwMDAwMDA1ZjU1ZTViYjBlMDAwMDAwYmM1NTU1ZWUwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwY2NjNTAwMDAwMDAwMDBjYzU1YzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmMDU1NTU1NTU1ZmYwMDAwMDBlZmVlYmZlZWZmMDAwMDAwZWZiYjFmZmJmZjAwMDAwMGJmYmJiYmZiMGYwMDAwMDBmMGVlZWViZWViMDAwMDAwNWZiNWJiYmVlYjAwMDAwMDVjNTU1NWVlMGUwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchLeft\"\n    },\n    \"anim8\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim8\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDBjMGM1MDAwMDAwMDAwMGNjNWM1NWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTUwZjAwMDBmZmVlZmJlZWZlMDAwMDAwZmZiZmYxYmJmZTAwMDAwMGYwYmZiYmJiZmIwMDAwMDBlMGZlZWVlZTBmMDAwMDAwZTBiYmJlNWIwZjAwMDAwMGUwYmI1ZTU1ZjUwMDAwMDAwMGVlNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjY2MwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBlZmJlYmJmYjAwMDAwMGYwYmVlYmVlMGYwMDAwMDAwMGJlZWJiYmY1MDAwMDAwMDBlZjVlNTVjNTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBiZmJiYmJmYjAwMDAwMGUwZmVlZWVlMGYwMDAwMDBlMGJiYmU1YjBmMDAwMDAwZTBiYjVlNTVmNTAwMDAwMDAwZWU1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwNWNjYzAwMDAwMDAwMDBjYzVjNTVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1MGYwMDAwZmZlZWZiZWVmZTAwMDAwMGZmYmZmMWJiZmUwMDAwMDBmMGJmYmJiYmZiMDAwMDAwYmVlYmVlZWUwZjAwMDAwMGJlZWJiYjViZjUwMDAwMDBlMGVlNTU1NWM1MDAwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchRight\"\n    },\n    \"anim9\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim9\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDBjZmZhMDAwMDAwMDAwMGZmYWZmYWZmMDAwMDAwZmZmY2FhYWFmZmZmMDBmMGNjY2FhYWFhYWNjYzBmZjBhY2NhYWNjYWFjY2EwZjAwYWZhYWNjY2NhYWZhMDAwMGVmYWFhYWFhYWFmZTAwMDA0ZjllYmZmYmU5ZjQwMDAwNGYxNGQ4OGQ0MWY0MDAwMGYwZDRkZGRkNGQwZjAwMDBiMGZiYmJiYmJmMGIwMDAwZGJjZmNhYWNmY2JkMDAwMGJiYWZhYWFhZmFiYjAwMDAwMGNmYWFhYWZjMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward0\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}","images.g.ts":"","voidbattle.ts":"enum Direction {\n    Left = 0,\n    Up = 1,\n    Right = 2,\n    Down = 3\n}\n\nenum SpriteAction {\n    Idle,\n    Move,\n    Fall,\n    Die\n}\n\nnamespace SpriteKind {\n    export const Detector = SpriteKind.create();\n}\n\nnamespace animation {\n    const stateNamespace = \"__animation\";\n\n    interface AnimationState {\n        animations: SpriteAnimation[];\n    }\n\n    // this will tell the state machines that their animations are still active\n    export function updateActiveStateAnimations(): void {\n        let state: AnimationState = game.currentScene().data[stateNamespace];\n        if(state && state.animations) {\n            state.animations.forEach((anim: SpriteAnimation) => {\n                if (anim.sprite instanceof VoidBattle.VBSprite) {\n                    const vbs = anim.sprite as VoidBattle.VBSprite;\n                    if(vbs.sm)\n                        vbs.sm.animationActive = true;\n                }\n            });\n        }\n    }\n\n    export class Animation {\n        constructor(public frames: Image[], public frameInterval: number = 500, public loop: boolean = false){}\n        runAnimationOnSprite(sprite: Sprite) {\n            animation.runImageAnimation(sprite, this.frames, this.frameInterval, this.loop);\n        }\n    }\n\n    interface AnimationMap {\n        [key: number]: Animation[];\n    }\n\n    let stateMachines: AnimationStateMachine[];\n\n    // should allow you to change the sprite's animation based on its direction\n    // what should i put in here and what should just be part of VBSprite?\n    export class AnimationStateMachine {\n        dir: Direction = Direction.Down;\n        lastDir: Direction = Direction.Down;\n        sprite: VoidBattle.VBSprite;\n        lastAction: number;\n        animationActive: boolean = false;\n        stateAnimations: AnimationMap = {};\n\n        constructor(sprite: VoidBattle.VBSprite) {\n            this.sprite = sprite;\n            this.lastAction = sprite._action;\n            this._init();\n        }\n\n        _init() {\n            if (!stateMachines) {\n                stateMachines = [];\n                game.eventContext().registerFrameHandler(scene.ANIMATION_UPDATE_PRIORITY, () => {\n                    // see which animations are still active\n                    animation.updateActiveStateAnimations();\n\n                    // remove state machines of dead sprites\n                    stateMachines = stateMachines.filter((sm: AnimationStateMachine) => {\n                        if (sm.sprite.flags & sprites.Flag.Destroyed)\n                            return false;\n                        sm.update();\n                        return true;\n                    });\n                });\n            }\n            stateMachines.push(this);\n        }\n\n        update() {\n            // detect if the action has been changed\n            if(this.lastAction != this.sprite._action || this.lastDir != this.dir) {\n                this.lastAction = this.sprite._action;\n                this.lastDir = this.dir;\n                const anim = this.getAnimationFromState(this.lastAction)\n                if(anim)\n                    anim.runAnimationOnSprite(this.sprite);\n            }\n            this.animationActive = false;\n        }\n\n        setDirection(direction: Direction) {\n            this.dir = direction;\n        }\n\n        // You should really put these in the order [left, up, right, down]\n        setStateAnimations(state: number, animations: Animation[]) {\n            this.stateAnimations[state] = animations;\n        }\n\n        getAnimationFromState(state: number): Animation {\n            const anims: Animation[] = this.stateAnimations[state];\n            if (!anims || anims.length == 0)\n                return null;\n            \n            if (anims.length == 1 || this.dir < 0 || this.dir >= anims.length)\n                return anims[0];\n            \n            return anims[this.dir];\n\n        }\n        //constructor(frameInterval: number, )\n    }\n\n}\n\n\nnamespace VoidBattle {\n    let collisionSprite: Sprite\n    let detectionSetUp: boolean = false;\n\n    // does not work\n    export function getCollisionsAtLocation(location: tiles.Location): Sprite[] {\n        const s: Sprite = sprites.create(assets.image`hitboxPlaceholder`);\n        s.setFlag(SpriteFlag.Invisible, true);\n        tiles.placeOnTile(s, location);\n        \n        const overlaps = game.currentScene().physicsEngine.overlaps(s);\n        sprites.destroy(s);\n        return overlaps;\n    }\n\n    export function vbCollisionCheck(location: tiles.Location, callback: (overlaps: Sprite[]) => void) {\n        control.runInParallel(() => {\n            tiles.placeOnTile(collisionSprite, location);\n            pause(1);\n            const overlaps = game.currentScene().physicsEngine.overlaps(collisionSprite);\n            callback(overlaps);\n        });\n    }\n\n    export class SpriteDetector extends sprites.ExtendableSprite {\n        \n        overlappers: Sprite[] = [];\n        cb: (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => void;\n        isActive: boolean = true;\n        framesToWait: number = 2;\n\n        constructor(loc: tiles.Location, callback: (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => void) {\n            super(assets.image`hitboxPlaceholder`, SpriteKind.Detector);\n            //this.setFlag(SpriteFlag.Invisible, true);\n            tiles.placeOnTile(this, loc);\n            this.cb = callback;\n        }\n\n        update(deltaTimeMillis: number) {\n            this.framesToWait --\n            if (this.framesToWait <= 0)\n                if (this.isActive && this.cb) {\n                    console.log(\"hi\");\n                    console.log(this.overlappers);\n                    const isOnWall: boolean = tiles.tileAtLocationIsWall(this.tilemapLocation());\n                    this.cb(this, this.overlappers, isOnWall);\n                }\n            this.overlappers = [];\n        }\n    }\n\n    const tileSize = 16;\n    export class VBSprite extends sprites.ExtendableSprite {\n        sm: animation.AnimationStateMachine;\n        dir: Direction = Direction.Down;\n        onDeathCallback: () => void;\n        canPush: boolean = false;\n        pushable: boolean = false;\n        hitboxWidth: number = 16;\n        hitboxHeight: number = 16;\n\n        constructor(spriteImage: Image, kind?: number, dir?: Direction) {\n            super(spriteImage, kind);\n            this.flags ^= SpriteFlag.GhostThroughWalls;\n            this.setDimensions(this.hitboxWidth, this.hitboxHeight);\n            //this._hitbox.ox = Fx8(-4);\n            //this._hitbox.oy = Fx8(-4);\n            this.sm = new animation.AnimationStateMachine(this);\n            this._action = SpriteAction.Idle;\n\n            if(!detectionSetUp) {\n                console.log(\"setting up detection!\");\n                sprites.onOverlap(SpriteKind.Detector, SpriteKind.Player, function (sprite: Sprite, otherSprite: Sprite) {\n                    console.log(\"hello\")\n                    if (sprite instanceof VoidBattle.SpriteDetector) {\n                        const sd = sprite as VoidBattle.SpriteDetector;\n                        sd.overlappers.push(otherSprite);\n                        console.log(sd.overlappers);\n                    }\n                });\n                detectionSetUp = true;\n            }\n\n            if (dir)\n                this.setDirection(dir);\n            else\n                this.setDirection(Direction.Down);\n            \n        }\n\n        // Accounts for the offset from the hitbox, which is wider so we can\n        // detect neighboring sprites\n        draw(drawLeft: number, drawTop: number) {\n            drawLeft += (this.hitboxWidth - this.image.width) >> 1;\n            drawTop += (this.hitboxHeight - this.image.height) >> 1;\n            super.draw(drawLeft, drawTop);\n        }\n\n        setPosition(x: number, y: number): void {\n            const physics = game.currentScene().physicsEngine;\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n            // call it a second time to correct a bug where sprites that ghost \n            // through walls are still pushed out\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n        }\n\n        update(deltaTimeMillis: number) {\n            if (this.tileKindAt(TileDirection.Center, assets.image`blankTile`)) {\n                sprites.destroy(this, effects.fire, 2000);\n                this.die();\n            }\n        }\n\n        die() {\n            if (this.onDeathCallback){\n                control.runInParallel(this.onDeathCallback);\n            } \n        }\n\n        onDeath(cb: () => void) {\n            this.onDeathCallback = cb;\n        }\n\n        setDirection(dir: Direction) {\n            this.dir = dir;\n            this.sm.setDirection(dir);\n        }\n\n        getNeighboringLocation(dir: Direction): tiles.Location {\n            const loc: tiles.Location = this.tilemapLocation();\n            let neighbor: tiles.Location;\n            switch (dir) {\n                case Direction.Left:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Left);\n                    break;\n                case Direction.Up:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Top);\n                    break;\n                case Direction.Right:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Right);\n                    break;\n                case Direction.Down:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Bottom);\n                    break;\n            }\n            return neighbor;\n        }\n        \n        // moves this sprite in a certain direction. Returns true if the move\n        // was successful\n        move(dir: Direction, turnToFaceDirection: boolean = false): boolean {\n            const neighbor = this.getNeighboringLocation(dir);\n            \n            if(turnToFaceDirection)\n                this.setDirection(dir);\n\n            if (tiles.tileAtLocationIsWall(neighbor)) {\n                scene.cameraShake(2, 200);\n                return false;\n            }\n        \n            //const overlaps: Sprite[] = getCollisionsAtLocation(neighbor);\n            const neighborSprite = this.getNeighboringSprite(neighbor);\n\n            if(neighborSprite)\n                return false;\n            \n            // gotta do it twice because there's a bug where it ignores the ghost \n            // through walls flag\n            //tiles.placeOnTile(this, neighbor);\n            tiles.placeOnTile(this, neighbor);\n            return true;\n            \n        }\n\n        getNeighboringSprite(loc: tiles.Location): Sprite {\n            const engine = game.currentScene().physicsEngine;\n            let neighbors: Sprite[];\n            // the overlaps function simply does not work :/ i hate this engine so much\n            /*\n            if(engine instanceof ArcadePhysicsEngine){\n                const ape = engine as ArcadePhysicsEngine;\n                neighbors = ape.map.neighbors(this)\n            }\n            */\n            let overlaps = game.currentScene().physicsEngine.overlaps(this);\n            for(let i = 0; i < overlaps.length; i++) {\n                const s = overlaps[i];\n                if (s.tilemapLocation().column == loc.column && s.tilemapLocation().row == loc.row)\n                    return s;\n            }\n            return null;\n        }\n\n    }\n\n    export class VBPlayerSprite extends VBSprite {\n        ctrl: controller.Controller;\n        isMyTurn: boolean = false;\n        // used when the player has already started an input but is waiting on some\n        // number of processes to complete before control can be restored or the turn\n        // can end\n        awaitingTurnCompletion: boolean = false;\n        turnEndCallback: () => void;\n        storedTile: Image;\n        // failsafe if there are shenanigans with the turns\n        controlsLocked: boolean = false;\n\n        constructor(spriteImage: Image, ctrl: controller.Controller, kind?: number, dir?: Direction){\n            super(spriteImage, kind, dir);\n            this.ctrl = ctrl;\n            this._setupButtonEvents();\n            this.canPush = true;\n            this.pushable = true;\n        }\n\n        _setupButtonEvents() {\n            // gotta do this for literally every event it seems. kill me\n            // maybe there's a better way, but if there is I haven't found one\n            this.ctrl.onButtonEvent(ControllerButton.Left, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Left, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Right, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Right, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Up, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Up, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Down, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Down, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.A, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.A, ControllerButtonEvent.Pressed);\n            });\n        }\n\n        startTurn() {\n            this.isMyTurn = true;\n        }\n\n        onTurnEnd(cb: () => void) {\n            this.turnEndCallback = cb;\n        }\n\n        endTurn() {\n            this.awaitingTurnCompletion = false;\n            this.isMyTurn = false;\n            if( this.turnEndCallback ) this.turnEndCallback();\n        }\n\n        handleButtonInput(button: ControllerButton, event: ControllerButtonEvent) {\n            if(this.awaitingTurnCompletion || this.controlsLocked || !this.isMyTurn) return;\n            \n            switch(button) {\n                case ControllerButton.Left:\n                    this.step(Direction.Left);\n                    break;\n                case ControllerButton.Up:\n                    this.step(Direction.Up);\n                    break;\n                case ControllerButton.Right:\n                    this.step(Direction.Right);\n                    break;\n                case ControllerButton.Down:\n                    this.step(Direction.Down);\n                    break;\n                case ControllerButton.A:\n                    this.tryPrimaryAction();\n                    break;\n            }\n            //if (moveCompleted) this.endTurn();\n        }\n\n        // step in a particular direction\n        // if there is an immovable obstacle, face it but do not move\n        step(dir: Direction) {\n            this.awaitingTurnCompletion = true;\n\n            this.setDirection(dir);\n            const neighbor = this.getNeighboringLocation(dir);\n\n            const detector = new SpriteDetector(neighbor, (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => {\n                if (isOnWall)\n                    scene.cameraShake(2, 200);\n                else if (overlappers && overlappers.length > 0) {}\n                else\n                    tiles.placeOnTile(this, neighbor);\n                \n                sprites.destroy(detector);//, effects.spray, 200);\n                this.awaitingTurnCompletion = false;\n                this.endTurn();\n            });\n        }\n\n        // attempts to interact using the A button. If the action fails, return false\n        tryPrimaryAction() {\n            const neighbor: tiles.Location = this.getNeighboringLocation(this.dir);\n            \n            if (tiles.tileAtLocationIsWall(neighbor))\n                return;\n            else if (tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && this.storedTile) {\n                tiles.setTileAt(neighbor, this.storedTile);\n                this.storedTile = null;\n                this.endTurn();\n            } else if (!tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && !this.storedTile) {\n                this.storedTile = tiles.getTileImage(neighbor);\n                tiles.setTileAt(neighbor, assets.image`blankTile`);\n                this.endTurn();\n            }\n        }\n    }\n}\n\n","pxt.json":"{\n    \"name\": \"Void Battle\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\",\n        \"images.g.jres\",\n        \"images.g.ts\",\n        \"voidbattle.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}},{"timestamp":1761497937475,"editorVersion":"2.0.61","text":{"main.ts":"tiles.setCurrentTilemap(tilemap`level1`);\r\nscene.centerCameraAt(96, 68);\r\n//game.debug = true;\r\nlet isP1Turn: boolean = true;\r\n\r\nlet player1Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player1, SpriteKind.Player, Direction.Up);\r\nplayer1Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`heroWalkLeft`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkBack`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkRight`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkFront`, 200, true)\r\n]);\r\ntiles.placeOnTile(player1Sprite, tiles.getTileLocation(1, 7));\r\nplayer1Sprite.onTurnEnd(function() {\r\n    isP1Turn = false;\r\n    player2Sprite.startTurn();\r\n});\r\nplayer1Sprite.onDeath(function() {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 2 Wins!\");\r\n    game.gameOverPlayerWin(2);\r\n})\r\n\r\nlet player2Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player2, SpriteKind.Player, Direction.Down);\r\nplayer2Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`witchLeft`, 200, true),\r\n    new animation.Animation(assets.animation`witchBack`, 200, true),\r\n    new animation.Animation(assets.animation`witchRight`, 200, true),\r\n    new animation.Animation(assets.animation`witchForward`, 200, true)\r\n]);\r\ntiles.placeOnTile(player2Sprite, tiles.getTileLocation(2, 7));\r\n//tiles.placeOnTile(player2Sprite, tiles.getTileLocation(10, 2));\r\nplayer2Sprite.onTurnEnd(function () {\r\n    isP1Turn = true;\r\n    player1Sprite.startTurn();\r\n});\r\nplayer2Sprite.onDeath(function () {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 1 Wins!\");\r\n    game.gameOverPlayerWin(1);\r\n})\r\n\r\ngame.onPaint(function() {\r\n    // draw HUD\r\n    screen.drawLine(0, 0, 160, 0, isP1Turn ? 4 : 9);\r\n    screen.fillRect(0, 1, 160, 22, isP1Turn ? 2 : 6);\r\n    screen.drawLine(0, 23, 160, 23, isP1Turn ? 14 : 8);\r\n\r\n    if (player1Sprite.storedTile)\r\n        screen.drawImage(player1Sprite.storedTile, 5, 5);\r\n    \r\n    if (player2Sprite.storedTile)\r\n        screen.drawImage(player2Sprite.storedTile, 141, 5);\r\n\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 2, 2);\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 138, 2);\r\n\r\n    screen.print(\"P\" + (isP1Turn ? \"1\" : \"2\") + \" Turn\", 60, 5, 1);\r\n});\r\n\r\nplayer1Sprite.startTurn();","README.md":" ","assets.json":"","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"level1\": {\n        \"id\": \"level1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAwYzAwMDkwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDIwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMjAwMDAyMDAyMDAwMDAwMDAyMDIyMjIyMjIyMjIyMg==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"sprites.dungeon.floorLight2\",\n            \"sprites.castle.tileGrass1\"\n        ],\n        \"displayName\": \"level1\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","images.g.jres":"{\n    \"image2\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"blankTile\"\n    },\n    \"image1\": {\n        \"data\": \"hwQUABQAAAAAu7u7u7u7u7sAAACwHREREREREdELAADb0bu7u7u7ux29AAAbvQAAAAAAANuxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbvQAAAAAAANuxAADb0bu7u7u7ux29AACwHREREREREdELAAAAu7u7u7u7u7sAAAA=\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"selectedItemFrame\"\n    },\n    \"image3\": {\n        \"data\": \"hwQOAA4AAAARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREA\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"hitboxPlaceholder\"\n    },\n    \"anim1\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim1\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmYyZmYyZmYwMDAwMDBmMGZmMjIyMmZmMGYwMDAwZmZlZmVlZWVmZWZmMDAwMGZmMmUyMjIyZTJmZTAwMDBlZmYyZmZmZjJmZmUwMDAwZmZmZmVlZWVmZmZmMDBmMGVmYmY0ZmY0ZmJmZTBmZjBlZTE0ZGZmZDQxZWUwZjAwZWZkZWRkZGRlZGZlMDAwMGYwZWU0NDQ0ZWUwZjAwMDA0ZTJmMjIyMmYyZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY1NDQ1ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDBmMGVmZjJmZmZmMmZmZTBmZjBmZmZmZWVlZWZmZmYwZjAwZWZiZjRmZjRmYmZlMDAwMGVmMTRkZmZkNDFmZTAwMDBmMDRlZGRkZGU0ZWYwMDAwZWYyZjIyZTJkZGU0MDAwMDRlMmYyMmUyZGQwZTAwMDAwMDRmNTRmNWVlMDAwMDAwMDBmZmZmZmYwZjAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDAwMGVmZjJmZmZmMmZmZTAwMDBmZmZmZWVlZWZmZmYwMGYwZWZiZjRmZjRmYmZlMGZmMGVlMTRkZmZkNDFlZTBmMDBlZmRlZGRkZGVkZmUwMDAwZjBlZTQ0NDRlZTBmMDAwMDRlMmYyMjIyZjJlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjU0NDVmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmMmZmMmZmMDAwMDAwZjBmZjIyMjJmZjBmMDAwMGZmZWZlZWVlZmVmZjAwMDBlZjJlMjIyMmUyZmYwMGYwZWZmMmZmZmYyZmZlMGZmMGZmZmZlZWVlZmZmZjBmMDBlZmJmNGZmNGZiZmUwMDAwZWYxNGRmZmQ0MWZlMDAwMGZlNGVkZGRkZTQwZjAwMDA0ZWRkMmUyMmYyZmUwMDAwZTBkZDJlMjJmMmU0MDAwMDAwZWU1ZjQ1ZjQwMDAwMDAwMGYwZmZmZmZmMDAwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkFront\"\n    },\n    \"anim2\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim2\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDBmZmZmZmYwMDAwMDAwMGYwZjJlZWVlZmYwMDAwMDAyZjIyZWZlZWZlMGYwMDAwZWZlZWZlZWZlZTBmMDBmMDJlMjJlMmZlZmYwZjAwZjBlMmZmZmYyMmUyMGYwMGYwZmZlZWZlZmZmZmZmMDBmMGVlNDRiZjRlZTRmZjAwMDBlZmRkMWZkNGU0ZmUwMDAwZjBkZGRkZTRlZTBmMDAwMGYwNGU0NGVlZmYwMDAwMDBmMDIyZTJkZDA0MDAwMDAwZjAyMmUyZGQwZTAwMDAwMGYwNTVmNGVlMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwMDAwMGZmMGYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZWRlZWVlMGYwMDAwZjA0ZWRlNGQwZjAwMDAwMGYwMjJkZWVkMGYwMDAwMDBmZjU1ZWZmZWZmMDAwMDAwZmZmZmZmZmZmZjAwMDAwMGYwZmYwMGYwMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZGRlNGVlMGYwMDAwZjA0ZTQ0ZWVmZjAwMDAwMGYwMjJlMmRkMDQwMDAwMDBmMDIyZTJkZDBlMDAwMDAwZjA1NWY0ZWUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmMGYyZWVlZWZmMDAwMDAwMmYyMmVmZWVmZTBmMDAwMGVmZWVmZWVmZWUwZjAwZjAyZTIyZTJmZWZmMGYwMGYwZTJmZmZmMjJlMjBmMDBmMGZmZWVmZWZmZmZmZjAwZjBlZTQ0YmY0ZWU0ZmYwMDAwZWZkZDFmZDRlNGZlMDAwMGYwZGRkZGU0ZWUwZjAwMDBmMDRlNDRkZTRkMDAwMDAwZjAyMjIyZGVlZDAwMDAwMGZmNTU0NGVmZmUwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjBmZjAwZjAwZjAwMDA=\",\n        \"displayName\": \"heroWalkLeft\"\n    },\n    \"anim3\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim3\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZmZlZWVlMmYwZjAwMDBmMGVmZWVmZTIyZjIwMDAwZjBlZWZlZWZlZWZlMDAwMGYwZmZlZjJlMjJlMjBmMDBmMDJlMjJmZmZmMmUwZjAwZmZmZmZmZWZlZWZmMGYwMGZmNGVlNGZiNDRlZTBmMDBlZjRlNGRmMWRkZmUwMDAwZjBlZTRlZGRkZDBmMDAwMDAwZmZlZTQ0ZTQwZjAwMDAwMDQwZGQyZTIyMGYwMDAwMDBlMGRkMmUyMjBmMDAwMDAwZjBlZTRmNTUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlZWVkZWRkMGYwMDAwMDBmMGQ0ZWRlNDBmMDAwMDAwZjBkZWVkMjIwZjAwMDAwMGZmZWZmZTU1ZmYwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjAwZjAwZmYwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlNGVkZGRkMGYwMDAwMDBmZmVlNDRlNDBmMDAwMDAwNDBkZDJlMjIwZjAwMDAwMGUwZGQyZTIyMGYwMDAwMDBmMGVlNGY1NTBmMDAwMDAwMDBmZmZmZmYwMDAwMDAwMDAwZjBmZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmYwMDAwMDAwMGZmZWVlZTJmMGYwMDAwZjBlZmVlZmUyMmYyMDAwMGYwZWVmZWVmZWVmZTAwMDBmMGZmZWYyZTIyZTIwZjAwZjAyZTIyZmZmZjJlMGYwMGZmZmZmZmVmZWVmZjBmMDBmZjRlZTRmYjQ0ZWUwZjAwZWY0ZTRkZjFkZGZlMDAwMGYwZWU0ZWRkZGQwZjAwMDAwMGQ0ZWQ0NGU0MGYwMDAwMDBkZWVkMjIyMjBmMDAwMDAwZWZmZTQ0NTVmZjAwMDAwMGZmZmZmZmZmZmYwMDAwMDBmMDBmMDBmZjBmMDA=\",\n        \"displayName\": \"heroWalkRight\"\n    },\n    \"anim4\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim4\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmZlZWVlZmYwMDAwMDBmMGVlZmVlZmVlMGYwMDAwZmZmZjJmZjJmZmZmMDAwMGZmMmUyZWUyZTJmZjAwMDBlZmYyZjIyZjJmZmUwMDAwZmYyZmUyMmVmMmZmMDBmMGVmMmZlZmZlZjJmZTBmZjBlZWZmZWVlZWVmZWUwZjAwZWZlZWVlZWVlZWZlMDAwMGYwZWVlZWVlZWUwZjAwMDA0ZWZmZmZmZmZmZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY0NDQ0ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmMGZmMmZmMmZmMGYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMmZmZjJmZTAwMDBmZjJmZWYyZWYyZmYwMDAwZWZmMmVmMmVlZmZlMDBmMGVmZmZlZWZlZWVmZTBmZjBlZmVlZWVlZWVlZmUwZjAwZjBlZWVlZWVlZTBmMDAwMGUwZmZmZmZmZmZlNDAwMDA0MDJmMjIyMmRlNGQwMDAwZTBmZmZmZmZlZTA0MDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmZmZmMmZmMmZmZmYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMjJmMmZmZTAwMDBmZjJmZTIyZWYyZmYwMGYwZWYyZmVmZmVmMmZlMGZmMGVlZmZlZWVlZWZlZTBmMDBlZmVlZWVlZWVlZmUwMDAwZjBlZWVlZWVlZTBmMDAwMDRlZmZmZmZmZmZlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjQ0NDRmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmZWVlZWZmMDAwMDAwZjBlZWZlZWZlZTBmMDAwMGYwZmYyZmYyZmYwZjAwMDBmZjJlMmVlMmUyZmYwMDAwZWYyZmZmMmYyZmZlMDAwMGZmMmZlMmZlZjJmZjAwMDBlZmZlZTJmZTJmZmUwMGYwZWZlZWVmZWVmZmZlMGZmMGVmZWVlZWVlZWVmZTBmMDBmMGVlZWVlZWVlMGYwMDAwNGVmZmZmZmZmZjBlMDAwMGQ0ZWQyMjIyZjIwNDAwMDA0MGVlZmZmZmZmMGUwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkBack\"\n    },\n    \"anim5\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim5\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwY2MwMDAwMDAwMDAwMDBiY2M1MDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmJmZWZmZWZiZmYwMDAwZmYxZmJmZmJmMWZmMDAwMGYwYmZiYmJiZmIwZjAwMDBlMGZlZWVlZWVmMGUwMDAwYmViY2I1NWJmYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward\"\n    },\n    \"anim6\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim6\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGNjMGMwMDAwMDAwMDAwMDA1Y2NiMDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGYwZmZmZmZmZmYwZjAwMDBlMGZlZmZmZmZmMGUwMDAwYmViZmI1NWJjYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZWJmZWZmYmZlYjAwMDBlMGJiYmU1YmY1ZWUwMDAwMDBlYzVlNTU1NTBmMDAwMDAwZjBmZmZmZmYwMDAwMDAwMDAwYzBjYzAwMDAwMDAwMDAwMGJjYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZmVmZmZmZWYwZTAwMDBiZWJjYjU1YmZiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMDAwNWMwYzAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmMGZmZmZmZmVlMGYwMDAwYmVmYmVlZWViZTBlMDAwMGVlNWZiNWViYmIwZTAwMDBmMDU1NTVlNWNlMDAwMDAwMDBmZmZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchBack\"\n    },\n    \"anim7\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim7\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDA1YzBjMDAwMDAwMDAwMGNjNTVjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGYwNTU1NTU1NTVmZjAwMDAwMGVmZWViZmVlZmYwMDAwMDBlZmJiMWZmYmZmMDAwMDAwYmZiYmJiZmIwZjAwMDAwMGYwZWVlZWVmMGUwMDAwMDBmMGI1ZWJiYjBlMDAwMDAwNWY1NWU1YmIwZTAwMDAwMGJjNTU1NWVlMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGNjYzUwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiZWJmZTBmMDAwMDAwZjBlZWJlZWIwZjAwMDAwMDVmYmJiZWViMDAwMDAwMDA1YzU1ZTVmZTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiYmJmYjBmMDAwMDAwZjBlZWVlZWYwZTAwMDAwMGYwYjVlYmJiMGUwMDAwMDA1ZjU1ZTViYjBlMDAwMDAwYmM1NTU1ZWUwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwY2NjNTAwMDAwMDAwMDBjYzU1YzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmMDU1NTU1NTU1ZmYwMDAwMDBlZmVlYmZlZWZmMDAwMDAwZWZiYjFmZmJmZjAwMDAwMGJmYmJiYmZiMGYwMDAwMDBmMGVlZWViZWViMDAwMDAwNWZiNWJiYmVlYjAwMDAwMDVjNTU1NWVlMGUwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchLeft\"\n    },\n    \"anim8\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim8\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDBjMGM1MDAwMDAwMDAwMGNjNWM1NWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTUwZjAwMDBmZmVlZmJlZWZlMDAwMDAwZmZiZmYxYmJmZTAwMDAwMGYwYmZiYmJiZmIwMDAwMDBlMGZlZWVlZTBmMDAwMDAwZTBiYmJlNWIwZjAwMDAwMGUwYmI1ZTU1ZjUwMDAwMDAwMGVlNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjY2MwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBlZmJlYmJmYjAwMDAwMGYwYmVlYmVlMGYwMDAwMDAwMGJlZWJiYmY1MDAwMDAwMDBlZjVlNTVjNTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBiZmJiYmJmYjAwMDAwMGUwZmVlZWVlMGYwMDAwMDBlMGJiYmU1YjBmMDAwMDAwZTBiYjVlNTVmNTAwMDAwMDAwZWU1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwNWNjYzAwMDAwMDAwMDBjYzVjNTVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1MGYwMDAwZmZlZWZiZWVmZTAwMDAwMGZmYmZmMWJiZmUwMDAwMDBmMGJmYmJiYmZiMDAwMDAwYmVlYmVlZWUwZjAwMDAwMGJlZWJiYjViZjUwMDAwMDBlMGVlNTU1NWM1MDAwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchRight\"\n    },\n    \"anim9\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim9\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDBjZmZhMDAwMDAwMDAwMGZmYWZmYWZmMDAwMDAwZmZmY2FhYWFmZmZmMDBmMGNjY2FhYWFhYWNjYzBmZjBhY2NhYWNjYWFjY2EwZjAwYWZhYWNjY2NhYWZhMDAwMGVmYWFhYWFhYWFmZTAwMDA0ZjllYmZmYmU5ZjQwMDAwNGYxNGQ4OGQ0MWY0MDAwMGYwZDRkZGRkNGQwZjAwMDBiMGZiYmJiYmJmMGIwMDAwZGJjZmNhYWNmY2JkMDAwMGJiYWZhYWFhZmFiYjAwMDAwMGNmYWFhYWZjMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward0\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}","images.g.ts":"","voidbattle.ts":"enum Direction {\n    Left = 0,\n    Up = 1,\n    Right = 2,\n    Down = 3\n}\n\nenum SpriteAction {\n    Idle,\n    Move,\n    Fall,\n    Die\n}\n\nnamespace SpriteKind {\n    export const Detector = SpriteKind.create();\n}\n\nnamespace animation {\n    const stateNamespace = \"__animation\";\n\n    interface AnimationState {\n        animations: SpriteAnimation[];\n    }\n\n    // this will tell the state machines that their animations are still active\n    export function updateActiveStateAnimations(): void {\n        let state: AnimationState = game.currentScene().data[stateNamespace];\n        if(state && state.animations) {\n            state.animations.forEach((anim: SpriteAnimation) => {\n                if (anim.sprite instanceof VoidBattle.VBSprite) {\n                    const vbs = anim.sprite as VoidBattle.VBSprite;\n                    if(vbs.sm)\n                        vbs.sm.animationActive = true;\n                }\n            });\n        }\n    }\n\n    export class Animation {\n        constructor(public frames: Image[], public frameInterval: number = 500, public loop: boolean = false){}\n        runAnimationOnSprite(sprite: Sprite) {\n            animation.runImageAnimation(sprite, this.frames, this.frameInterval, this.loop);\n        }\n    }\n\n    interface AnimationMap {\n        [key: number]: Animation[];\n    }\n\n    let stateMachines: AnimationStateMachine[];\n\n    // should allow you to change the sprite's animation based on its direction\n    // what should i put in here and what should just be part of VBSprite?\n    export class AnimationStateMachine {\n        dir: Direction = Direction.Down;\n        lastDir: Direction = Direction.Down;\n        sprite: VoidBattle.VBSprite;\n        lastAction: number;\n        animationActive: boolean = false;\n        stateAnimations: AnimationMap = {};\n\n        constructor(sprite: VoidBattle.VBSprite) {\n            this.sprite = sprite;\n            this.lastAction = sprite._action;\n            this._init();\n        }\n\n        _init() {\n            if (!stateMachines) {\n                stateMachines = [];\n                game.eventContext().registerFrameHandler(scene.ANIMATION_UPDATE_PRIORITY, () => {\n                    // see which animations are still active\n                    animation.updateActiveStateAnimations();\n\n                    // remove state machines of dead sprites\n                    stateMachines = stateMachines.filter((sm: AnimationStateMachine) => {\n                        if (sm.sprite.flags & sprites.Flag.Destroyed)\n                            return false;\n                        sm.update();\n                        return true;\n                    });\n                });\n            }\n            stateMachines.push(this);\n        }\n\n        update() {\n            // detect if the action has been changed\n            if(this.lastAction != this.sprite._action || this.lastDir != this.dir) {\n                this.lastAction = this.sprite._action;\n                this.lastDir = this.dir;\n                const anim = this.getAnimationFromState(this.lastAction)\n                if(anim)\n                    anim.runAnimationOnSprite(this.sprite);\n            }\n            this.animationActive = false;\n        }\n\n        setDirection(direction: Direction) {\n            this.dir = direction;\n        }\n\n        // You should really put these in the order [left, up, right, down]\n        setStateAnimations(state: number, animations: Animation[]) {\n            this.stateAnimations[state] = animations;\n        }\n\n        getAnimationFromState(state: number): Animation {\n            const anims: Animation[] = this.stateAnimations[state];\n            if (!anims || anims.length == 0)\n                return null;\n            \n            if (anims.length == 1 || this.dir < 0 || this.dir >= anims.length)\n                return anims[0];\n            \n            return anims[this.dir];\n\n        }\n        //constructor(frameInterval: number, )\n    }\n\n}\n\n\nnamespace VoidBattle {\n    let collisionSprite: Sprite\n    let detectionSetUp: boolean = false;\n\n    // does not work\n    export function getCollisionsAtLocation(location: tiles.Location): Sprite[] {\n        const s: Sprite = sprites.create(assets.image`hitboxPlaceholder`);\n        s.setFlag(SpriteFlag.Invisible, true);\n        tiles.placeOnTile(s, location);\n        \n        const overlaps = game.currentScene().physicsEngine.overlaps(s);\n        sprites.destroy(s);\n        return overlaps;\n    }\n\n    export function vbCollisionCheck(location: tiles.Location, callback: (overlaps: Sprite[]) => void) {\n        control.runInParallel(() => {\n            tiles.placeOnTile(collisionSprite, location);\n            pause(1);\n            const overlaps = game.currentScene().physicsEngine.overlaps(collisionSprite);\n            callback(overlaps);\n        });\n    }\n\n    export class SpriteDetector extends sprites.ExtendableSprite {\n        \n        overlappers: Sprite[] = [];\n        cb: (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => void;\n        isActive: boolean = true;\n        framesToWait: number = 2;\n\n        constructor(loc: tiles.Location, callback: (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => void) {\n            super(assets.image`hitboxPlaceholder`, SpriteKind.Detector);\n            this.setFlag(SpriteFlag.Invisible, true);\n            tiles.placeOnTile(this, loc);\n            this.cb = callback;\n        }\n\n        update(deltaTimeMillis: number) {\n            this.framesToWait --\n            if (this.framesToWait <= 0)\n                if (this.isActive && this.cb) {\n                    console.log(\"hi\");\n                    console.log(this.overlappers);\n                    const isOnWall: boolean = tiles.tileAtLocationIsWall(this.tilemapLocation());\n                    this.cb(this, this.overlappers, isOnWall);\n                }\n            this.overlappers = [];\n        }\n    }\n\n    const tileSize = 16;\n    export class VBSprite extends sprites.ExtendableSprite {\n        sm: animation.AnimationStateMachine;\n        dir: Direction = Direction.Down;\n        onDeathCallback: () => void;\n        canPush: boolean = false;\n        pushable: boolean = false;\n        hitboxWidth: number = 16;\n        hitboxHeight: number = 16;\n\n        constructor(spriteImage: Image, kind?: number, dir?: Direction) {\n            super(spriteImage, kind);\n            this.flags ^= SpriteFlag.GhostThroughWalls;\n            this.setDimensions(this.hitboxWidth, this.hitboxHeight);\n            //this._hitbox.ox = Fx8(-4);\n            //this._hitbox.oy = Fx8(-4);\n            this.sm = new animation.AnimationStateMachine(this);\n            this._action = SpriteAction.Idle;\n\n            if(!detectionSetUp) {\n                console.log(\"setting up detection!\");\n                sprites.onOverlap(SpriteKind.Detector, SpriteKind.Player, function (sprite: Sprite, otherSprite: Sprite) {\n                    console.log(\"hello\")\n                    if (sprite instanceof VoidBattle.SpriteDetector) {\n                        const sd = sprite as VoidBattle.SpriteDetector;\n                        sd.overlappers.push(otherSprite);\n                        console.log(sd.overlappers);\n                    }\n                });\n                detectionSetUp = true;\n            }\n\n            if (dir)\n                this.setDirection(dir);\n            else\n                this.setDirection(Direction.Down);\n            \n        }\n\n        // Accounts for the offset from the hitbox, which is wider so we can\n        // detect neighboring sprites\n        draw(drawLeft: number, drawTop: number) {\n            drawLeft += (this.hitboxWidth - this.image.width) >> 1;\n            drawTop += (this.hitboxHeight - this.image.height) >> 1;\n            super.draw(drawLeft, drawTop);\n        }\n\n        setPosition(x: number, y: number): void {\n            const physics = game.currentScene().physicsEngine;\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n            // call it a second time to correct a bug where sprites that ghost \n            // through walls are still pushed out\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n        }\n\n        update(deltaTimeMillis: number) {\n            if (this.tileKindAt(TileDirection.Center, assets.image`blankTile`)) {\n                sprites.destroy(this, effects.fire, 2000);\n                this.die();\n            }\n        }\n\n        die() {\n            if (this.onDeathCallback){\n                control.runInParallel(this.onDeathCallback);\n            } \n        }\n\n        onDeath(cb: () => void) {\n            this.onDeathCallback = cb;\n        }\n\n        setDirection(dir: Direction) {\n            this.dir = dir;\n            this.sm.setDirection(dir);\n        }\n\n        getNeighboringLocation(dir: Direction): tiles.Location {\n            const loc: tiles.Location = this.tilemapLocation();\n            let neighbor: tiles.Location;\n            switch (dir) {\n                case Direction.Left:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Left);\n                    break;\n                case Direction.Up:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Top);\n                    break;\n                case Direction.Right:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Right);\n                    break;\n                case Direction.Down:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Bottom);\n                    break;\n            }\n            return neighbor;\n        }\n        \n        // moves this sprite in a certain direction. Returns true if the move\n        // was successful\n        move(dir: Direction, turnToFaceDirection: boolean = false): boolean {\n            const neighbor = this.getNeighboringLocation(dir);\n            \n            if(turnToFaceDirection)\n                this.setDirection(dir);\n\n            if (tiles.tileAtLocationIsWall(neighbor)) {\n                scene.cameraShake(2, 200);\n                return false;\n            }\n        \n            //const overlaps: Sprite[] = getCollisionsAtLocation(neighbor);\n            const neighborSprite = this.getNeighboringSprite(neighbor);\n\n            if(neighborSprite)\n                return false;\n            \n            // gotta do it twice because there's a bug where it ignores the ghost \n            // through walls flag\n            //tiles.placeOnTile(this, neighbor);\n            tiles.placeOnTile(this, neighbor);\n            return true;\n            \n        }\n\n        getNeighboringSprite(loc: tiles.Location): Sprite {\n            const engine = game.currentScene().physicsEngine;\n            let neighbors: Sprite[];\n            // the overlaps function simply does not work :/ i hate this engine so much\n            /*\n            if(engine instanceof ArcadePhysicsEngine){\n                const ape = engine as ArcadePhysicsEngine;\n                neighbors = ape.map.neighbors(this)\n            }\n            */\n            let overlaps = game.currentScene().physicsEngine.overlaps(this);\n            for(let i = 0; i < overlaps.length; i++) {\n                const s = overlaps[i];\n                if (s.tilemapLocation().column == loc.column && s.tilemapLocation().row == loc.row)\n                    return s;\n            }\n            return null;\n        }\n\n    }\n\n    export class VBPlayerSprite extends VBSprite {\n        ctrl: controller.Controller;\n        isMyTurn: boolean = false;\n        // used when the player has already started an input but is waiting on some\n        // number of processes to complete before control can be restored or the turn\n        // can end\n        awaitingTurnCompletion: boolean = false;\n        turnEndCallback: () => void;\n        storedTile: Image;\n        // failsafe if there are shenanigans with the turns\n        controlsLocked: boolean = false;\n\n        constructor(spriteImage: Image, ctrl: controller.Controller, kind?: number, dir?: Direction){\n            super(spriteImage, kind, dir);\n            this.ctrl = ctrl;\n            this._setupButtonEvents();\n            this.canPush = true;\n            this.pushable = true;\n        }\n\n        _setupButtonEvents() {\n            // gotta do this for literally every event it seems. kill me\n            // maybe there's a better way, but if there is I haven't found one\n            this.ctrl.onButtonEvent(ControllerButton.Left, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Left, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Right, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Right, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Up, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Up, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Down, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Down, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.A, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.A, ControllerButtonEvent.Pressed);\n            });\n        }\n\n        startTurn() {\n            this.isMyTurn = true;\n        }\n\n        onTurnEnd(cb: () => void) {\n            this.turnEndCallback = cb;\n        }\n\n        endTurn() {\n            this.awaitingTurnCompletion = false;\n            this.isMyTurn = false;\n            if( this.turnEndCallback ) this.turnEndCallback();\n        }\n\n        handleButtonInput(button: ControllerButton, event: ControllerButtonEvent) {\n            if(this.awaitingTurnCompletion || this.controlsLocked || !this.isMyTurn) return;\n            \n            switch(button) {\n                case ControllerButton.Left:\n                    this.step(Direction.Left);\n                    break;\n                case ControllerButton.Up:\n                    this.step(Direction.Up);\n                    break;\n                case ControllerButton.Right:\n                    this.step(Direction.Right);\n                    break;\n                case ControllerButton.Down:\n                    this.step(Direction.Down);\n                    break;\n                case ControllerButton.A:\n                    this.tryPrimaryAction();\n                    break;\n            }\n            //if (moveCompleted) this.endTurn();\n        }\n\n        // step in a particular direction\n        // if there is an immovable obstacle, face it but do not move\n        step(dir: Direction) {\n            this.awaitingTurnCompletion = true;\n\n            this.setDirection(dir);\n            const neighbor = this.getNeighboringLocation(dir);\n\n            const detector = new SpriteDetector(neighbor, (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => {\n                if (isOnWall)\n                    scene.cameraShake(2, 200);\n                else if (overlappers && overlappers.length > 0) {}\n                else\n                    tiles.placeOnTile(this, neighbor);\n                \n                sprites.destroy(detector);//, effects.spray, 200);\n                this.awaitingTurnCompletion = false;\n                this.endTurn();\n            });\n        }\n\n        // attempts to interact using the A button. If the action fails, return false\n        tryPrimaryAction() {\n            const neighbor: tiles.Location = this.getNeighboringLocation(this.dir);\n            \n            if (tiles.tileAtLocationIsWall(neighbor))\n                return;\n            else if (tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && this.storedTile) {\n                tiles.setTileAt(neighbor, this.storedTile);\n                this.storedTile = null;\n                this.endTurn();\n            } else if (!tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && !this.storedTile) {\n                this.storedTile = tiles.getTileImage(neighbor);\n                tiles.setTileAt(neighbor, assets.image`blankTile`);\n                this.endTurn();\n            }\n        }\n    }\n}\n\n","pxt.json":"{\n    \"name\": \"Void Battle\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\",\n        \"images.g.jres\",\n        \"images.g.ts\",\n        \"voidbattle.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}},{"timestamp":1761500600049,"editorVersion":"2.0.61","text":{"main.ts":"tiles.setCurrentTilemap(tilemap`level1`);\r\nscene.centerCameraAt(96, 68);\r\n//game.debug = true;\r\nlet isP1Turn: boolean = true;\r\n\r\nlet player1Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player1, SpriteKind.Player, Direction.Up);\r\nplayer1Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`heroWalkLeft`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkBack`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkRight`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkFront`, 200, true)\r\n]);\r\ntiles.placeOnTile(player1Sprite, tiles.getTileLocation(1, 7));\r\nplayer1Sprite.onTurnEnd(function() {\r\n    isP1Turn = false;\r\n    player2Sprite.startTurn();\r\n});\r\nplayer1Sprite.onDeath(function() {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 2 Wins!\");\r\n    game.gameOverPlayerWin(2);\r\n})\r\n\r\nlet player2Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player2, SpriteKind.Player, Direction.Down);\r\nplayer2Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`witchLeft`, 200, true),\r\n    new animation.Animation(assets.animation`witchBack`, 200, true),\r\n    new animation.Animation(assets.animation`witchRight`, 200, true),\r\n    new animation.Animation(assets.animation`witchForward`, 200, true)\r\n]);\r\ntiles.placeOnTile(player2Sprite, tiles.getTileLocation(2, 7));\r\n//tiles.placeOnTile(player2Sprite, tiles.getTileLocation(10, 2));\r\nplayer2Sprite.onTurnEnd(function () {\r\n    isP1Turn = true;\r\n    player1Sprite.startTurn();\r\n});\r\nplayer2Sprite.onDeath(function () {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 1 Wins!\");\r\n    game.gameOverPlayerWin(1);\r\n})\r\n\r\ngame.onPaint(function() {\r\n    // draw HUD\r\n    screen.drawLine(0, 0, 160, 0, isP1Turn ? 4 : 9);\r\n    screen.fillRect(0, 1, 160, 22, isP1Turn ? 2 : 6);\r\n    screen.drawLine(0, 23, 160, 23, isP1Turn ? 14 : 8);\r\n\r\n    if (player1Sprite.storedTile)\r\n        screen.drawImage(player1Sprite.storedTile, 5, 5);\r\n    \r\n    if (player2Sprite.storedTile)\r\n        screen.drawImage(player2Sprite.storedTile, 141, 5);\r\n\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 2, 2);\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 138, 2);\r\n\r\n    screen.print(\"P\" + (isP1Turn ? \"1\" : \"2\") + \" Turn\", 60, 5, 1);\r\n});\r\n\r\nplayer1Sprite.startTurn();","README.md":" ","assets.json":"","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"level1\": {\n        \"id\": \"level1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAwYzAwMDkwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDIwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMjAwMDAyMDAyMDAwMDAwMDAyMDIyMjIyMjIyMjIyMg==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"sprites.dungeon.floorLight2\",\n            \"sprites.castle.tileGrass1\"\n        ],\n        \"displayName\": \"level1\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","images.g.jres":"{\n    \"image2\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"blankTile\"\n    },\n    \"image1\": {\n        \"data\": \"hwQUABQAAAAAu7u7u7u7u7sAAACwHREREREREdELAADb0bu7u7u7ux29AAAbvQAAAAAAANuxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbvQAAAAAAANuxAADb0bu7u7u7ux29AACwHREREREREdELAAAAu7u7u7u7u7sAAAA=\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"selectedItemFrame\"\n    },\n    \"image3\": {\n        \"data\": \"hwQOAA4AAAARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREA\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"hitboxPlaceholder\"\n    },\n    \"anim1\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim1\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmYyZmYyZmYwMDAwMDBmMGZmMjIyMmZmMGYwMDAwZmZlZmVlZWVmZWZmMDAwMGZmMmUyMjIyZTJmZTAwMDBlZmYyZmZmZjJmZmUwMDAwZmZmZmVlZWVmZmZmMDBmMGVmYmY0ZmY0ZmJmZTBmZjBlZTE0ZGZmZDQxZWUwZjAwZWZkZWRkZGRlZGZlMDAwMGYwZWU0NDQ0ZWUwZjAwMDA0ZTJmMjIyMmYyZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY1NDQ1ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDBmMGVmZjJmZmZmMmZmZTBmZjBmZmZmZWVlZWZmZmYwZjAwZWZiZjRmZjRmYmZlMDAwMGVmMTRkZmZkNDFmZTAwMDBmMDRlZGRkZGU0ZWYwMDAwZWYyZjIyZTJkZGU0MDAwMDRlMmYyMmUyZGQwZTAwMDAwMDRmNTRmNWVlMDAwMDAwMDBmZmZmZmYwZjAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDAwMGVmZjJmZmZmMmZmZTAwMDBmZmZmZWVlZWZmZmYwMGYwZWZiZjRmZjRmYmZlMGZmMGVlMTRkZmZkNDFlZTBmMDBlZmRlZGRkZGVkZmUwMDAwZjBlZTQ0NDRlZTBmMDAwMDRlMmYyMjIyZjJlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjU0NDVmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmMmZmMmZmMDAwMDAwZjBmZjIyMjJmZjBmMDAwMGZmZWZlZWVlZmVmZjAwMDBlZjJlMjIyMmUyZmYwMGYwZWZmMmZmZmYyZmZlMGZmMGZmZmZlZWVlZmZmZjBmMDBlZmJmNGZmNGZiZmUwMDAwZWYxNGRmZmQ0MWZlMDAwMGZlNGVkZGRkZTQwZjAwMDA0ZWRkMmUyMmYyZmUwMDAwZTBkZDJlMjJmMmU0MDAwMDAwZWU1ZjQ1ZjQwMDAwMDAwMGYwZmZmZmZmMDAwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkFront\"\n    },\n    \"anim2\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim2\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDBmZmZmZmYwMDAwMDAwMGYwZjJlZWVlZmYwMDAwMDAyZjIyZWZlZWZlMGYwMDAwZWZlZWZlZWZlZTBmMDBmMDJlMjJlMmZlZmYwZjAwZjBlMmZmZmYyMmUyMGYwMGYwZmZlZWZlZmZmZmZmMDBmMGVlNDRiZjRlZTRmZjAwMDBlZmRkMWZkNGU0ZmUwMDAwZjBkZGRkZTRlZTBmMDAwMGYwNGU0NGVlZmYwMDAwMDBmMDIyZTJkZDA0MDAwMDAwZjAyMmUyZGQwZTAwMDAwMGYwNTVmNGVlMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwMDAwMGZmMGYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZWRlZWVlMGYwMDAwZjA0ZWRlNGQwZjAwMDAwMGYwMjJkZWVkMGYwMDAwMDBmZjU1ZWZmZWZmMDAwMDAwZmZmZmZmZmZmZjAwMDAwMGYwZmYwMGYwMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZGRlNGVlMGYwMDAwZjA0ZTQ0ZWVmZjAwMDAwMGYwMjJlMmRkMDQwMDAwMDBmMDIyZTJkZDBlMDAwMDAwZjA1NWY0ZWUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmMGYyZWVlZWZmMDAwMDAwMmYyMmVmZWVmZTBmMDAwMGVmZWVmZWVmZWUwZjAwZjAyZTIyZTJmZWZmMGYwMGYwZTJmZmZmMjJlMjBmMDBmMGZmZWVmZWZmZmZmZjAwZjBlZTQ0YmY0ZWU0ZmYwMDAwZWZkZDFmZDRlNGZlMDAwMGYwZGRkZGU0ZWUwZjAwMDBmMDRlNDRkZTRkMDAwMDAwZjAyMjIyZGVlZDAwMDAwMGZmNTU0NGVmZmUwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjBmZjAwZjAwZjAwMDA=\",\n        \"displayName\": \"heroWalkLeft\"\n    },\n    \"anim3\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim3\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZmZlZWVlMmYwZjAwMDBmMGVmZWVmZTIyZjIwMDAwZjBlZWZlZWZlZWZlMDAwMGYwZmZlZjJlMjJlMjBmMDBmMDJlMjJmZmZmMmUwZjAwZmZmZmZmZWZlZWZmMGYwMGZmNGVlNGZiNDRlZTBmMDBlZjRlNGRmMWRkZmUwMDAwZjBlZTRlZGRkZDBmMDAwMDAwZmZlZTQ0ZTQwZjAwMDAwMDQwZGQyZTIyMGYwMDAwMDBlMGRkMmUyMjBmMDAwMDAwZjBlZTRmNTUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlZWVkZWRkMGYwMDAwMDBmMGQ0ZWRlNDBmMDAwMDAwZjBkZWVkMjIwZjAwMDAwMGZmZWZmZTU1ZmYwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjAwZjAwZmYwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlNGVkZGRkMGYwMDAwMDBmZmVlNDRlNDBmMDAwMDAwNDBkZDJlMjIwZjAwMDAwMGUwZGQyZTIyMGYwMDAwMDBmMGVlNGY1NTBmMDAwMDAwMDBmZmZmZmYwMDAwMDAwMDAwZjBmZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmYwMDAwMDAwMGZmZWVlZTJmMGYwMDAwZjBlZmVlZmUyMmYyMDAwMGYwZWVmZWVmZWVmZTAwMDBmMGZmZWYyZTIyZTIwZjAwZjAyZTIyZmZmZjJlMGYwMGZmZmZmZmVmZWVmZjBmMDBmZjRlZTRmYjQ0ZWUwZjAwZWY0ZTRkZjFkZGZlMDAwMGYwZWU0ZWRkZGQwZjAwMDAwMGQ0ZWQ0NGU0MGYwMDAwMDBkZWVkMjIyMjBmMDAwMDAwZWZmZTQ0NTVmZjAwMDAwMGZmZmZmZmZmZmYwMDAwMDBmMDBmMDBmZjBmMDA=\",\n        \"displayName\": \"heroWalkRight\"\n    },\n    \"anim4\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim4\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmZlZWVlZmYwMDAwMDBmMGVlZmVlZmVlMGYwMDAwZmZmZjJmZjJmZmZmMDAwMGZmMmUyZWUyZTJmZjAwMDBlZmYyZjIyZjJmZmUwMDAwZmYyZmUyMmVmMmZmMDBmMGVmMmZlZmZlZjJmZTBmZjBlZWZmZWVlZWVmZWUwZjAwZWZlZWVlZWVlZWZlMDAwMGYwZWVlZWVlZWUwZjAwMDA0ZWZmZmZmZmZmZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY0NDQ0ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmMGZmMmZmMmZmMGYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMmZmZjJmZTAwMDBmZjJmZWYyZWYyZmYwMDAwZWZmMmVmMmVlZmZlMDBmMGVmZmZlZWZlZWVmZTBmZjBlZmVlZWVlZWVlZmUwZjAwZjBlZWVlZWVlZTBmMDAwMGUwZmZmZmZmZmZlNDAwMDA0MDJmMjIyMmRlNGQwMDAwZTBmZmZmZmZlZTA0MDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmZmZmMmZmMmZmZmYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMjJmMmZmZTAwMDBmZjJmZTIyZWYyZmYwMGYwZWYyZmVmZmVmMmZlMGZmMGVlZmZlZWVlZWZlZTBmMDBlZmVlZWVlZWVlZmUwMDAwZjBlZWVlZWVlZTBmMDAwMDRlZmZmZmZmZmZlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjQ0NDRmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmZWVlZWZmMDAwMDAwZjBlZWZlZWZlZTBmMDAwMGYwZmYyZmYyZmYwZjAwMDBmZjJlMmVlMmUyZmYwMDAwZWYyZmZmMmYyZmZlMDAwMGZmMmZlMmZlZjJmZjAwMDBlZmZlZTJmZTJmZmUwMGYwZWZlZWVmZWVmZmZlMGZmMGVmZWVlZWVlZWVmZTBmMDBmMGVlZWVlZWVlMGYwMDAwNGVmZmZmZmZmZjBlMDAwMGQ0ZWQyMjIyZjIwNDAwMDA0MGVlZmZmZmZmMGUwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkBack\"\n    },\n    \"anim5\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim5\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwY2MwMDAwMDAwMDAwMDBiY2M1MDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmJmZWZmZWZiZmYwMDAwZmYxZmJmZmJmMWZmMDAwMGYwYmZiYmJiZmIwZjAwMDBlMGZlZWVlZWVmMGUwMDAwYmViY2I1NWJmYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward\"\n    },\n    \"anim6\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim6\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGNjMGMwMDAwMDAwMDAwMDA1Y2NiMDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGYwZmZmZmZmZmYwZjAwMDBlMGZlZmZmZmZmMGUwMDAwYmViZmI1NWJjYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZWJmZWZmYmZlYjAwMDBlMGJiYmU1YmY1ZWUwMDAwMDBlYzVlNTU1NTBmMDAwMDAwZjBmZmZmZmYwMDAwMDAwMDAwYzBjYzAwMDAwMDAwMDAwMGJjYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZmVmZmZmZWYwZTAwMDBiZWJjYjU1YmZiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMDAwNWMwYzAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmMGZmZmZmZmVlMGYwMDAwYmVmYmVlZWViZTBlMDAwMGVlNWZiNWViYmIwZTAwMDBmMDU1NTVlNWNlMDAwMDAwMDBmZmZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchBack\"\n    },\n    \"anim7\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim7\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDA1YzBjMDAwMDAwMDAwMGNjNTVjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGYwNTU1NTU1NTVmZjAwMDAwMGVmZWViZmVlZmYwMDAwMDBlZmJiMWZmYmZmMDAwMDAwYmZiYmJiZmIwZjAwMDAwMGYwZWVlZWVmMGUwMDAwMDBmMGI1ZWJiYjBlMDAwMDAwNWY1NWU1YmIwZTAwMDAwMGJjNTU1NWVlMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGNjYzUwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiZWJmZTBmMDAwMDAwZjBlZWJlZWIwZjAwMDAwMDVmYmJiZWViMDAwMDAwMDA1YzU1ZTVmZTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiYmJmYjBmMDAwMDAwZjBlZWVlZWYwZTAwMDAwMGYwYjVlYmJiMGUwMDAwMDA1ZjU1ZTViYjBlMDAwMDAwYmM1NTU1ZWUwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwY2NjNTAwMDAwMDAwMDBjYzU1YzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmMDU1NTU1NTU1ZmYwMDAwMDBlZmVlYmZlZWZmMDAwMDAwZWZiYjFmZmJmZjAwMDAwMGJmYmJiYmZiMGYwMDAwMDBmMGVlZWViZWViMDAwMDAwNWZiNWJiYmVlYjAwMDAwMDVjNTU1NWVlMGUwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchLeft\"\n    },\n    \"anim8\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim8\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDBjMGM1MDAwMDAwMDAwMGNjNWM1NWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTUwZjAwMDBmZmVlZmJlZWZlMDAwMDAwZmZiZmYxYmJmZTAwMDAwMGYwYmZiYmJiZmIwMDAwMDBlMGZlZWVlZTBmMDAwMDAwZTBiYmJlNWIwZjAwMDAwMGUwYmI1ZTU1ZjUwMDAwMDAwMGVlNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjY2MwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBlZmJlYmJmYjAwMDAwMGYwYmVlYmVlMGYwMDAwMDAwMGJlZWJiYmY1MDAwMDAwMDBlZjVlNTVjNTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBiZmJiYmJmYjAwMDAwMGUwZmVlZWVlMGYwMDAwMDBlMGJiYmU1YjBmMDAwMDAwZTBiYjVlNTVmNTAwMDAwMDAwZWU1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwNWNjYzAwMDAwMDAwMDBjYzVjNTVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1MGYwMDAwZmZlZWZiZWVmZTAwMDAwMGZmYmZmMWJiZmUwMDAwMDBmMGJmYmJiYmZiMDAwMDAwYmVlYmVlZWUwZjAwMDAwMGJlZWJiYjViZjUwMDAwMDBlMGVlNTU1NWM1MDAwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchRight\"\n    },\n    \"anim9\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim9\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDBjZmZhMDAwMDAwMDAwMGZmYWZmYWZmMDAwMDAwZmZmY2FhYWFmZmZmMDBmMGNjY2FhYWFhYWNjYzBmZjBhY2NhYWNjYWFjY2EwZjAwYWZhYWNjY2NhYWZhMDAwMGVmYWFhYWFhYWFmZTAwMDA0ZjllYmZmYmU5ZjQwMDAwNGYxNGQ4OGQ0MWY0MDAwMGYwZDRkZGRkNGQwZjAwMDBiMGZiYmJiYmJmMGIwMDAwZGJjZmNhYWNmY2JkMDAwMGJiYWZhYWFhZmFiYjAwMDAwMGNmYWFhYWZjMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward0\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}","images.g.ts":"","voidbattle.ts":"enum Direction {\n    Left = 0,\n    Up = 1,\n    Right = 2,\n    Down = 3\n}\n\nenum SpriteAction {\n    Idle,\n    Move,\n    Fall,\n    Die\n}\n\nnamespace SpriteKind {\n    export const Detector = SpriteKind.create();\n}\n\nnamespace animation {\n    const stateNamespace = \"__animation\";\n\n    interface AnimationState {\n        animations: SpriteAnimation[];\n    }\n\n    // this will tell the state machines that their animations are still active\n    export function updateActiveStateAnimations(): void {\n        let state: AnimationState = game.currentScene().data[stateNamespace];\n        if(state && state.animations) {\n            state.animations.forEach((anim: SpriteAnimation) => {\n                if (anim.sprite instanceof VoidBattle.VBSprite) {\n                    const vbs = anim.sprite as VoidBattle.VBSprite;\n                    if(vbs.sm)\n                        vbs.sm.animationActive = true;\n                }\n            });\n        }\n    }\n\n    export class Animation {\n        constructor(public frames: Image[], public frameInterval: number = 500, public loop: boolean = false){}\n        runAnimationOnSprite(sprite: Sprite) {\n            animation.runImageAnimation(sprite, this.frames, this.frameInterval, this.loop);\n        }\n    }\n\n    interface AnimationMap {\n        [key: number]: Animation[];\n    }\n\n    let stateMachines: AnimationStateMachine[];\n\n    // should allow you to change the sprite's animation based on its direction\n    // what should i put in here and what should just be part of VBSprite?\n    export class AnimationStateMachine {\n        dir: Direction = Direction.Down;\n        lastDir: Direction = Direction.Down;\n        sprite: VoidBattle.VBSprite;\n        lastAction: number;\n        animationActive: boolean = false;\n        stateAnimations: AnimationMap = {};\n\n        constructor(sprite: VoidBattle.VBSprite) {\n            this.sprite = sprite;\n            this.lastAction = sprite._action;\n            this._init();\n        }\n\n        _init() {\n            if (!stateMachines) {\n                stateMachines = [];\n                game.eventContext().registerFrameHandler(scene.ANIMATION_UPDATE_PRIORITY, () => {\n                    // see which animations are still active\n                    animation.updateActiveStateAnimations();\n\n                    // remove state machines of dead sprites\n                    stateMachines = stateMachines.filter((sm: AnimationStateMachine) => {\n                        if (sm.sprite.flags & sprites.Flag.Destroyed)\n                            return false;\n                        sm.update();\n                        return true;\n                    });\n                });\n            }\n            stateMachines.push(this);\n        }\n\n        update() {\n            // detect if the action has been changed\n            if(this.lastAction != this.sprite._action || this.lastDir != this.dir) {\n                this.lastAction = this.sprite._action;\n                this.lastDir = this.dir;\n                const anim = this.getAnimationFromState(this.lastAction)\n                if(anim)\n                    anim.runAnimationOnSprite(this.sprite);\n            }\n            this.animationActive = false;\n        }\n\n        setDirection(direction: Direction) {\n            this.dir = direction;\n        }\n\n        // You should really put these in the order [left, up, right, down]\n        setStateAnimations(state: number, animations: Animation[]) {\n            this.stateAnimations[state] = animations;\n        }\n\n        getAnimationFromState(state: number): Animation {\n            const anims: Animation[] = this.stateAnimations[state];\n            if (!anims || anims.length == 0)\n                return null;\n            \n            if (anims.length == 1 || this.dir < 0 || this.dir >= anims.length)\n                return anims[0];\n            \n            return anims[this.dir];\n\n        }\n        //constructor(frameInterval: number, )\n    }\n\n}\n\n\nnamespace VoidBattle {\n    let collisionSprite: Sprite\n    let detectionSetUp: boolean = false;\n\n    // does not work\n    export function getCollisionsAtLocation(location: tiles.Location): Sprite[] {\n        const s: Sprite = sprites.create(assets.image`hitboxPlaceholder`);\n        s.setFlag(SpriteFlag.Invisible, true);\n        tiles.placeOnTile(s, location);\n        \n        const overlaps = game.currentScene().physicsEngine.overlaps(s);\n        sprites.destroy(s);\n        return overlaps;\n    }\n\n    export function vbCollisionCheck(location: tiles.Location, callback: (overlaps: Sprite[]) => void) {\n        control.runInParallel(() => {\n            tiles.placeOnTile(collisionSprite, location);\n            pause(1);\n            const overlaps = game.currentScene().physicsEngine.overlaps(collisionSprite);\n            callback(overlaps);\n        });\n    }\n\n    export class SpriteDetector extends sprites.ExtendableSprite {\n        \n        overlappers: Sprite[] = [];\n        cb: (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => void;\n        isActive: boolean = true;\n        framesToWait: number = 2;\n\n        constructor(loc: tiles.Location, callback: (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => void) {\n            super(assets.image`hitboxPlaceholder`, SpriteKind.Detector);\n            this.setFlag(SpriteFlag.Invisible, true);\n            tiles.placeOnTile(this, loc);\n            this.cb = callback;\n        }\n\n        update(deltaTimeMillis: number) {\n            this.framesToWait --\n            if (this.framesToWait <= 0)\n                if (this.isActive && this.cb) {\n                    console.log(\"hi\");\n                    console.log(this.overlappers);\n                    const isOnWall: boolean = tiles.tileAtLocationIsWall(this.tilemapLocation());\n                    this.cb(this, this.overlappers, isOnWall);\n                }\n            this.overlappers = [];\n        }\n    }\n\n    const tileSize = 16;\n    export class VBSprite extends sprites.ExtendableSprite {\n        sm: animation.AnimationStateMachine;\n        dir: Direction = Direction.Down;\n        onDeathCallback: () => void;\n        canPush: boolean = false;\n        pushable: boolean = false;\n        hitboxWidth: number = 16;\n        hitboxHeight: number = 16;\n\n        constructor(spriteImage: Image, kind?: number, dir?: Direction) {\n            super(spriteImage, kind);\n            this.flags ^= SpriteFlag.GhostThroughWalls;\n            this.setDimensions(this.hitboxWidth, this.hitboxHeight);\n            //this._hitbox.ox = Fx8(-4);\n            //this._hitbox.oy = Fx8(-4);\n            this.sm = new animation.AnimationStateMachine(this);\n            this._action = SpriteAction.Idle;\n\n            if(!detectionSetUp) {\n                console.log(\"setting up detection!\");\n                sprites.onOverlap(SpriteKind.Detector, SpriteKind.Player, function (sprite: Sprite, otherSprite: Sprite) {\n                    console.log(\"hello\")\n                    if (sprite instanceof VoidBattle.SpriteDetector) {\n                        const sd = sprite as VoidBattle.SpriteDetector;\n                        sd.overlappers.push(otherSprite);\n                        console.log(sd.overlappers);\n                    }\n                });\n                detectionSetUp = true;\n            }\n\n            if (dir)\n                this.setDirection(dir);\n            else\n                this.setDirection(Direction.Down);\n            \n        }\n\n        // Accounts for the offset from the hitbox, which is wider so we can\n        // detect neighboring sprites\n        draw(drawLeft: number, drawTop: number) {\n            drawLeft += (this.hitboxWidth - this.image.width) >> 1;\n            drawTop += (this.hitboxHeight - this.image.height) >> 1;\n            super.draw(drawLeft, drawTop);\n        }\n\n        setPosition(x: number, y: number): void {\n            const physics = game.currentScene().physicsEngine;\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n            // call it a second time to correct a bug where sprites that ghost \n            // through walls are still pushed out\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n        }\n\n        update(deltaTimeMillis: number) {\n            if (this.tileKindAt(TileDirection.Center, assets.image`blankTile`)) {\n                sprites.destroy(this, effects.fire, 2000);\n                this.die();\n            }\n        }\n\n        die() {\n            if (this.onDeathCallback){\n                control.runInParallel(this.onDeathCallback);\n            } \n        }\n\n        onDeath(cb: () => void) {\n            this.onDeathCallback = cb;\n        }\n\n        setDirection(dir: Direction) {\n            this.dir = dir;\n            this.sm.setDirection(dir);\n        }\n\n        getNeighboringLocation(dir: Direction): tiles.Location {\n            const loc: tiles.Location = this.tilemapLocation();\n            let neighbor: tiles.Location;\n            switch (dir) {\n                case Direction.Left:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Left);\n                    break;\n                case Direction.Up:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Top);\n                    break;\n                case Direction.Right:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Right);\n                    break;\n                case Direction.Down:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Bottom);\n                    break;\n            }\n            return neighbor;\n        }\n        \n        // moves this sprite in a certain direction. Returns true if the move\n        // was successful\n        move(dir: Direction, turnToFaceDirection: boolean = false): boolean {\n            const neighbor = this.getNeighboringLocation(dir);\n            \n            if(turnToFaceDirection)\n                this.setDirection(dir);\n\n            if (tiles.tileAtLocationIsWall(neighbor)) {\n                scene.cameraShake(2, 200);\n                return false;\n            }\n        \n            //const overlaps: Sprite[] = getCollisionsAtLocation(neighbor);\n            const neighborSprite = this.getNeighboringSprite(neighbor);\n\n            if(neighborSprite)\n                return false;\n            \n            // gotta do it twice because there's a bug where it ignores the ghost \n            // through walls flag\n            //tiles.placeOnTile(this, neighbor);\n            tiles.placeOnTile(this, neighbor);\n            return true;\n            \n        }\n\n        getNeighboringSprite(loc: tiles.Location): Sprite {\n            const engine = game.currentScene().physicsEngine;\n            let neighbors: Sprite[];\n            // the overlaps function simply does not work :/ i hate this engine so much\n            /*\n            if(engine instanceof ArcadePhysicsEngine){\n                const ape = engine as ArcadePhysicsEngine;\n                neighbors = ape.map.neighbors(this)\n            }\n            */\n            let overlaps = game.currentScene().physicsEngine.overlaps(this);\n            for(let i = 0; i < overlaps.length; i++) {\n                const s = overlaps[i];\n                if (s.tilemapLocation().column == loc.column && s.tilemapLocation().row == loc.row)\n                    return s;\n            }\n            return null;\n        }\n\n    }\n\n    export class VBPlayerSprite extends VBSprite {\n        ctrl: controller.Controller;\n        isMyTurn: boolean = false;\n        // used when the player has already started an input but is waiting on some\n        // number of processes to complete before control can be restored or the turn\n        // can end\n        awaitingTurnCompletion: boolean = false;\n        turnEndCallback: () => void;\n        storedTile: Image;\n        // failsafe if there are shenanigans with the turns\n        controlsLocked: boolean = false;\n\n        constructor(spriteImage: Image, ctrl: controller.Controller, kind?: number, dir?: Direction){\n            super(spriteImage, kind, dir);\n            this.ctrl = ctrl;\n            this._setupButtonEvents();\n            this.canPush = true;\n            this.pushable = true;\n        }\n\n        _setupButtonEvents() {\n            // gotta do this for literally every event it seems. kill me\n            // maybe there's a better way, but if there is I haven't found one\n            this.ctrl.onButtonEvent(ControllerButton.Left, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Left, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Right, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Right, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Up, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Up, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Down, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Down, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.A, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.A, ControllerButtonEvent.Pressed);\n            });\n        }\n\n        startTurn() {\n            this.isMyTurn = true;\n        }\n\n        onTurnEnd(cb: () => void) {\n            this.turnEndCallback = cb;\n        }\n\n        endTurn() {\n            this.awaitingTurnCompletion = false;\n            this.isMyTurn = false;\n            if( this.turnEndCallback ) this.turnEndCallback();\n        }\n\n        handleButtonInput(button: ControllerButton, event: ControllerButtonEvent) {\n            if(this.awaitingTurnCompletion || this.controlsLocked || !this.isMyTurn) return;\n            \n            switch(button) {\n                case ControllerButton.Left:\n                    this.step(Direction.Left);\n                    break;\n                case ControllerButton.Up:\n                    this.step(Direction.Up);\n                    break;\n                case ControllerButton.Right:\n                    this.step(Direction.Right);\n                    break;\n                case ControllerButton.Down:\n                    this.step(Direction.Down);\n                    break;\n                case ControllerButton.A:\n                    this.tryPrimaryAction();\n                    break;\n            }\n            //if (moveCompleted) this.endTurn();\n        }\n\n        // step in a particular direction\n        // if there is an immovable obstacle, face it but do not move\n        step(dir: Direction) {\n            this.awaitingTurnCompletion = true;\n\n            this.setDirection(dir);\n            const neighbor = this.getNeighboringLocation(dir);\n\n            const detector = new SpriteDetector(neighbor, (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => {\n                if (isOnWall)\n                    scene.cameraShake(2, 200);\n                else if (overlappers && overlappers.length > 0) {}\n                else\n                    tiles.placeOnTile(this, neighbor);\n                \n                sprites.destroy(detector);//, effects.spray, 200);\n                this.awaitingTurnCompletion = false;\n                this.endTurn();\n            });\n        }\n\n        // attempts to interact using the A button. If the action fails, return false\n        tryPrimaryAction() {\n            const neighbor: tiles.Location = this.getNeighboringLocation(this.dir);\n            \n            if (tiles.tileAtLocationIsWall(neighbor))\n                return;\n            else if (tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && this.storedTile) {\n                tiles.setTileAt(neighbor, this.storedTile);\n                this.storedTile = null;\n                this.endTurn();\n            } else if (!tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && !this.storedTile) {\n                this.storedTile = tiles.getTileImage(neighbor);\n                tiles.setTileAt(neighbor, assets.image`blankTile`);\n                this.endTurn();\n            }\n        }\n    }\n}\n\n","tilespritemap.ts":"// Add your code here\n","pxt.json":"{\n    \"name\": \"Void Battle\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\",\n        \"images.g.jres\",\n        \"images.g.ts\",\n        \"voidbattle.ts\",\n        \"tilespritemap.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}},{"timestamp":1761508222341,"editorVersion":"2.0.61","text":{"main.ts":"tiles.setCurrentTilemap(tilemap`level1`);\r\nscene.centerCameraAt(96, 68);\r\n//game.debug = true;\r\nlet isP1Turn: boolean = true;\r\n\r\nlet player1Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player1, SpriteKind.Player, Direction.Up);\r\nplayer1Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`heroWalkLeft`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkBack`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkRight`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkFront`, 200, true)\r\n]);\r\ntiles.placeOnTile(player1Sprite, tiles.getTileLocation(1, 7));\r\nplayer1Sprite.onTurnEnd(function() {\r\n    isP1Turn = false;\r\n    player2Sprite.startTurn();\r\n});\r\nplayer1Sprite.onDeath(function() {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 2 Wins!\");\r\n    game.gameOverPlayerWin(2);\r\n})\r\n\r\nlet player2Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player2, SpriteKind.Player, Direction.Down);\r\nplayer2Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`witchLeft`, 200, true),\r\n    new animation.Animation(assets.animation`witchBack`, 200, true),\r\n    new animation.Animation(assets.animation`witchRight`, 200, true),\r\n    new animation.Animation(assets.animation`witchForward`, 200, true)\r\n]);\r\ntiles.placeOnTile(player2Sprite, tiles.getTileLocation(2, 7));\r\n//tiles.placeOnTile(player2Sprite, tiles.getTileLocation(10, 2));\r\nplayer2Sprite.onTurnEnd(function () {\r\n    isP1Turn = true;\r\n    player1Sprite.startTurn();\r\n});\r\nplayer2Sprite.onDeath(function () {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 1 Wins!\");\r\n    game.gameOverPlayerWin(1);\r\n})\r\n\r\ngame.onPaint(function() {\r\n    // draw HUD\r\n    screen.drawLine(0, 0, 160, 0, isP1Turn ? 4 : 9);\r\n    screen.fillRect(0, 1, 160, 22, isP1Turn ? 2 : 6);\r\n    screen.drawLine(0, 23, 160, 23, isP1Turn ? 14 : 8);\r\n\r\n    if (player1Sprite.storedTile)\r\n        screen.drawImage(player1Sprite.storedTile, 5, 5);\r\n    \r\n    if (player2Sprite.storedTile)\r\n        screen.drawImage(player2Sprite.storedTile, 141, 5);\r\n\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 2, 2);\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 138, 2);\r\n\r\n    screen.print(\"P\" + (isP1Turn ? \"1\" : \"2\") + \" Turn\", 60, 5, 1);\r\n});\r\n\r\nplayer1Sprite.startTurn();","README.md":" ","assets.json":"","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"level1\": {\n        \"id\": \"level1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAwYzAwMDkwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDIwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMjAwMDAyMDAyMDAwMDAwMDAyMDIyMjIyMjIyMjIyMg==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"sprites.dungeon.floorLight2\",\n            \"sprites.castle.tileGrass1\"\n        ],\n        \"displayName\": \"level1\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","images.g.jres":"{\n    \"image2\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"blankTile\"\n    },\n    \"image1\": {\n        \"data\": \"hwQUABQAAAAAu7u7u7u7u7sAAACwHREREREREdELAADb0bu7u7u7ux29AAAbvQAAAAAAANuxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbvQAAAAAAANuxAADb0bu7u7u7ux29AACwHREREREREdELAAAAu7u7u7u7u7sAAAA=\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"selectedItemFrame\"\n    },\n    \"image3\": {\n        \"data\": \"hwQOAA4AAAARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREA\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"hitboxPlaceholder\"\n    },\n    \"anim1\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim1\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmYyZmYyZmYwMDAwMDBmMGZmMjIyMmZmMGYwMDAwZmZlZmVlZWVmZWZmMDAwMGZmMmUyMjIyZTJmZTAwMDBlZmYyZmZmZjJmZmUwMDAwZmZmZmVlZWVmZmZmMDBmMGVmYmY0ZmY0ZmJmZTBmZjBlZTE0ZGZmZDQxZWUwZjAwZWZkZWRkZGRlZGZlMDAwMGYwZWU0NDQ0ZWUwZjAwMDA0ZTJmMjIyMmYyZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY1NDQ1ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDBmMGVmZjJmZmZmMmZmZTBmZjBmZmZmZWVlZWZmZmYwZjAwZWZiZjRmZjRmYmZlMDAwMGVmMTRkZmZkNDFmZTAwMDBmMDRlZGRkZGU0ZWYwMDAwZWYyZjIyZTJkZGU0MDAwMDRlMmYyMmUyZGQwZTAwMDAwMDRmNTRmNWVlMDAwMDAwMDBmZmZmZmYwZjAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDAwMGVmZjJmZmZmMmZmZTAwMDBmZmZmZWVlZWZmZmYwMGYwZWZiZjRmZjRmYmZlMGZmMGVlMTRkZmZkNDFlZTBmMDBlZmRlZGRkZGVkZmUwMDAwZjBlZTQ0NDRlZTBmMDAwMDRlMmYyMjIyZjJlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjU0NDVmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmMmZmMmZmMDAwMDAwZjBmZjIyMjJmZjBmMDAwMGZmZWZlZWVlZmVmZjAwMDBlZjJlMjIyMmUyZmYwMGYwZWZmMmZmZmYyZmZlMGZmMGZmZmZlZWVlZmZmZjBmMDBlZmJmNGZmNGZiZmUwMDAwZWYxNGRmZmQ0MWZlMDAwMGZlNGVkZGRkZTQwZjAwMDA0ZWRkMmUyMmYyZmUwMDAwZTBkZDJlMjJmMmU0MDAwMDAwZWU1ZjQ1ZjQwMDAwMDAwMGYwZmZmZmZmMDAwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkFront\"\n    },\n    \"anim2\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim2\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDBmZmZmZmYwMDAwMDAwMGYwZjJlZWVlZmYwMDAwMDAyZjIyZWZlZWZlMGYwMDAwZWZlZWZlZWZlZTBmMDBmMDJlMjJlMmZlZmYwZjAwZjBlMmZmZmYyMmUyMGYwMGYwZmZlZWZlZmZmZmZmMDBmMGVlNDRiZjRlZTRmZjAwMDBlZmRkMWZkNGU0ZmUwMDAwZjBkZGRkZTRlZTBmMDAwMGYwNGU0NGVlZmYwMDAwMDBmMDIyZTJkZDA0MDAwMDAwZjAyMmUyZGQwZTAwMDAwMGYwNTVmNGVlMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwMDAwMGZmMGYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZWRlZWVlMGYwMDAwZjA0ZWRlNGQwZjAwMDAwMGYwMjJkZWVkMGYwMDAwMDBmZjU1ZWZmZWZmMDAwMDAwZmZmZmZmZmZmZjAwMDAwMGYwZmYwMGYwMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZGRlNGVlMGYwMDAwZjA0ZTQ0ZWVmZjAwMDAwMGYwMjJlMmRkMDQwMDAwMDBmMDIyZTJkZDBlMDAwMDAwZjA1NWY0ZWUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmMGYyZWVlZWZmMDAwMDAwMmYyMmVmZWVmZTBmMDAwMGVmZWVmZWVmZWUwZjAwZjAyZTIyZTJmZWZmMGYwMGYwZTJmZmZmMjJlMjBmMDBmMGZmZWVmZWZmZmZmZjAwZjBlZTQ0YmY0ZWU0ZmYwMDAwZWZkZDFmZDRlNGZlMDAwMGYwZGRkZGU0ZWUwZjAwMDBmMDRlNDRkZTRkMDAwMDAwZjAyMjIyZGVlZDAwMDAwMGZmNTU0NGVmZmUwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjBmZjAwZjAwZjAwMDA=\",\n        \"displayName\": \"heroWalkLeft\"\n    },\n    \"anim3\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim3\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZmZlZWVlMmYwZjAwMDBmMGVmZWVmZTIyZjIwMDAwZjBlZWZlZWZlZWZlMDAwMGYwZmZlZjJlMjJlMjBmMDBmMDJlMjJmZmZmMmUwZjAwZmZmZmZmZWZlZWZmMGYwMGZmNGVlNGZiNDRlZTBmMDBlZjRlNGRmMWRkZmUwMDAwZjBlZTRlZGRkZDBmMDAwMDAwZmZlZTQ0ZTQwZjAwMDAwMDQwZGQyZTIyMGYwMDAwMDBlMGRkMmUyMjBmMDAwMDAwZjBlZTRmNTUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlZWVkZWRkMGYwMDAwMDBmMGQ0ZWRlNDBmMDAwMDAwZjBkZWVkMjIwZjAwMDAwMGZmZWZmZTU1ZmYwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjAwZjAwZmYwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlNGVkZGRkMGYwMDAwMDBmZmVlNDRlNDBmMDAwMDAwNDBkZDJlMjIwZjAwMDAwMGUwZGQyZTIyMGYwMDAwMDBmMGVlNGY1NTBmMDAwMDAwMDBmZmZmZmYwMDAwMDAwMDAwZjBmZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmYwMDAwMDAwMGZmZWVlZTJmMGYwMDAwZjBlZmVlZmUyMmYyMDAwMGYwZWVmZWVmZWVmZTAwMDBmMGZmZWYyZTIyZTIwZjAwZjAyZTIyZmZmZjJlMGYwMGZmZmZmZmVmZWVmZjBmMDBmZjRlZTRmYjQ0ZWUwZjAwZWY0ZTRkZjFkZGZlMDAwMGYwZWU0ZWRkZGQwZjAwMDAwMGQ0ZWQ0NGU0MGYwMDAwMDBkZWVkMjIyMjBmMDAwMDAwZWZmZTQ0NTVmZjAwMDAwMGZmZmZmZmZmZmYwMDAwMDBmMDBmMDBmZjBmMDA=\",\n        \"displayName\": \"heroWalkRight\"\n    },\n    \"anim4\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim4\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmZlZWVlZmYwMDAwMDBmMGVlZmVlZmVlMGYwMDAwZmZmZjJmZjJmZmZmMDAwMGZmMmUyZWUyZTJmZjAwMDBlZmYyZjIyZjJmZmUwMDAwZmYyZmUyMmVmMmZmMDBmMGVmMmZlZmZlZjJmZTBmZjBlZWZmZWVlZWVmZWUwZjAwZWZlZWVlZWVlZWZlMDAwMGYwZWVlZWVlZWUwZjAwMDA0ZWZmZmZmZmZmZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY0NDQ0ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmMGZmMmZmMmZmMGYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMmZmZjJmZTAwMDBmZjJmZWYyZWYyZmYwMDAwZWZmMmVmMmVlZmZlMDBmMGVmZmZlZWZlZWVmZTBmZjBlZmVlZWVlZWVlZmUwZjAwZjBlZWVlZWVlZTBmMDAwMGUwZmZmZmZmZmZlNDAwMDA0MDJmMjIyMmRlNGQwMDAwZTBmZmZmZmZlZTA0MDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmZmZmMmZmMmZmZmYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMjJmMmZmZTAwMDBmZjJmZTIyZWYyZmYwMGYwZWYyZmVmZmVmMmZlMGZmMGVlZmZlZWVlZWZlZTBmMDBlZmVlZWVlZWVlZmUwMDAwZjBlZWVlZWVlZTBmMDAwMDRlZmZmZmZmZmZlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjQ0NDRmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmZWVlZWZmMDAwMDAwZjBlZWZlZWZlZTBmMDAwMGYwZmYyZmYyZmYwZjAwMDBmZjJlMmVlMmUyZmYwMDAwZWYyZmZmMmYyZmZlMDAwMGZmMmZlMmZlZjJmZjAwMDBlZmZlZTJmZTJmZmUwMGYwZWZlZWVmZWVmZmZlMGZmMGVmZWVlZWVlZWVmZTBmMDBmMGVlZWVlZWVlMGYwMDAwNGVmZmZmZmZmZjBlMDAwMGQ0ZWQyMjIyZjIwNDAwMDA0MGVlZmZmZmZmMGUwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkBack\"\n    },\n    \"anim5\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim5\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwY2MwMDAwMDAwMDAwMDBiY2M1MDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmJmZWZmZWZiZmYwMDAwZmYxZmJmZmJmMWZmMDAwMGYwYmZiYmJiZmIwZjAwMDBlMGZlZWVlZWVmMGUwMDAwYmViY2I1NWJmYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward\"\n    },\n    \"anim6\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim6\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGNjMGMwMDAwMDAwMDAwMDA1Y2NiMDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGYwZmZmZmZmZmYwZjAwMDBlMGZlZmZmZmZmMGUwMDAwYmViZmI1NWJjYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZWJmZWZmYmZlYjAwMDBlMGJiYmU1YmY1ZWUwMDAwMDBlYzVlNTU1NTBmMDAwMDAwZjBmZmZmZmYwMDAwMDAwMDAwYzBjYzAwMDAwMDAwMDAwMGJjYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZmVmZmZmZWYwZTAwMDBiZWJjYjU1YmZiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMDAwNWMwYzAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmMGZmZmZmZmVlMGYwMDAwYmVmYmVlZWViZTBlMDAwMGVlNWZiNWViYmIwZTAwMDBmMDU1NTVlNWNlMDAwMDAwMDBmZmZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchBack\"\n    },\n    \"anim7\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim7\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDA1YzBjMDAwMDAwMDAwMGNjNTVjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGYwNTU1NTU1NTVmZjAwMDAwMGVmZWViZmVlZmYwMDAwMDBlZmJiMWZmYmZmMDAwMDAwYmZiYmJiZmIwZjAwMDAwMGYwZWVlZWVmMGUwMDAwMDBmMGI1ZWJiYjBlMDAwMDAwNWY1NWU1YmIwZTAwMDAwMGJjNTU1NWVlMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGNjYzUwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiZWJmZTBmMDAwMDAwZjBlZWJlZWIwZjAwMDAwMDVmYmJiZWViMDAwMDAwMDA1YzU1ZTVmZTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiYmJmYjBmMDAwMDAwZjBlZWVlZWYwZTAwMDAwMGYwYjVlYmJiMGUwMDAwMDA1ZjU1ZTViYjBlMDAwMDAwYmM1NTU1ZWUwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwY2NjNTAwMDAwMDAwMDBjYzU1YzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmMDU1NTU1NTU1ZmYwMDAwMDBlZmVlYmZlZWZmMDAwMDAwZWZiYjFmZmJmZjAwMDAwMGJmYmJiYmZiMGYwMDAwMDBmMGVlZWViZWViMDAwMDAwNWZiNWJiYmVlYjAwMDAwMDVjNTU1NWVlMGUwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchLeft\"\n    },\n    \"anim8\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim8\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDBjMGM1MDAwMDAwMDAwMGNjNWM1NWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTUwZjAwMDBmZmVlZmJlZWZlMDAwMDAwZmZiZmYxYmJmZTAwMDAwMGYwYmZiYmJiZmIwMDAwMDBlMGZlZWVlZTBmMDAwMDAwZTBiYmJlNWIwZjAwMDAwMGUwYmI1ZTU1ZjUwMDAwMDAwMGVlNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjY2MwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBlZmJlYmJmYjAwMDAwMGYwYmVlYmVlMGYwMDAwMDAwMGJlZWJiYmY1MDAwMDAwMDBlZjVlNTVjNTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBiZmJiYmJmYjAwMDAwMGUwZmVlZWVlMGYwMDAwMDBlMGJiYmU1YjBmMDAwMDAwZTBiYjVlNTVmNTAwMDAwMDAwZWU1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwNWNjYzAwMDAwMDAwMDBjYzVjNTVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1MGYwMDAwZmZlZWZiZWVmZTAwMDAwMGZmYmZmMWJiZmUwMDAwMDBmMGJmYmJiYmZiMDAwMDAwYmVlYmVlZWUwZjAwMDAwMGJlZWJiYjViZjUwMDAwMDBlMGVlNTU1NWM1MDAwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchRight\"\n    },\n    \"anim9\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim9\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDBjZmZhMDAwMDAwMDAwMGZmYWZmYWZmMDAwMDAwZmZmY2FhYWFmZmZmMDBmMGNjY2FhYWFhYWNjYzBmZjBhY2NhYWNjYWFjY2EwZjAwYWZhYWNjY2NhYWZhMDAwMGVmYWFhYWFhYWFmZTAwMDA0ZjllYmZmYmU5ZjQwMDAwNGYxNGQ4OGQ0MWY0MDAwMGYwZDRkZGRkNGQwZjAwMDBiMGZiYmJiYmJmMGIwMDAwZGJjZmNhYWNmY2JkMDAwMGJiYWZhYWFhZmFiYjAwMDAwMGNmYWFhYWZjMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward0\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}","images.g.ts":"","voidbattle.ts":"enum Direction {\n    Left = 0,\n    Up = 1,\n    Right = 2,\n    Down = 3\n}\n\nenum SpriteAction {\n    Idle,\n    Move,\n    Fall,\n    Die\n}\n\nnamespace SpriteKind {\n    export const Detector = SpriteKind.create();\n}\n\nnamespace animation {\n    const stateNamespace = \"__animation\";\n\n    interface AnimationState {\n        animations: SpriteAnimation[];\n    }\n\n    // this will tell the state machines that their animations are still active\n    export function updateActiveStateAnimations(): void {\n        let state: AnimationState = game.currentScene().data[stateNamespace];\n        if(state && state.animations) {\n            state.animations.forEach((anim: SpriteAnimation) => {\n                if (anim.sprite instanceof VoidBattle.VBSprite) {\n                    const vbs = anim.sprite as VoidBattle.VBSprite;\n                    if(vbs.sm)\n                        vbs.sm.animationActive = true;\n                }\n            });\n        }\n    }\n\n    export class Animation {\n        constructor(public frames: Image[], public frameInterval: number = 500, public loop: boolean = false){}\n        runAnimationOnSprite(sprite: Sprite) {\n            animation.runImageAnimation(sprite, this.frames, this.frameInterval, this.loop);\n        }\n    }\n\n    interface AnimationMap {\n        [key: number]: Animation[];\n    }\n\n    let stateMachines: AnimationStateMachine[];\n\n    // should allow you to change the sprite's animation based on its direction\n    // what should i put in here and what should just be part of VBSprite?\n    export class AnimationStateMachine {\n        dir: Direction = Direction.Down;\n        lastDir: Direction = Direction.Down;\n        sprite: VoidBattle.VBSprite;\n        lastAction: number;\n        animationActive: boolean = false;\n        stateAnimations: AnimationMap = {};\n\n        constructor(sprite: VoidBattle.VBSprite) {\n            this.sprite = sprite;\n            this.lastAction = sprite._action;\n            this._init();\n        }\n\n        _init() {\n            if (!stateMachines) {\n                stateMachines = [];\n                game.eventContext().registerFrameHandler(scene.ANIMATION_UPDATE_PRIORITY, () => {\n                    // see which animations are still active\n                    animation.updateActiveStateAnimations();\n\n                    // remove state machines of dead sprites\n                    stateMachines = stateMachines.filter((sm: AnimationStateMachine) => {\n                        if (sm.sprite.flags & sprites.Flag.Destroyed)\n                            return false;\n                        sm.update();\n                        return true;\n                    });\n                });\n            }\n            stateMachines.push(this);\n        }\n\n        update() {\n            // detect if the action has been changed\n            if(this.lastAction != this.sprite._action || this.lastDir != this.dir) {\n                this.lastAction = this.sprite._action;\n                this.lastDir = this.dir;\n                const anim = this.getAnimationFromState(this.lastAction)\n                if(anim)\n                    anim.runAnimationOnSprite(this.sprite);\n            }\n            this.animationActive = false;\n        }\n\n        setDirection(direction: Direction) {\n            this.dir = direction;\n        }\n\n        // You should really put these in the order [left, up, right, down]\n        setStateAnimations(state: number, animations: Animation[]) {\n            this.stateAnimations[state] = animations;\n        }\n\n        getAnimationFromState(state: number): Animation {\n            const anims: Animation[] = this.stateAnimations[state];\n            if (!anims || anims.length == 0)\n                return null;\n            \n            if (anims.length == 1 || this.dir < 0 || this.dir >= anims.length)\n                return anims[0];\n            \n            return anims[this.dir];\n\n        }\n        //constructor(frameInterval: number, )\n    }\n\n}\n\n\nnamespace VoidBattle {\n    let collisionSprite: Sprite\n    let detectionSetUp: boolean = false;\n\n    // does not work\n    export function getCollisionsAtLocation(location: tiles.Location): Sprite[] {\n        const s: Sprite = sprites.create(assets.image`hitboxPlaceholder`);\n        s.setFlag(SpriteFlag.Invisible, true);\n        tiles.placeOnTile(s, location);\n        \n        const overlaps = game.currentScene().physicsEngine.overlaps(s);\n        sprites.destroy(s);\n        return overlaps;\n    }\n\n    export function vbCollisionCheck(location: tiles.Location, callback: (overlaps: Sprite[]) => void) {\n        control.runInParallel(() => {\n            tiles.placeOnTile(collisionSprite, location);\n            pause(1);\n            const overlaps = game.currentScene().physicsEngine.overlaps(collisionSprite);\n            callback(overlaps);\n        });\n    }\n\n    export class SpriteDetector extends sprites.ExtendableSprite {\n        \n        overlappers: Sprite[] = [];\n        cb: (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => void;\n        isActive: boolean = true;\n        framesToWait: number = 2;\n\n        constructor(loc: tiles.Location, callback: (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => void) {\n            super(assets.image`hitboxPlaceholder`, SpriteKind.Detector);\n            this.setFlag(SpriteFlag.Invisible, true);\n            tiles.placeOnTile(this, loc);\n            this.cb = callback;\n        }\n\n        update(deltaTimeMillis: number) {\n            this.framesToWait --\n            if (this.framesToWait <= 0)\n                if (this.isActive && this.cb) {\n                    console.log(\"hi\");\n                    console.log(this.overlappers);\n                    const isOnWall: boolean = tiles.tileAtLocationIsWall(this.tilemapLocation());\n                    this.cb(this, this.overlappers, isOnWall);\n                }\n            this.overlappers = [];\n        }\n    }\n\n    const tileSize = 16;\n    export class VBSprite extends sprites.ExtendableSprite {\n        sm: animation.AnimationStateMachine;\n        dir: Direction = Direction.Down;\n        onDeathCallback: () => void;\n        canPush: boolean = false;\n        pushable: boolean = false;\n        hitboxWidth: number = 16;\n        hitboxHeight: number = 16;\n\n        constructor(spriteImage: Image, kind?: number, dir?: Direction) {\n            super(spriteImage, kind);\n            this.flags ^= SpriteFlag.GhostThroughWalls;\n            this.setDimensions(this.hitboxWidth, this.hitboxHeight);\n            //this._hitbox.ox = Fx8(-4);\n            //this._hitbox.oy = Fx8(-4);\n            this.sm = new animation.AnimationStateMachine(this);\n            this._action = SpriteAction.Idle;\n\n            if(!detectionSetUp) {\n                console.log(\"setting up detection!\");\n                sprites.onOverlap(SpriteKind.Detector, SpriteKind.Player, function (sprite: Sprite, otherSprite: Sprite) {\n                    console.log(\"hello\")\n                    if (sprite instanceof VoidBattle.SpriteDetector) {\n                        const sd = sprite as VoidBattle.SpriteDetector;\n                        sd.overlappers.push(otherSprite);\n                        console.log(sd.overlappers);\n                    }\n                });\n                detectionSetUp = true;\n            }\n\n            if (dir)\n                this.setDirection(dir);\n            else\n                this.setDirection(Direction.Down);\n            \n        }\n\n        // Accounts for the offset from the hitbox, which is wider so we can\n        // detect neighboring sprites\n        draw(drawLeft: number, drawTop: number) {\n            drawLeft += (this.hitboxWidth - this.image.width) >> 1;\n            drawTop += (this.hitboxHeight - this.image.height) >> 1;\n            super.draw(drawLeft, drawTop);\n        }\n\n        setPosition(x: number, y: number): void {\n            const physics = game.currentScene().physicsEngine;\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n            // call it a second time to correct a bug where sprites that ghost \n            // through walls are still pushed out\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n        }\n\n        update(deltaTimeMillis: number) {\n            if (this.tileKindAt(TileDirection.Center, assets.image`blankTile`)) {\n                sprites.destroy(this, effects.fire, 2000);\n                this.die();\n            }\n        }\n\n        die() {\n            if (this.onDeathCallback){\n                control.runInParallel(this.onDeathCallback);\n            } \n        }\n\n        onDeath(cb: () => void) {\n            this.onDeathCallback = cb;\n        }\n\n        setDirection(dir: Direction) {\n            this.dir = dir;\n            this.sm.setDirection(dir);\n        }\n\n        getNeighboringLocation(dir: Direction): tiles.Location {\n            const loc: tiles.Location = this.tilemapLocation();\n            let neighbor: tiles.Location;\n            switch (dir) {\n                case Direction.Left:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Left);\n                    break;\n                case Direction.Up:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Top);\n                    break;\n                case Direction.Right:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Right);\n                    break;\n                case Direction.Down:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Bottom);\n                    break;\n            }\n            return neighbor;\n        }\n        \n        // moves this sprite in a certain direction. Returns true if the move\n        // was successful\n        move(dir: Direction, turnToFaceDirection: boolean = false): boolean {\n            const neighbor = this.getNeighboringLocation(dir);\n            \n            if(turnToFaceDirection)\n                this.setDirection(dir);\n\n            if (tiles.tileAtLocationIsWall(neighbor)) {\n                scene.cameraShake(2, 200);\n                return false;\n            }\n        \n            //const overlaps: Sprite[] = getCollisionsAtLocation(neighbor);\n            const neighborSprite = this.getNeighboringSprite(neighbor);\n\n            if(neighborSprite)\n                return false;\n            \n            // gotta do it twice because there's a bug where it ignores the ghost \n            // through walls flag\n            //tiles.placeOnTile(this, neighbor);\n            tiles.placeOnTile(this, neighbor);\n            return true;\n            \n        }\n\n        getNeighboringSprite(loc: tiles.Location): Sprite {\n            const engine = game.currentScene().physicsEngine;\n            let neighbors: Sprite[];\n            // the overlaps function simply does not work :/ i hate this engine so much\n            /*\n            if(engine instanceof ArcadePhysicsEngine){\n                const ape = engine as ArcadePhysicsEngine;\n                neighbors = ape.map.neighbors(this)\n            }\n            */\n            let overlaps = game.currentScene().physicsEngine.overlaps(this);\n            for(let i = 0; i < overlaps.length; i++) {\n                const s = overlaps[i];\n                if (s.tilemapLocation().column == loc.column && s.tilemapLocation().row == loc.row)\n                    return s;\n            }\n            return null;\n        }\n\n    }\n\n    export class VBPlayerSprite extends VBSprite {\n        ctrl: controller.Controller;\n        isMyTurn: boolean = false;\n        // used when the player has already started an input but is waiting on some\n        // number of processes to complete before control can be restored or the turn\n        // can end\n        awaitingTurnCompletion: boolean = false;\n        turnEndCallback: () => void;\n        storedTile: Image;\n        // failsafe if there are shenanigans with the turns\n        controlsLocked: boolean = false;\n\n        constructor(spriteImage: Image, ctrl: controller.Controller, kind?: number, dir?: Direction){\n            super(spriteImage, kind, dir);\n            this.ctrl = ctrl;\n            this._setupButtonEvents();\n            this.canPush = true;\n            this.pushable = true;\n        }\n\n        _setupButtonEvents() {\n            // gotta do this for literally every event it seems. kill me\n            // maybe there's a better way, but if there is I haven't found one\n            this.ctrl.onButtonEvent(ControllerButton.Left, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Left, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Right, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Right, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Up, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Up, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Down, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Down, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.A, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.A, ControllerButtonEvent.Pressed);\n            });\n        }\n\n        startTurn() {\n            this.isMyTurn = true;\n        }\n\n        onTurnEnd(cb: () => void) {\n            this.turnEndCallback = cb;\n        }\n\n        endTurn() {\n            this.awaitingTurnCompletion = false;\n            this.isMyTurn = false;\n            if( this.turnEndCallback ) this.turnEndCallback();\n        }\n\n        handleButtonInput(button: ControllerButton, event: ControllerButtonEvent) {\n            if(this.awaitingTurnCompletion || this.controlsLocked || !this.isMyTurn) return;\n            \n            switch(button) {\n                case ControllerButton.Left:\n                    this.step(Direction.Left);\n                    break;\n                case ControllerButton.Up:\n                    this.step(Direction.Up);\n                    break;\n                case ControllerButton.Right:\n                    this.step(Direction.Right);\n                    break;\n                case ControllerButton.Down:\n                    this.step(Direction.Down);\n                    break;\n                case ControllerButton.A:\n                    this.tryPrimaryAction();\n                    break;\n            }\n            //if (moveCompleted) this.endTurn();\n        }\n\n        // step in a particular direction\n        // if there is an immovable obstacle, face it but do not move\n        step(dir: Direction) {\n            this.awaitingTurnCompletion = true;\n\n            this.setDirection(dir);\n            const neighbor = this.getNeighboringLocation(dir);\n\n            const detector = new SpriteDetector(neighbor, (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => {\n                if (isOnWall)\n                    scene.cameraShake(2, 200);\n                else if (overlappers && overlappers.length > 0) {}\n                else\n                    tiles.placeOnTile(this, neighbor);\n                \n                sprites.destroy(detector);//, effects.spray, 200);\n                this.awaitingTurnCompletion = false;\n                this.endTurn();\n            });\n        }\n\n        // attempts to interact using the A button. If the action fails, return false\n        tryPrimaryAction() {\n            const neighbor: tiles.Location = this.getNeighboringLocation(this.dir);\n            \n            if (tiles.tileAtLocationIsWall(neighbor))\n                return;\n            else if (tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && this.storedTile) {\n                tiles.setTileAt(neighbor, this.storedTile);\n                this.storedTile = null;\n                this.endTurn();\n            } else if (!tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && !this.storedTile) {\n                this.storedTile = tiles.getTileImage(neighbor);\n                tiles.setTileAt(neighbor, assets.image`blankTile`);\n                this.endTurn();\n            }\n        }\n    }\n}\n\n","tilespritemap.ts":"interface TileSpriteMap {\r\n    [column: number] : Sprite;   \r\n}\r\n\r\n","pxt.json":"{\n    \"name\": \"Void Battle\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\",\n        \"images.g.jres\",\n        \"images.g.ts\",\n        \"voidbattle.ts\",\n        \"tilespritemap.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}},{"timestamp":1761510022733,"editorVersion":"2.0.61","text":{"main.ts":"tiles.setCurrentTilemap(tilemap`level1`);\r\nscene.centerCameraAt(96, 68);\r\n//game.debug = true;\r\nlet isP1Turn: boolean = true;\r\n\r\nlet player1Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player1, SpriteKind.Player, Direction.Up);\r\nplayer1Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`heroWalkLeft`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkBack`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkRight`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkFront`, 200, true)\r\n]);\r\ntiles.placeOnTile(player1Sprite, tiles.getTileLocation(1, 7));\r\nplayer1Sprite.onTurnEnd(function() {\r\n    isP1Turn = false;\r\n    player2Sprite.startTurn();\r\n});\r\nplayer1Sprite.onDeath(function() {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 2 Wins!\");\r\n    game.gameOverPlayerWin(2);\r\n})\r\n\r\nlet player2Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player2, SpriteKind.Player, Direction.Down);\r\nplayer2Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`witchLeft`, 200, true),\r\n    new animation.Animation(assets.animation`witchBack`, 200, true),\r\n    new animation.Animation(assets.animation`witchRight`, 200, true),\r\n    new animation.Animation(assets.animation`witchForward`, 200, true)\r\n]);\r\ntiles.placeOnTile(player2Sprite, tiles.getTileLocation(2, 7));\r\n//tiles.placeOnTile(player2Sprite, tiles.getTileLocation(10, 2));\r\nplayer2Sprite.onTurnEnd(function () {\r\n    isP1Turn = true;\r\n    player1Sprite.startTurn();\r\n});\r\nplayer2Sprite.onDeath(function () {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 1 Wins!\");\r\n    game.gameOverPlayerWin(1);\r\n})\r\n\r\ngame.onPaint(function() {\r\n    // draw HUD\r\n    screen.drawLine(0, 0, 160, 0, isP1Turn ? 4 : 9);\r\n    screen.fillRect(0, 1, 160, 22, isP1Turn ? 2 : 6);\r\n    screen.drawLine(0, 23, 160, 23, isP1Turn ? 14 : 8);\r\n\r\n    if (player1Sprite.storedTile)\r\n        screen.drawImage(player1Sprite.storedTile, 5, 5);\r\n    \r\n    if (player2Sprite.storedTile)\r\n        screen.drawImage(player2Sprite.storedTile, 141, 5);\r\n\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 2, 2);\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 138, 2);\r\n\r\n    screen.print(\"P\" + (isP1Turn ? \"1\" : \"2\") + \" Turn\", 60, 5, 1);\r\n});\r\n\r\nplayer1Sprite.startTurn();","README.md":" ","assets.json":"","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"level1\": {\n        \"id\": \"level1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAwYzAwMDkwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDIwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMjAwMDAyMDAyMDAwMDAwMDAyMDIyMjIyMjIyMjIyMg==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"sprites.dungeon.floorLight2\",\n            \"sprites.castle.tileGrass1\"\n        ],\n        \"displayName\": \"level1\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","images.g.jres":"{\n    \"image2\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"blankTile\"\n    },\n    \"image1\": {\n        \"data\": \"hwQUABQAAAAAu7u7u7u7u7sAAACwHREREREREdELAADb0bu7u7u7ux29AAAbvQAAAAAAANuxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbvQAAAAAAANuxAADb0bu7u7u7ux29AACwHREREREREdELAAAAu7u7u7u7u7sAAAA=\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"selectedItemFrame\"\n    },\n    \"image3\": {\n        \"data\": \"hwQOAA4AAAARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREA\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"hitboxPlaceholder\"\n    },\n    \"anim1\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim1\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmYyZmYyZmYwMDAwMDBmMGZmMjIyMmZmMGYwMDAwZmZlZmVlZWVmZWZmMDAwMGZmMmUyMjIyZTJmZTAwMDBlZmYyZmZmZjJmZmUwMDAwZmZmZmVlZWVmZmZmMDBmMGVmYmY0ZmY0ZmJmZTBmZjBlZTE0ZGZmZDQxZWUwZjAwZWZkZWRkZGRlZGZlMDAwMGYwZWU0NDQ0ZWUwZjAwMDA0ZTJmMjIyMmYyZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY1NDQ1ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDBmMGVmZjJmZmZmMmZmZTBmZjBmZmZmZWVlZWZmZmYwZjAwZWZiZjRmZjRmYmZlMDAwMGVmMTRkZmZkNDFmZTAwMDBmMDRlZGRkZGU0ZWYwMDAwZWYyZjIyZTJkZGU0MDAwMDRlMmYyMmUyZGQwZTAwMDAwMDRmNTRmNWVlMDAwMDAwMDBmZmZmZmYwZjAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDAwMGVmZjJmZmZmMmZmZTAwMDBmZmZmZWVlZWZmZmYwMGYwZWZiZjRmZjRmYmZlMGZmMGVlMTRkZmZkNDFlZTBmMDBlZmRlZGRkZGVkZmUwMDAwZjBlZTQ0NDRlZTBmMDAwMDRlMmYyMjIyZjJlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjU0NDVmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmMmZmMmZmMDAwMDAwZjBmZjIyMjJmZjBmMDAwMGZmZWZlZWVlZmVmZjAwMDBlZjJlMjIyMmUyZmYwMGYwZWZmMmZmZmYyZmZlMGZmMGZmZmZlZWVlZmZmZjBmMDBlZmJmNGZmNGZiZmUwMDAwZWYxNGRmZmQ0MWZlMDAwMGZlNGVkZGRkZTQwZjAwMDA0ZWRkMmUyMmYyZmUwMDAwZTBkZDJlMjJmMmU0MDAwMDAwZWU1ZjQ1ZjQwMDAwMDAwMGYwZmZmZmZmMDAwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkFront\"\n    },\n    \"anim2\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim2\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDBmZmZmZmYwMDAwMDAwMGYwZjJlZWVlZmYwMDAwMDAyZjIyZWZlZWZlMGYwMDAwZWZlZWZlZWZlZTBmMDBmMDJlMjJlMmZlZmYwZjAwZjBlMmZmZmYyMmUyMGYwMGYwZmZlZWZlZmZmZmZmMDBmMGVlNDRiZjRlZTRmZjAwMDBlZmRkMWZkNGU0ZmUwMDAwZjBkZGRkZTRlZTBmMDAwMGYwNGU0NGVlZmYwMDAwMDBmMDIyZTJkZDA0MDAwMDAwZjAyMmUyZGQwZTAwMDAwMGYwNTVmNGVlMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwMDAwMGZmMGYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZWRlZWVlMGYwMDAwZjA0ZWRlNGQwZjAwMDAwMGYwMjJkZWVkMGYwMDAwMDBmZjU1ZWZmZWZmMDAwMDAwZmZmZmZmZmZmZjAwMDAwMGYwZmYwMGYwMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZGRlNGVlMGYwMDAwZjA0ZTQ0ZWVmZjAwMDAwMGYwMjJlMmRkMDQwMDAwMDBmMDIyZTJkZDBlMDAwMDAwZjA1NWY0ZWUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmMGYyZWVlZWZmMDAwMDAwMmYyMmVmZWVmZTBmMDAwMGVmZWVmZWVmZWUwZjAwZjAyZTIyZTJmZWZmMGYwMGYwZTJmZmZmMjJlMjBmMDBmMGZmZWVmZWZmZmZmZjAwZjBlZTQ0YmY0ZWU0ZmYwMDAwZWZkZDFmZDRlNGZlMDAwMGYwZGRkZGU0ZWUwZjAwMDBmMDRlNDRkZTRkMDAwMDAwZjAyMjIyZGVlZDAwMDAwMGZmNTU0NGVmZmUwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjBmZjAwZjAwZjAwMDA=\",\n        \"displayName\": \"heroWalkLeft\"\n    },\n    \"anim3\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim3\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZmZlZWVlMmYwZjAwMDBmMGVmZWVmZTIyZjIwMDAwZjBlZWZlZWZlZWZlMDAwMGYwZmZlZjJlMjJlMjBmMDBmMDJlMjJmZmZmMmUwZjAwZmZmZmZmZWZlZWZmMGYwMGZmNGVlNGZiNDRlZTBmMDBlZjRlNGRmMWRkZmUwMDAwZjBlZTRlZGRkZDBmMDAwMDAwZmZlZTQ0ZTQwZjAwMDAwMDQwZGQyZTIyMGYwMDAwMDBlMGRkMmUyMjBmMDAwMDAwZjBlZTRmNTUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlZWVkZWRkMGYwMDAwMDBmMGQ0ZWRlNDBmMDAwMDAwZjBkZWVkMjIwZjAwMDAwMGZmZWZmZTU1ZmYwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjAwZjAwZmYwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlNGVkZGRkMGYwMDAwMDBmZmVlNDRlNDBmMDAwMDAwNDBkZDJlMjIwZjAwMDAwMGUwZGQyZTIyMGYwMDAwMDBmMGVlNGY1NTBmMDAwMDAwMDBmZmZmZmYwMDAwMDAwMDAwZjBmZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmYwMDAwMDAwMGZmZWVlZTJmMGYwMDAwZjBlZmVlZmUyMmYyMDAwMGYwZWVmZWVmZWVmZTAwMDBmMGZmZWYyZTIyZTIwZjAwZjAyZTIyZmZmZjJlMGYwMGZmZmZmZmVmZWVmZjBmMDBmZjRlZTRmYjQ0ZWUwZjAwZWY0ZTRkZjFkZGZlMDAwMGYwZWU0ZWRkZGQwZjAwMDAwMGQ0ZWQ0NGU0MGYwMDAwMDBkZWVkMjIyMjBmMDAwMDAwZWZmZTQ0NTVmZjAwMDAwMGZmZmZmZmZmZmYwMDAwMDBmMDBmMDBmZjBmMDA=\",\n        \"displayName\": \"heroWalkRight\"\n    },\n    \"anim4\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim4\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmZlZWVlZmYwMDAwMDBmMGVlZmVlZmVlMGYwMDAwZmZmZjJmZjJmZmZmMDAwMGZmMmUyZWUyZTJmZjAwMDBlZmYyZjIyZjJmZmUwMDAwZmYyZmUyMmVmMmZmMDBmMGVmMmZlZmZlZjJmZTBmZjBlZWZmZWVlZWVmZWUwZjAwZWZlZWVlZWVlZWZlMDAwMGYwZWVlZWVlZWUwZjAwMDA0ZWZmZmZmZmZmZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY0NDQ0ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmMGZmMmZmMmZmMGYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMmZmZjJmZTAwMDBmZjJmZWYyZWYyZmYwMDAwZWZmMmVmMmVlZmZlMDBmMGVmZmZlZWZlZWVmZTBmZjBlZmVlZWVlZWVlZmUwZjAwZjBlZWVlZWVlZTBmMDAwMGUwZmZmZmZmZmZlNDAwMDA0MDJmMjIyMmRlNGQwMDAwZTBmZmZmZmZlZTA0MDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmZmZmMmZmMmZmZmYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMjJmMmZmZTAwMDBmZjJmZTIyZWYyZmYwMGYwZWYyZmVmZmVmMmZlMGZmMGVlZmZlZWVlZWZlZTBmMDBlZmVlZWVlZWVlZmUwMDAwZjBlZWVlZWVlZTBmMDAwMDRlZmZmZmZmZmZlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjQ0NDRmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmZWVlZWZmMDAwMDAwZjBlZWZlZWZlZTBmMDAwMGYwZmYyZmYyZmYwZjAwMDBmZjJlMmVlMmUyZmYwMDAwZWYyZmZmMmYyZmZlMDAwMGZmMmZlMmZlZjJmZjAwMDBlZmZlZTJmZTJmZmUwMGYwZWZlZWVmZWVmZmZlMGZmMGVmZWVlZWVlZWVmZTBmMDBmMGVlZWVlZWVlMGYwMDAwNGVmZmZmZmZmZjBlMDAwMGQ0ZWQyMjIyZjIwNDAwMDA0MGVlZmZmZmZmMGUwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkBack\"\n    },\n    \"anim5\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim5\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwY2MwMDAwMDAwMDAwMDBiY2M1MDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmJmZWZmZWZiZmYwMDAwZmYxZmJmZmJmMWZmMDAwMGYwYmZiYmJiZmIwZjAwMDBlMGZlZWVlZWVmMGUwMDAwYmViY2I1NWJmYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward\"\n    },\n    \"anim6\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim6\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGNjMGMwMDAwMDAwMDAwMDA1Y2NiMDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGYwZmZmZmZmZmYwZjAwMDBlMGZlZmZmZmZmMGUwMDAwYmViZmI1NWJjYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZWJmZWZmYmZlYjAwMDBlMGJiYmU1YmY1ZWUwMDAwMDBlYzVlNTU1NTBmMDAwMDAwZjBmZmZmZmYwMDAwMDAwMDAwYzBjYzAwMDAwMDAwMDAwMGJjYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZmVmZmZmZWYwZTAwMDBiZWJjYjU1YmZiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMDAwNWMwYzAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmMGZmZmZmZmVlMGYwMDAwYmVmYmVlZWViZTBlMDAwMGVlNWZiNWViYmIwZTAwMDBmMDU1NTVlNWNlMDAwMDAwMDBmZmZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchBack\"\n    },\n    \"anim7\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim7\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDA1YzBjMDAwMDAwMDAwMGNjNTVjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGYwNTU1NTU1NTVmZjAwMDAwMGVmZWViZmVlZmYwMDAwMDBlZmJiMWZmYmZmMDAwMDAwYmZiYmJiZmIwZjAwMDAwMGYwZWVlZWVmMGUwMDAwMDBmMGI1ZWJiYjBlMDAwMDAwNWY1NWU1YmIwZTAwMDAwMGJjNTU1NWVlMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGNjYzUwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiZWJmZTBmMDAwMDAwZjBlZWJlZWIwZjAwMDAwMDVmYmJiZWViMDAwMDAwMDA1YzU1ZTVmZTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiYmJmYjBmMDAwMDAwZjBlZWVlZWYwZTAwMDAwMGYwYjVlYmJiMGUwMDAwMDA1ZjU1ZTViYjBlMDAwMDAwYmM1NTU1ZWUwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwY2NjNTAwMDAwMDAwMDBjYzU1YzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmMDU1NTU1NTU1ZmYwMDAwMDBlZmVlYmZlZWZmMDAwMDAwZWZiYjFmZmJmZjAwMDAwMGJmYmJiYmZiMGYwMDAwMDBmMGVlZWViZWViMDAwMDAwNWZiNWJiYmVlYjAwMDAwMDVjNTU1NWVlMGUwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchLeft\"\n    },\n    \"anim8\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim8\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDBjMGM1MDAwMDAwMDAwMGNjNWM1NWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTUwZjAwMDBmZmVlZmJlZWZlMDAwMDAwZmZiZmYxYmJmZTAwMDAwMGYwYmZiYmJiZmIwMDAwMDBlMGZlZWVlZTBmMDAwMDAwZTBiYmJlNWIwZjAwMDAwMGUwYmI1ZTU1ZjUwMDAwMDAwMGVlNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjY2MwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBlZmJlYmJmYjAwMDAwMGYwYmVlYmVlMGYwMDAwMDAwMGJlZWJiYmY1MDAwMDAwMDBlZjVlNTVjNTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBiZmJiYmJmYjAwMDAwMGUwZmVlZWVlMGYwMDAwMDBlMGJiYmU1YjBmMDAwMDAwZTBiYjVlNTVmNTAwMDAwMDAwZWU1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwNWNjYzAwMDAwMDAwMDBjYzVjNTVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1MGYwMDAwZmZlZWZiZWVmZTAwMDAwMGZmYmZmMWJiZmUwMDAwMDBmMGJmYmJiYmZiMDAwMDAwYmVlYmVlZWUwZjAwMDAwMGJlZWJiYjViZjUwMDAwMDBlMGVlNTU1NWM1MDAwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchRight\"\n    },\n    \"anim9\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim9\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDBjZmZhMDAwMDAwMDAwMGZmYWZmYWZmMDAwMDAwZmZmY2FhYWFmZmZmMDBmMGNjY2FhYWFhYWNjYzBmZjBhY2NhYWNjYWFjY2EwZjAwYWZhYWNjY2NhYWZhMDAwMGVmYWFhYWFhYWFmZTAwMDA0ZjllYmZmYmU5ZjQwMDAwNGYxNGQ4OGQ0MWY0MDAwMGYwZDRkZGRkNGQwZjAwMDBiMGZiYmJiYmJmMGIwMDAwZGJjZmNhYWNmY2JkMDAwMGJiYWZhYWFhZmFiYjAwMDAwMGNmYWFhYWZjMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward0\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}","images.g.ts":"","voidbattle.ts":"enum Direction {\n    Left = 0,\n    Up = 1,\n    Right = 2,\n    Down = 3\n}\n\nenum SpriteAction {\n    Idle,\n    Move,\n    Fall,\n    Die\n}\n\nnamespace SpriteKind {\n    export const Detector = SpriteKind.create();\n}\n\nnamespace animation {\n    const stateNamespace = \"__animation\";\n\n    interface AnimationState {\n        animations: SpriteAnimation[];\n    }\n\n    // this will tell the state machines that their animations are still active\n    export function updateActiveStateAnimations(): void {\n        let state: AnimationState = game.currentScene().data[stateNamespace];\n        if(state && state.animations) {\n            state.animations.forEach((anim: SpriteAnimation) => {\n                if (anim.sprite instanceof VoidBattle.VBSprite) {\n                    const vbs = anim.sprite as VoidBattle.VBSprite;\n                    if(vbs.sm)\n                        vbs.sm.animationActive = true;\n                }\n            });\n        }\n    }\n\n    export class Animation {\n        constructor(public frames: Image[], public frameInterval: number = 500, public loop: boolean = false){}\n        runAnimationOnSprite(sprite: Sprite) {\n            animation.runImageAnimation(sprite, this.frames, this.frameInterval, this.loop);\n        }\n    }\n\n    interface AnimationMap {\n        [key: number]: Animation[];\n    }\n\n    let stateMachines: AnimationStateMachine[];\n\n    // should allow you to change the sprite's animation based on its direction\n    // what should i put in here and what should just be part of VBSprite?\n    export class AnimationStateMachine {\n        dir: Direction = Direction.Down;\n        lastDir: Direction = Direction.Down;\n        sprite: VoidBattle.VBSprite;\n        lastAction: number;\n        animationActive: boolean = false;\n        stateAnimations: AnimationMap = {};\n\n        constructor(sprite: VoidBattle.VBSprite) {\n            this.sprite = sprite;\n            this.lastAction = sprite._action;\n            this._init();\n        }\n\n        _init() {\n            if (!stateMachines) {\n                stateMachines = [];\n                game.eventContext().registerFrameHandler(scene.ANIMATION_UPDATE_PRIORITY, () => {\n                    // see which animations are still active\n                    animation.updateActiveStateAnimations();\n\n                    // remove state machines of dead sprites\n                    stateMachines = stateMachines.filter((sm: AnimationStateMachine) => {\n                        if (sm.sprite.flags & sprites.Flag.Destroyed)\n                            return false;\n                        sm.update();\n                        return true;\n                    });\n                });\n            }\n            stateMachines.push(this);\n        }\n\n        update() {\n            // detect if the action has been changed\n            if(this.lastAction != this.sprite._action || this.lastDir != this.dir) {\n                this.lastAction = this.sprite._action;\n                this.lastDir = this.dir;\n                const anim = this.getAnimationFromState(this.lastAction)\n                if(anim)\n                    anim.runAnimationOnSprite(this.sprite);\n            }\n            this.animationActive = false;\n        }\n\n        setDirection(direction: Direction) {\n            this.dir = direction;\n        }\n\n        // You should really put these in the order [left, up, right, down]\n        setStateAnimations(state: number, animations: Animation[]) {\n            this.stateAnimations[state] = animations;\n        }\n\n        getAnimationFromState(state: number): Animation {\n            const anims: Animation[] = this.stateAnimations[state];\n            if (!anims || anims.length == 0)\n                return null;\n            \n            if (anims.length == 1 || this.dir < 0 || this.dir >= anims.length)\n                return anims[0];\n            \n            return anims[this.dir];\n\n        }\n        //constructor(frameInterval: number, )\n    }\n\n}\n\n\nnamespace VoidBattle {\n    let collisionSprite: Sprite\n    let detectionSetUp: boolean = false;\n\n    // does not work\n    export function getCollisionsAtLocation(location: tiles.Location): Sprite[] {\n        const s: Sprite = sprites.create(assets.image`hitboxPlaceholder`);\n        s.setFlag(SpriteFlag.Invisible, true);\n        tiles.placeOnTile(s, location);\n        \n        const overlaps = game.currentScene().physicsEngine.overlaps(s);\n        sprites.destroy(s);\n        return overlaps;\n    }\n\n    export function vbCollisionCheck(location: tiles.Location, callback: (overlaps: Sprite[]) => void) {\n        control.runInParallel(() => {\n            tiles.placeOnTile(collisionSprite, location);\n            pause(1);\n            const overlaps = game.currentScene().physicsEngine.overlaps(collisionSprite);\n            callback(overlaps);\n        });\n    }\n\n    export class SpriteDetector extends sprites.ExtendableSprite {\n        \n        overlappers: Sprite[] = [];\n        cb: (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => void;\n        isActive: boolean = true;\n        framesToWait: number = 2;\n\n        constructor(loc: tiles.Location, callback: (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => void) {\n            super(assets.image`hitboxPlaceholder`, SpriteKind.Detector);\n            this.setFlag(SpriteFlag.Invisible, true);\n            tiles.placeOnTile(this, loc);\n            this.cb = callback;\n        }\n\n        update(deltaTimeMillis: number) {\n            this.framesToWait --\n            if (this.framesToWait <= 0)\n                if (this.isActive && this.cb) {\n                    console.log(\"hi\");\n                    console.log(this.overlappers);\n                    const isOnWall: boolean = tiles.tileAtLocationIsWall(this.tilemapLocation());\n                    this.cb(this, this.overlappers, isOnWall);\n                }\n            this.overlappers = [];\n        }\n    }\n\n    const tileSize = 16;\n    export class VBSprite extends sprites.ExtendableSprite {\n        sm: animation.AnimationStateMachine;\n        dir: Direction = Direction.Down;\n        onDeathCallback: () => void;\n        canPush: boolean = false;\n        pushable: boolean = false;\n        hitboxWidth: number = 16;\n        hitboxHeight: number = 16;\n\n        constructor(spriteImage: Image, kind?: number, dir?: Direction) {\n            super(spriteImage, kind);\n            this.flags ^= SpriteFlag.GhostThroughWalls;\n            this.setDimensions(this.hitboxWidth, this.hitboxHeight);\n            //this._hitbox.ox = Fx8(-4);\n            //this._hitbox.oy = Fx8(-4);\n            this.sm = new animation.AnimationStateMachine(this);\n            this._action = SpriteAction.Idle;\n\n            if(!detectionSetUp) {\n                console.log(\"setting up detection!\");\n                sprites.onOverlap(SpriteKind.Detector, SpriteKind.Player, function (sprite: Sprite, otherSprite: Sprite) {\n                    console.log(\"hello\")\n                    if (sprite instanceof VoidBattle.SpriteDetector) {\n                        const sd = sprite as VoidBattle.SpriteDetector;\n                        sd.overlappers.push(otherSprite);\n                        console.log(sd.overlappers);\n                    }\n                });\n                detectionSetUp = true;\n            }\n\n            if (dir)\n                this.setDirection(dir);\n            else\n                this.setDirection(Direction.Down);\n            \n        }\n\n        // Accounts for the offset from the hitbox, which is wider so we can\n        // detect neighboring sprites\n        draw(drawLeft: number, drawTop: number) {\n            drawLeft += (this.hitboxWidth - this.image.width) >> 1;\n            drawTop += (this.hitboxHeight - this.image.height) >> 1;\n            super.draw(drawLeft, drawTop);\n        }\n\n        setPosition(x: number, y: number): void {\n            const physics = game.currentScene().physicsEngine;\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n            // call it a second time to correct a bug where sprites that ghost \n            // through walls are still pushed out\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n        }\n\n        update(deltaTimeMillis: number) {\n            if (this.tileKindAt(TileDirection.Center, assets.image`blankTile`)) {\n                sprites.destroy(this, effects.fire, 2000);\n                this.die();\n            }\n        }\n\n        die() {\n            if (this.onDeathCallback){\n                control.runInParallel(this.onDeathCallback);\n            } \n        }\n\n        onDeath(cb: () => void) {\n            this.onDeathCallback = cb;\n        }\n\n        setDirection(dir: Direction) {\n            this.dir = dir;\n            this.sm.setDirection(dir);\n        }\n\n        getNeighboringLocation(dir: Direction): tiles.Location {\n            const loc: tiles.Location = this.tilemapLocation();\n            let neighbor: tiles.Location;\n            switch (dir) {\n                case Direction.Left:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Left);\n                    break;\n                case Direction.Up:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Top);\n                    break;\n                case Direction.Right:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Right);\n                    break;\n                case Direction.Down:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Bottom);\n                    break;\n            }\n            return neighbor;\n        }\n        \n        // moves this sprite in a certain direction. Returns true if the move\n        // was successful\n        move(dir: Direction, turnToFaceDirection: boolean = false): boolean {\n            const neighbor = this.getNeighboringLocation(dir);\n            \n            if(turnToFaceDirection)\n                this.setDirection(dir);\n\n            if (tiles.tileAtLocationIsWall(neighbor)) {\n                scene.cameraShake(2, 200);\n                return false;\n            }\n        \n            //const overlaps: Sprite[] = getCollisionsAtLocation(neighbor);\n            const neighborSprite = this.getNeighboringSprite(neighbor);\n\n            if(neighborSprite)\n                return false;\n            \n            // gotta do it twice because there's a bug where it ignores the ghost \n            // through walls flag\n            //tiles.placeOnTile(this, neighbor);\n            tiles.placeOnTile(this, neighbor);\n            return true;\n            \n        }\n\n        getNeighboringSprite(loc: tiles.Location): Sprite {\n            const engine = game.currentScene().physicsEngine;\n            let neighbors: Sprite[];\n            // the overlaps function simply does not work :/ i hate this engine so much\n            /*\n            if(engine instanceof ArcadePhysicsEngine){\n                const ape = engine as ArcadePhysicsEngine;\n                neighbors = ape.map.neighbors(this)\n            }\n            */\n            let overlaps = game.currentScene().physicsEngine.overlaps(this);\n            for(let i = 0; i < overlaps.length; i++) {\n                const s = overlaps[i];\n                if (s.tilemapLocation().column == loc.column && s.tilemapLocation().row == loc.row)\n                    return s;\n            }\n            return null;\n        }\n\n    }\n\n    export class VBPlayerSprite extends VBSprite {\n        ctrl: controller.Controller;\n        isMyTurn: boolean = false;\n        // used when the player has already started an input but is waiting on some\n        // number of processes to complete before control can be restored or the turn\n        // can end\n        awaitingTurnCompletion: boolean = false;\n        turnEndCallback: () => void;\n        storedTile: Image;\n        // failsafe if there are shenanigans with the turns\n        controlsLocked: boolean = false;\n\n        constructor(spriteImage: Image, ctrl: controller.Controller, kind?: number, dir?: Direction){\n            super(spriteImage, kind, dir);\n            this.ctrl = ctrl;\n            this._setupButtonEvents();\n            this.canPush = true;\n            this.pushable = true;\n        }\n\n        _setupButtonEvents() {\n            // gotta do this for literally every event it seems. kill me\n            // maybe there's a better way, but if there is I haven't found one\n            this.ctrl.onButtonEvent(ControllerButton.Left, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Left, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Right, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Right, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Up, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Up, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Down, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Down, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.A, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.A, ControllerButtonEvent.Pressed);\n            });\n        }\n\n        startTurn() {\n            this.isMyTurn = true;\n        }\n\n        onTurnEnd(cb: () => void) {\n            this.turnEndCallback = cb;\n        }\n\n        endTurn() {\n            this.awaitingTurnCompletion = false;\n            this.isMyTurn = false;\n            if( this.turnEndCallback ) this.turnEndCallback();\n        }\n\n        handleButtonInput(button: ControllerButton, event: ControllerButtonEvent) {\n            if(this.awaitingTurnCompletion || this.controlsLocked || !this.isMyTurn) return;\n            \n            switch(button) {\n                case ControllerButton.Left:\n                    this.step(Direction.Left);\n                    break;\n                case ControllerButton.Up:\n                    this.step(Direction.Up);\n                    break;\n                case ControllerButton.Right:\n                    this.step(Direction.Right);\n                    break;\n                case ControllerButton.Down:\n                    this.step(Direction.Down);\n                    break;\n                case ControllerButton.A:\n                    this.tryPrimaryAction();\n                    break;\n            }\n            //if (moveCompleted) this.endTurn();\n        }\n\n        // step in a particular direction\n        // if there is an immovable obstacle, face it but do not move\n        step(dir: Direction) {\n            this.awaitingTurnCompletion = true;\n\n            this.setDirection(dir);\n            const neighbor = this.getNeighboringLocation(dir);\n\n            const detector = new SpriteDetector(neighbor, (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => {\n                if (isOnWall)\n                    scene.cameraShake(2, 200);\n                else if (overlappers && overlappers.length > 0) {}\n                else\n                    tiles.placeOnTile(this, neighbor);\n                \n                sprites.destroy(detector);//, effects.spray, 200);\n                this.awaitingTurnCompletion = false;\n                this.endTurn();\n            });\n        }\n\n        // attempts to interact using the A button. If the action fails, return false\n        tryPrimaryAction() {\n            const neighbor: tiles.Location = this.getNeighboringLocation(this.dir);\n            \n            if (tiles.tileAtLocationIsWall(neighbor))\n                return;\n            else if (tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && this.storedTile) {\n                tiles.setTileAt(neighbor, this.storedTile);\n                this.storedTile = null;\n                this.endTurn();\n            } else if (!tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && !this.storedTile) {\n                this.storedTile = tiles.getTileImage(neighbor);\n                tiles.setTileAt(neighbor, assets.image`blankTile`);\n                this.endTurn();\n            }\n        }\n    }\n}\n\n","tilespritemap.ts":"interface TileSpriteMap {\r\n    [key: string]: Sprite;   \r\n}\r\n\r\nfunction makeMapKey(column: number, row: number): string {\r\n    return column + \",\" + row;\r\n}\r\n\r\nclass VBMap {\r\n    spriteMap: TileSpriteMap;\r\n\r\n    placeOnTile(sprite: Sprite, column: number, row: number) {\r\n        \r\n        this.spriteMap[makeMapKey(column, row)] = sprite;\r\n        \r\n    }\r\n\r\n    moveFromTile(oldColumn: number, oldRow: number, newColumn: number, newRow: number) {\r\n        const oldKey = \r\n        if (spriteMap.)\r\n    }\r\n\r\n\r\n}","pxt.json":"{\n    \"name\": \"Void Battle\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\",\n        \"images.g.jres\",\n        \"images.g.ts\",\n        \"voidbattle.ts\",\n        \"tilespritemap.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}},{"timestamp":1761511881564,"editorVersion":"2.0.61","text":{"main.ts":"tiles.setCurrentTilemap(tilemap`level1`);\r\nscene.centerCameraAt(96, 68);\r\n//game.debug = true;\r\nlet isP1Turn: boolean = true;\r\n\r\nlet player1Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player1, SpriteKind.Player, Direction.Up);\r\nplayer1Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`heroWalkLeft`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkBack`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkRight`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkFront`, 200, true)\r\n]);\r\ntiles.placeOnTile(player1Sprite, tiles.getTileLocation(1, 7));\r\nplayer1Sprite.onTurnEnd(function() {\r\n    isP1Turn = false;\r\n    player2Sprite.startTurn();\r\n});\r\nplayer1Sprite.onDeath(function() {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 2 Wins!\");\r\n    game.gameOverPlayerWin(2);\r\n})\r\n\r\nlet player2Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player2, SpriteKind.Player, Direction.Down);\r\nplayer2Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`witchLeft`, 200, true),\r\n    new animation.Animation(assets.animation`witchBack`, 200, true),\r\n    new animation.Animation(assets.animation`witchRight`, 200, true),\r\n    new animation.Animation(assets.animation`witchForward`, 200, true)\r\n]);\r\ntiles.placeOnTile(player2Sprite, tiles.getTileLocation(2, 7));\r\n//tiles.placeOnTile(player2Sprite, tiles.getTileLocation(10, 2));\r\nplayer2Sprite.onTurnEnd(function () {\r\n    isP1Turn = true;\r\n    player1Sprite.startTurn();\r\n});\r\nplayer2Sprite.onDeath(function () {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 1 Wins!\");\r\n    game.gameOverPlayerWin(1);\r\n})\r\n\r\ngame.onPaint(function() {\r\n    // draw HUD\r\n    screen.drawLine(0, 0, 160, 0, isP1Turn ? 4 : 9);\r\n    screen.fillRect(0, 1, 160, 22, isP1Turn ? 2 : 6);\r\n    screen.drawLine(0, 23, 160, 23, isP1Turn ? 14 : 8);\r\n\r\n    if (player1Sprite.storedTile)\r\n        screen.drawImage(player1Sprite.storedTile, 5, 5);\r\n    \r\n    if (player2Sprite.storedTile)\r\n        screen.drawImage(player2Sprite.storedTile, 141, 5);\r\n\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 2, 2);\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 138, 2);\r\n\r\n    screen.print(\"P\" + (isP1Turn ? \"1\" : \"2\") + \" Turn\", 60, 5, 1);\r\n});\r\n\r\nplayer1Sprite.startTurn();","README.md":" ","assets.json":"","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"level1\": {\n        \"id\": \"level1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAwYzAwMDkwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDIwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMjAwMDAyMDAyMDAwMDAwMDAyMDIyMjIyMjIyMjIyMg==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"sprites.dungeon.floorLight2\",\n            \"sprites.castle.tileGrass1\"\n        ],\n        \"displayName\": \"level1\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","images.g.jres":"{\n    \"image2\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"blankTile\"\n    },\n    \"image1\": {\n        \"data\": \"hwQUABQAAAAAu7u7u7u7u7sAAACwHREREREREdELAADb0bu7u7u7ux29AAAbvQAAAAAAANuxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbvQAAAAAAANuxAADb0bu7u7u7ux29AACwHREREREREdELAAAAu7u7u7u7u7sAAAA=\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"selectedItemFrame\"\n    },\n    \"image3\": {\n        \"data\": \"hwQOAA4AAAARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREA\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"hitboxPlaceholder\"\n    },\n    \"anim1\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim1\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmYyZmYyZmYwMDAwMDBmMGZmMjIyMmZmMGYwMDAwZmZlZmVlZWVmZWZmMDAwMGZmMmUyMjIyZTJmZTAwMDBlZmYyZmZmZjJmZmUwMDAwZmZmZmVlZWVmZmZmMDBmMGVmYmY0ZmY0ZmJmZTBmZjBlZTE0ZGZmZDQxZWUwZjAwZWZkZWRkZGRlZGZlMDAwMGYwZWU0NDQ0ZWUwZjAwMDA0ZTJmMjIyMmYyZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY1NDQ1ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDBmMGVmZjJmZmZmMmZmZTBmZjBmZmZmZWVlZWZmZmYwZjAwZWZiZjRmZjRmYmZlMDAwMGVmMTRkZmZkNDFmZTAwMDBmMDRlZGRkZGU0ZWYwMDAwZWYyZjIyZTJkZGU0MDAwMDRlMmYyMmUyZGQwZTAwMDAwMDRmNTRmNWVlMDAwMDAwMDBmZmZmZmYwZjAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDAwMGVmZjJmZmZmMmZmZTAwMDBmZmZmZWVlZWZmZmYwMGYwZWZiZjRmZjRmYmZlMGZmMGVlMTRkZmZkNDFlZTBmMDBlZmRlZGRkZGVkZmUwMDAwZjBlZTQ0NDRlZTBmMDAwMDRlMmYyMjIyZjJlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjU0NDVmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmMmZmMmZmMDAwMDAwZjBmZjIyMjJmZjBmMDAwMGZmZWZlZWVlZmVmZjAwMDBlZjJlMjIyMmUyZmYwMGYwZWZmMmZmZmYyZmZlMGZmMGZmZmZlZWVlZmZmZjBmMDBlZmJmNGZmNGZiZmUwMDAwZWYxNGRmZmQ0MWZlMDAwMGZlNGVkZGRkZTQwZjAwMDA0ZWRkMmUyMmYyZmUwMDAwZTBkZDJlMjJmMmU0MDAwMDAwZWU1ZjQ1ZjQwMDAwMDAwMGYwZmZmZmZmMDAwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkFront\"\n    },\n    \"anim2\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim2\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDBmZmZmZmYwMDAwMDAwMGYwZjJlZWVlZmYwMDAwMDAyZjIyZWZlZWZlMGYwMDAwZWZlZWZlZWZlZTBmMDBmMDJlMjJlMmZlZmYwZjAwZjBlMmZmZmYyMmUyMGYwMGYwZmZlZWZlZmZmZmZmMDBmMGVlNDRiZjRlZTRmZjAwMDBlZmRkMWZkNGU0ZmUwMDAwZjBkZGRkZTRlZTBmMDAwMGYwNGU0NGVlZmYwMDAwMDBmMDIyZTJkZDA0MDAwMDAwZjAyMmUyZGQwZTAwMDAwMGYwNTVmNGVlMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwMDAwMGZmMGYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZWRlZWVlMGYwMDAwZjA0ZWRlNGQwZjAwMDAwMGYwMjJkZWVkMGYwMDAwMDBmZjU1ZWZmZWZmMDAwMDAwZmZmZmZmZmZmZjAwMDAwMGYwZmYwMGYwMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZGRlNGVlMGYwMDAwZjA0ZTQ0ZWVmZjAwMDAwMGYwMjJlMmRkMDQwMDAwMDBmMDIyZTJkZDBlMDAwMDAwZjA1NWY0ZWUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmMGYyZWVlZWZmMDAwMDAwMmYyMmVmZWVmZTBmMDAwMGVmZWVmZWVmZWUwZjAwZjAyZTIyZTJmZWZmMGYwMGYwZTJmZmZmMjJlMjBmMDBmMGZmZWVmZWZmZmZmZjAwZjBlZTQ0YmY0ZWU0ZmYwMDAwZWZkZDFmZDRlNGZlMDAwMGYwZGRkZGU0ZWUwZjAwMDBmMDRlNDRkZTRkMDAwMDAwZjAyMjIyZGVlZDAwMDAwMGZmNTU0NGVmZmUwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjBmZjAwZjAwZjAwMDA=\",\n        \"displayName\": \"heroWalkLeft\"\n    },\n    \"anim3\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim3\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZmZlZWVlMmYwZjAwMDBmMGVmZWVmZTIyZjIwMDAwZjBlZWZlZWZlZWZlMDAwMGYwZmZlZjJlMjJlMjBmMDBmMDJlMjJmZmZmMmUwZjAwZmZmZmZmZWZlZWZmMGYwMGZmNGVlNGZiNDRlZTBmMDBlZjRlNGRmMWRkZmUwMDAwZjBlZTRlZGRkZDBmMDAwMDAwZmZlZTQ0ZTQwZjAwMDAwMDQwZGQyZTIyMGYwMDAwMDBlMGRkMmUyMjBmMDAwMDAwZjBlZTRmNTUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlZWVkZWRkMGYwMDAwMDBmMGQ0ZWRlNDBmMDAwMDAwZjBkZWVkMjIwZjAwMDAwMGZmZWZmZTU1ZmYwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjAwZjAwZmYwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlNGVkZGRkMGYwMDAwMDBmZmVlNDRlNDBmMDAwMDAwNDBkZDJlMjIwZjAwMDAwMGUwZGQyZTIyMGYwMDAwMDBmMGVlNGY1NTBmMDAwMDAwMDBmZmZmZmYwMDAwMDAwMDAwZjBmZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmYwMDAwMDAwMGZmZWVlZTJmMGYwMDAwZjBlZmVlZmUyMmYyMDAwMGYwZWVmZWVmZWVmZTAwMDBmMGZmZWYyZTIyZTIwZjAwZjAyZTIyZmZmZjJlMGYwMGZmZmZmZmVmZWVmZjBmMDBmZjRlZTRmYjQ0ZWUwZjAwZWY0ZTRkZjFkZGZlMDAwMGYwZWU0ZWRkZGQwZjAwMDAwMGQ0ZWQ0NGU0MGYwMDAwMDBkZWVkMjIyMjBmMDAwMDAwZWZmZTQ0NTVmZjAwMDAwMGZmZmZmZmZmZmYwMDAwMDBmMDBmMDBmZjBmMDA=\",\n        \"displayName\": \"heroWalkRight\"\n    },\n    \"anim4\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim4\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmZlZWVlZmYwMDAwMDBmMGVlZmVlZmVlMGYwMDAwZmZmZjJmZjJmZmZmMDAwMGZmMmUyZWUyZTJmZjAwMDBlZmYyZjIyZjJmZmUwMDAwZmYyZmUyMmVmMmZmMDBmMGVmMmZlZmZlZjJmZTBmZjBlZWZmZWVlZWVmZWUwZjAwZWZlZWVlZWVlZWZlMDAwMGYwZWVlZWVlZWUwZjAwMDA0ZWZmZmZmZmZmZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY0NDQ0ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmMGZmMmZmMmZmMGYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMmZmZjJmZTAwMDBmZjJmZWYyZWYyZmYwMDAwZWZmMmVmMmVlZmZlMDBmMGVmZmZlZWZlZWVmZTBmZjBlZmVlZWVlZWVlZmUwZjAwZjBlZWVlZWVlZTBmMDAwMGUwZmZmZmZmZmZlNDAwMDA0MDJmMjIyMmRlNGQwMDAwZTBmZmZmZmZlZTA0MDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmZmZmMmZmMmZmZmYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMjJmMmZmZTAwMDBmZjJmZTIyZWYyZmYwMGYwZWYyZmVmZmVmMmZlMGZmMGVlZmZlZWVlZWZlZTBmMDBlZmVlZWVlZWVlZmUwMDAwZjBlZWVlZWVlZTBmMDAwMDRlZmZmZmZmZmZlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjQ0NDRmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmZWVlZWZmMDAwMDAwZjBlZWZlZWZlZTBmMDAwMGYwZmYyZmYyZmYwZjAwMDBmZjJlMmVlMmUyZmYwMDAwZWYyZmZmMmYyZmZlMDAwMGZmMmZlMmZlZjJmZjAwMDBlZmZlZTJmZTJmZmUwMGYwZWZlZWVmZWVmZmZlMGZmMGVmZWVlZWVlZWVmZTBmMDBmMGVlZWVlZWVlMGYwMDAwNGVmZmZmZmZmZjBlMDAwMGQ0ZWQyMjIyZjIwNDAwMDA0MGVlZmZmZmZmMGUwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkBack\"\n    },\n    \"anim5\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim5\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwY2MwMDAwMDAwMDAwMDBiY2M1MDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmJmZWZmZWZiZmYwMDAwZmYxZmJmZmJmMWZmMDAwMGYwYmZiYmJiZmIwZjAwMDBlMGZlZWVlZWVmMGUwMDAwYmViY2I1NWJmYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward\"\n    },\n    \"anim6\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim6\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGNjMGMwMDAwMDAwMDAwMDA1Y2NiMDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGYwZmZmZmZmZmYwZjAwMDBlMGZlZmZmZmZmMGUwMDAwYmViZmI1NWJjYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZWJmZWZmYmZlYjAwMDBlMGJiYmU1YmY1ZWUwMDAwMDBlYzVlNTU1NTBmMDAwMDAwZjBmZmZmZmYwMDAwMDAwMDAwYzBjYzAwMDAwMDAwMDAwMGJjYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZmVmZmZmZWYwZTAwMDBiZWJjYjU1YmZiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMDAwNWMwYzAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmMGZmZmZmZmVlMGYwMDAwYmVmYmVlZWViZTBlMDAwMGVlNWZiNWViYmIwZTAwMDBmMDU1NTVlNWNlMDAwMDAwMDBmZmZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchBack\"\n    },\n    \"anim7\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim7\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDA1YzBjMDAwMDAwMDAwMGNjNTVjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGYwNTU1NTU1NTVmZjAwMDAwMGVmZWViZmVlZmYwMDAwMDBlZmJiMWZmYmZmMDAwMDAwYmZiYmJiZmIwZjAwMDAwMGYwZWVlZWVmMGUwMDAwMDBmMGI1ZWJiYjBlMDAwMDAwNWY1NWU1YmIwZTAwMDAwMGJjNTU1NWVlMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGNjYzUwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiZWJmZTBmMDAwMDAwZjBlZWJlZWIwZjAwMDAwMDVmYmJiZWViMDAwMDAwMDA1YzU1ZTVmZTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiYmJmYjBmMDAwMDAwZjBlZWVlZWYwZTAwMDAwMGYwYjVlYmJiMGUwMDAwMDA1ZjU1ZTViYjBlMDAwMDAwYmM1NTU1ZWUwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwY2NjNTAwMDAwMDAwMDBjYzU1YzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmMDU1NTU1NTU1ZmYwMDAwMDBlZmVlYmZlZWZmMDAwMDAwZWZiYjFmZmJmZjAwMDAwMGJmYmJiYmZiMGYwMDAwMDBmMGVlZWViZWViMDAwMDAwNWZiNWJiYmVlYjAwMDAwMDVjNTU1NWVlMGUwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchLeft\"\n    },\n    \"anim8\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim8\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDBjMGM1MDAwMDAwMDAwMGNjNWM1NWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTUwZjAwMDBmZmVlZmJlZWZlMDAwMDAwZmZiZmYxYmJmZTAwMDAwMGYwYmZiYmJiZmIwMDAwMDBlMGZlZWVlZTBmMDAwMDAwZTBiYmJlNWIwZjAwMDAwMGUwYmI1ZTU1ZjUwMDAwMDAwMGVlNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjY2MwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBlZmJlYmJmYjAwMDAwMGYwYmVlYmVlMGYwMDAwMDAwMGJlZWJiYmY1MDAwMDAwMDBlZjVlNTVjNTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBiZmJiYmJmYjAwMDAwMGUwZmVlZWVlMGYwMDAwMDBlMGJiYmU1YjBmMDAwMDAwZTBiYjVlNTVmNTAwMDAwMDAwZWU1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwNWNjYzAwMDAwMDAwMDBjYzVjNTVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1MGYwMDAwZmZlZWZiZWVmZTAwMDAwMGZmYmZmMWJiZmUwMDAwMDBmMGJmYmJiYmZiMDAwMDAwYmVlYmVlZWUwZjAwMDAwMGJlZWJiYjViZjUwMDAwMDBlMGVlNTU1NWM1MDAwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchRight\"\n    },\n    \"anim9\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim9\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDBjZmZhMDAwMDAwMDAwMGZmYWZmYWZmMDAwMDAwZmZmY2FhYWFmZmZmMDBmMGNjY2FhYWFhYWNjYzBmZjBhY2NhYWNjYWFjY2EwZjAwYWZhYWNjY2NhYWZhMDAwMGVmYWFhYWFhYWFmZTAwMDA0ZjllYmZmYmU5ZjQwMDAwNGYxNGQ4OGQ0MWY0MDAwMGYwZDRkZGRkNGQwZjAwMDBiMGZiYmJiYmJmMGIwMDAwZGJjZmNhYWNmY2JkMDAwMGJiYWZhYWFhZmFiYjAwMDAwMGNmYWFhYWZjMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward0\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}","images.g.ts":"","voidbattle.ts":"enum Direction {\n    Left = 0,\n    Up = 1,\n    Right = 2,\n    Down = 3\n}\n\nenum SpriteAction {\n    Idle,\n    Move,\n    Fall,\n    Die\n}\n\nnamespace SpriteKind {\n    export const Detector = SpriteKind.create();\n}\n\nnamespace animation {\n    const stateNamespace = \"__animation\";\n\n    interface AnimationState {\n        animations: SpriteAnimation[];\n    }\n\n    // this will tell the state machines that their animations are still active\n    export function updateActiveStateAnimations(): void {\n        let state: AnimationState = game.currentScene().data[stateNamespace];\n        if(state && state.animations) {\n            state.animations.forEach((anim: SpriteAnimation) => {\n                if (anim.sprite instanceof VoidBattle.VBSprite) {\n                    const vbs = anim.sprite as VoidBattle.VBSprite;\n                    if(vbs.sm)\n                        vbs.sm.animationActive = true;\n                }\n            });\n        }\n    }\n\n    export class Animation {\n        constructor(public frames: Image[], public frameInterval: number = 500, public loop: boolean = false){}\n        runAnimationOnSprite(sprite: Sprite) {\n            animation.runImageAnimation(sprite, this.frames, this.frameInterval, this.loop);\n        }\n    }\n\n    interface AnimationMap {\n        [key: number]: Animation[];\n    }\n\n    let stateMachines: AnimationStateMachine[];\n\n    // should allow you to change the sprite's animation based on its direction\n    // what should i put in here and what should just be part of VBSprite?\n    export class AnimationStateMachine {\n        dir: Direction = Direction.Down;\n        lastDir: Direction = Direction.Down;\n        sprite: VoidBattle.VBSprite;\n        lastAction: number;\n        animationActive: boolean = false;\n        stateAnimations: AnimationMap = {};\n\n        constructor(sprite: VoidBattle.VBSprite) {\n            this.sprite = sprite;\n            this.lastAction = sprite._action;\n            this._init();\n        }\n\n        _init() {\n            if (!stateMachines) {\n                stateMachines = [];\n                game.eventContext().registerFrameHandler(scene.ANIMATION_UPDATE_PRIORITY, () => {\n                    // see which animations are still active\n                    animation.updateActiveStateAnimations();\n\n                    // remove state machines of dead sprites\n                    stateMachines = stateMachines.filter((sm: AnimationStateMachine) => {\n                        if (sm.sprite.flags & sprites.Flag.Destroyed)\n                            return false;\n                        sm.update();\n                        return true;\n                    });\n                });\n            }\n            stateMachines.push(this);\n        }\n\n        update() {\n            // detect if the action has been changed\n            if(this.lastAction != this.sprite._action || this.lastDir != this.dir) {\n                this.lastAction = this.sprite._action;\n                this.lastDir = this.dir;\n                const anim = this.getAnimationFromState(this.lastAction)\n                if(anim)\n                    anim.runAnimationOnSprite(this.sprite);\n            }\n            this.animationActive = false;\n        }\n\n        setDirection(direction: Direction) {\n            this.dir = direction;\n        }\n\n        // You should really put these in the order [left, up, right, down]\n        setStateAnimations(state: number, animations: Animation[]) {\n            this.stateAnimations[state] = animations;\n        }\n\n        getAnimationFromState(state: number): Animation {\n            const anims: Animation[] = this.stateAnimations[state];\n            if (!anims || anims.length == 0)\n                return null;\n            \n            if (anims.length == 1 || this.dir < 0 || this.dir >= anims.length)\n                return anims[0];\n            \n            return anims[this.dir];\n\n        }\n        //constructor(frameInterval: number, )\n    }\n\n}\n\n\nnamespace VoidBattle {\n    let collisionSprite: Sprite\n    let detectionSetUp: boolean = false;\n\n    // does not work\n    export function getCollisionsAtLocation(location: tiles.Location): Sprite[] {\n        const s: Sprite = sprites.create(assets.image`hitboxPlaceholder`);\n        s.setFlag(SpriteFlag.Invisible, true);\n        tiles.placeOnTile(s, location);\n        \n        const overlaps = game.currentScene().physicsEngine.overlaps(s);\n        sprites.destroy(s);\n        return overlaps;\n    }\n\n    export function vbCollisionCheck(location: tiles.Location, callback: (overlaps: Sprite[]) => void) {\n        control.runInParallel(() => {\n            tiles.placeOnTile(collisionSprite, location);\n            pause(1);\n            const overlaps = game.currentScene().physicsEngine.overlaps(collisionSprite);\n            callback(overlaps);\n        });\n    }\n\n    export class SpriteDetector extends sprites.ExtendableSprite {\n        \n        overlappers: Sprite[] = [];\n        cb: (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => void;\n        isActive: boolean = true;\n        framesToWait: number = 2;\n\n        constructor(loc: tiles.Location, callback: (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => void) {\n            super(assets.image`hitboxPlaceholder`, SpriteKind.Detector);\n            this.setFlag(SpriteFlag.Invisible, true);\n            tiles.placeOnTile(this, loc);\n            this.cb = callback;\n        }\n\n        update(deltaTimeMillis: number) {\n            this.framesToWait --\n            if (this.framesToWait <= 0)\n                if (this.isActive && this.cb) {\n                    console.log(\"hi\");\n                    console.log(this.overlappers);\n                    const isOnWall: boolean = tiles.tileAtLocationIsWall(this.tilemapLocation());\n                    this.cb(this, this.overlappers, isOnWall);\n                }\n            this.overlappers = [];\n        }\n    }\n\n    const tileSize = 16;\n    export class VBSprite extends sprites.ExtendableSprite {\n        sm: animation.AnimationStateMachine;\n        dir: Direction = Direction.Down;\n        onDeathCallback: () => void;\n        canPush: boolean = false;\n        pushable: boolean = false;\n        hitboxWidth: number = 16;\n        hitboxHeight: number = 16;\n\n        constructor(spriteImage: Image, kind?: number, dir?: Direction) {\n            super(spriteImage, kind);\n            this.flags ^= SpriteFlag.GhostThroughWalls;\n            this.setDimensions(this.hitboxWidth, this.hitboxHeight);\n            //this._hitbox.ox = Fx8(-4);\n            //this._hitbox.oy = Fx8(-4);\n            this.sm = new animation.AnimationStateMachine(this);\n            this._action = SpriteAction.Idle;\n\n            if(!detectionSetUp) {\n                console.log(\"setting up detection!\");\n                sprites.onOverlap(SpriteKind.Detector, SpriteKind.Player, function (sprite: Sprite, otherSprite: Sprite) {\n                    console.log(\"hello\")\n                    if (sprite instanceof VoidBattle.SpriteDetector) {\n                        const sd = sprite as VoidBattle.SpriteDetector;\n                        sd.overlappers.push(otherSprite);\n                        console.log(sd.overlappers);\n                    }\n                });\n                detectionSetUp = true;\n            }\n\n            if (dir)\n                this.setDirection(dir);\n            else\n                this.setDirection(Direction.Down);\n            \n        }\n\n        // Accounts for the offset from the hitbox, which is wider so we can\n        // detect neighboring sprites\n        draw(drawLeft: number, drawTop: number) {\n            drawLeft += (this.hitboxWidth - this.image.width) >> 1;\n            drawTop += (this.hitboxHeight - this.image.height) >> 1;\n            super.draw(drawLeft, drawTop);\n        }\n\n        setPosition(x: number, y: number): void {\n            const physics = game.currentScene().physicsEngine;\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n            // call it a second time to correct a bug where sprites that ghost \n            // through walls are still pushed out\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n        }\n\n        update(deltaTimeMillis: number) {\n            if (this.tileKindAt(TileDirection.Center, assets.image`blankTile`)) {\n                sprites.destroy(this, effects.fire, 2000);\n                this.die();\n            }\n        }\n\n        die() {\n            if (this.onDeathCallback){\n                control.runInParallel(this.onDeathCallback);\n            } \n        }\n\n        onDeath(cb: () => void) {\n            this.onDeathCallback = cb;\n        }\n\n        setDirection(dir: Direction) {\n            this.dir = dir;\n            this.sm.setDirection(dir);\n        }\n\n        getNeighboringLocation(dir: Direction): tiles.Location {\n            const loc: tiles.Location = this.tilemapLocation();\n            let neighbor: tiles.Location;\n            switch (dir) {\n                case Direction.Left:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Left);\n                    break;\n                case Direction.Up:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Top);\n                    break;\n                case Direction.Right:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Right);\n                    break;\n                case Direction.Down:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Bottom);\n                    break;\n            }\n            return neighbor;\n        }\n        \n        // moves this sprite in a certain direction. Returns true if the move\n        // was successful\n        move(dir: Direction, turnToFaceDirection: boolean = false): boolean {\n            const neighbor = this.getNeighboringLocation(dir);\n            \n            if(turnToFaceDirection)\n                this.setDirection(dir);\n\n            if (tiles.tileAtLocationIsWall(neighbor)) {\n                scene.cameraShake(2, 200);\n                return false;\n            }\n        \n            //const overlaps: Sprite[] = getCollisionsAtLocation(neighbor);\n            const neighborSprite = this.getNeighboringSprite(neighbor);\n\n            if(neighborSprite)\n                return false;\n            \n            // gotta do it twice because there's a bug where it ignores the ghost \n            // through walls flag\n            //tiles.placeOnTile(this, neighbor);\n            tiles.placeOnTile(this, neighbor);\n            return true;\n            \n        }\n\n        getNeighboringSprite(loc: tiles.Location): Sprite {\n            const engine = game.currentScene().physicsEngine;\n            let neighbors: Sprite[];\n            // the overlaps function simply does not work :/ i hate this engine so much\n            /*\n            if(engine instanceof ArcadePhysicsEngine){\n                const ape = engine as ArcadePhysicsEngine;\n                neighbors = ape.map.neighbors(this)\n            }\n            */\n            let overlaps = game.currentScene().physicsEngine.overlaps(this);\n            for(let i = 0; i < overlaps.length; i++) {\n                const s = overlaps[i];\n                if (s.tilemapLocation().column == loc.column && s.tilemapLocation().row == loc.row)\n                    return s;\n            }\n            return null;\n        }\n\n    }\n\n    export class VBPlayerSprite extends VBSprite {\n        ctrl: controller.Controller;\n        isMyTurn: boolean = false;\n        // used when the player has already started an input but is waiting on some\n        // number of processes to complete before control can be restored or the turn\n        // can end\n        awaitingTurnCompletion: boolean = false;\n        turnEndCallback: () => void;\n        storedTile: Image;\n        // failsafe if there are shenanigans with the turns\n        controlsLocked: boolean = false;\n\n        constructor(spriteImage: Image, ctrl: controller.Controller, kind?: number, dir?: Direction){\n            super(spriteImage, kind, dir);\n            this.ctrl = ctrl;\n            this._setupButtonEvents();\n            this.canPush = true;\n            this.pushable = true;\n        }\n\n        _setupButtonEvents() {\n            // gotta do this for literally every event it seems. kill me\n            // maybe there's a better way, but if there is I haven't found one\n            this.ctrl.onButtonEvent(ControllerButton.Left, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Left, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Right, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Right, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Up, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Up, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Down, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Down, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.A, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.A, ControllerButtonEvent.Pressed);\n            });\n        }\n\n        startTurn() {\n            this.isMyTurn = true;\n        }\n\n        onTurnEnd(cb: () => void) {\n            this.turnEndCallback = cb;\n        }\n\n        endTurn() {\n            this.awaitingTurnCompletion = false;\n            this.isMyTurn = false;\n            if( this.turnEndCallback ) this.turnEndCallback();\n        }\n\n        handleButtonInput(button: ControllerButton, event: ControllerButtonEvent) {\n            if(this.awaitingTurnCompletion || this.controlsLocked || !this.isMyTurn) return;\n            \n            switch(button) {\n                case ControllerButton.Left:\n                    this.step(Direction.Left);\n                    break;\n                case ControllerButton.Up:\n                    this.step(Direction.Up);\n                    break;\n                case ControllerButton.Right:\n                    this.step(Direction.Right);\n                    break;\n                case ControllerButton.Down:\n                    this.step(Direction.Down);\n                    break;\n                case ControllerButton.A:\n                    this.tryPrimaryAction();\n                    break;\n            }\n            //if (moveCompleted) this.endTurn();\n        }\n\n        // step in a particular direction\n        // if there is an immovable obstacle, face it but do not move\n        step(dir: Direction) {\n            this.awaitingTurnCompletion = true;\n\n            this.setDirection(dir);\n            const neighbor = this.getNeighboringLocation(dir);\n\n            const detector = new SpriteDetector(neighbor, (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => {\n                if (isOnWall)\n                    scene.cameraShake(2, 200);\n                else if (overlappers && overlappers.length > 0) {}\n                else\n                    tiles.placeOnTile(this, neighbor);\n                \n                sprites.destroy(detector);//, effects.spray, 200);\n                this.awaitingTurnCompletion = false;\n                this.endTurn();\n            });\n        }\n\n        // attempts to interact using the A button. If the action fails, return false\n        tryPrimaryAction() {\n            const neighbor: tiles.Location = this.getNeighboringLocation(this.dir);\n            \n            if (tiles.tileAtLocationIsWall(neighbor))\n                return;\n            else if (tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && this.storedTile) {\n                tiles.setTileAt(neighbor, this.storedTile);\n                this.storedTile = null;\n                this.endTurn();\n            } else if (!tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && !this.storedTile) {\n                this.storedTile = tiles.getTileImage(neighbor);\n                tiles.setTileAt(neighbor, assets.image`blankTile`);\n                this.endTurn();\n            }\n        }\n    }\n}\n\n","tilespritemap.ts":"namespace vb {\r\n    export class Location {\r\n        constructor(public column: number, public row: number) { }\r\n\r\n        key() {\r\n            return makeMapKey(this);\r\n        }\r\n    }\r\n\r\n    interface TileSpriteMap {\r\n        [key: string]: Sprite;\r\n    }\r\n\r\n    export function makeMapKey(location: Location): string {\r\n        return location.column + \",\" + location.row;\r\n    }\r\n\r\n    export class VBMap {\r\n        spriteMap: TileSpriteMap;\r\n        \r\n\r\n        placeOnTile(sprite: Sprite, location: Location) {\r\n            this.spriteMap[location.key()] = sprite;\r\n        }\r\n\r\n        removeFromTile(location: Location) {\r\n            const oldKey = location.key();\r\n            if (this.spriteMap[oldKey] === undefined)\r\n                return;\r\n            delete this.spriteMap[oldKey];\r\n        }\r\n\r\n        moveFromTile(oldLocation: Location, newLocation: Location) {\r\n            const oldKey = oldLocation.key();\r\n            const newKey = newLocation.key();\r\n            if (this.spriteMap[oldKey] === undefined) {\r\n                // error: there's no sprite at this tile!\r\n                return;\r\n            }\r\n\r\n            if (this.spriteMap[newKey] !== undefined) {\r\n                // error: there's already a sprite at this tile!\r\n                return;\r\n            }\r\n\r\n            this.spriteMap[newKey] = this.spriteMap[oldKey];\r\n            this.removeFromTile(oldLocation);\r\n        }\r\n\r\n        isTileOccupied(location: Location): boolean {\r\n            const key = location.key();\r\n            return this.spriteMap[key] !== undefined;\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","pxt.json":"{\n    \"name\": \"Void Battle\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\",\n        \"images.g.jres\",\n        \"images.g.ts\",\n        \"voidbattle.ts\",\n        \"tilespritemap.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}},{"timestamp":1761513698986,"editorVersion":"2.0.61","text":{"main.ts":"tiles.setCurrentTilemap(tilemap`level1`);\r\nscene.centerCameraAt(96, 68);\r\n//game.debug = true;\r\nlet isP1Turn: boolean = true;\r\n\r\nlet player1Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player1, SpriteKind.Player, Direction.Up);\r\nplayer1Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`heroWalkLeft`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkBack`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkRight`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkFront`, 200, true)\r\n]);\r\ntiles.placeOnTile(player1Sprite, tiles.getTileLocation(1, 7));\r\nplayer1Sprite.onTurnEnd(function() {\r\n    isP1Turn = false;\r\n    player2Sprite.startTurn();\r\n});\r\nplayer1Sprite.onDeath(function() {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 2 Wins!\");\r\n    game.gameOverPlayerWin(2);\r\n})\r\n\r\nlet player2Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player2, SpriteKind.Player, Direction.Down);\r\nplayer2Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`witchLeft`, 200, true),\r\n    new animation.Animation(assets.animation`witchBack`, 200, true),\r\n    new animation.Animation(assets.animation`witchRight`, 200, true),\r\n    new animation.Animation(assets.animation`witchForward`, 200, true)\r\n]);\r\ntiles.placeOnTile(player2Sprite, tiles.getTileLocation(2, 7));\r\n//tiles.placeOnTile(player2Sprite, tiles.getTileLocation(10, 2));\r\nplayer2Sprite.onTurnEnd(function () {\r\n    isP1Turn = true;\r\n    player1Sprite.startTurn();\r\n});\r\nplayer2Sprite.onDeath(function () {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 1 Wins!\");\r\n    game.gameOverPlayerWin(1);\r\n})\r\n\r\ngame.onPaint(function() {\r\n    // draw HUD\r\n    screen.drawLine(0, 0, 160, 0, isP1Turn ? 4 : 9);\r\n    screen.fillRect(0, 1, 160, 22, isP1Turn ? 2 : 6);\r\n    screen.drawLine(0, 23, 160, 23, isP1Turn ? 14 : 8);\r\n\r\n    if (player1Sprite.storedTile)\r\n        screen.drawImage(player1Sprite.storedTile, 5, 5);\r\n    \r\n    if (player2Sprite.storedTile)\r\n        screen.drawImage(player2Sprite.storedTile, 141, 5);\r\n\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 2, 2);\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 138, 2);\r\n\r\n    screen.print(\"P\" + (isP1Turn ? \"1\" : \"2\") + \" Turn\", 60, 5, 1);\r\n});\r\n\r\nplayer1Sprite.startTurn();","README.md":" ","assets.json":"","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"level1\": {\n        \"id\": \"level1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAwYzAwMDkwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDIwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMjAwMDAyMDAyMDAwMDAwMDAyMDIyMjIyMjIyMjIyMg==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"sprites.dungeon.floorLight2\",\n            \"sprites.castle.tileGrass1\"\n        ],\n        \"displayName\": \"level1\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","images.g.jres":"{\n    \"image2\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"blankTile\"\n    },\n    \"image1\": {\n        \"data\": \"hwQUABQAAAAAu7u7u7u7u7sAAACwHREREREREdELAADb0bu7u7u7ux29AAAbvQAAAAAAANuxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbvQAAAAAAANuxAADb0bu7u7u7ux29AACwHREREREREdELAAAAu7u7u7u7u7sAAAA=\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"selectedItemFrame\"\n    },\n    \"image3\": {\n        \"data\": \"hwQOAA4AAAARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREA\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"hitboxPlaceholder\"\n    },\n    \"anim1\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim1\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmYyZmYyZmYwMDAwMDBmMGZmMjIyMmZmMGYwMDAwZmZlZmVlZWVmZWZmMDAwMGZmMmUyMjIyZTJmZTAwMDBlZmYyZmZmZjJmZmUwMDAwZmZmZmVlZWVmZmZmMDBmMGVmYmY0ZmY0ZmJmZTBmZjBlZTE0ZGZmZDQxZWUwZjAwZWZkZWRkZGRlZGZlMDAwMGYwZWU0NDQ0ZWUwZjAwMDA0ZTJmMjIyMmYyZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY1NDQ1ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDBmMGVmZjJmZmZmMmZmZTBmZjBmZmZmZWVlZWZmZmYwZjAwZWZiZjRmZjRmYmZlMDAwMGVmMTRkZmZkNDFmZTAwMDBmMDRlZGRkZGU0ZWYwMDAwZWYyZjIyZTJkZGU0MDAwMDRlMmYyMmUyZGQwZTAwMDAwMDRmNTRmNWVlMDAwMDAwMDBmZmZmZmYwZjAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDAwMGVmZjJmZmZmMmZmZTAwMDBmZmZmZWVlZWZmZmYwMGYwZWZiZjRmZjRmYmZlMGZmMGVlMTRkZmZkNDFlZTBmMDBlZmRlZGRkZGVkZmUwMDAwZjBlZTQ0NDRlZTBmMDAwMDRlMmYyMjIyZjJlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjU0NDVmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmMmZmMmZmMDAwMDAwZjBmZjIyMjJmZjBmMDAwMGZmZWZlZWVlZmVmZjAwMDBlZjJlMjIyMmUyZmYwMGYwZWZmMmZmZmYyZmZlMGZmMGZmZmZlZWVlZmZmZjBmMDBlZmJmNGZmNGZiZmUwMDAwZWYxNGRmZmQ0MWZlMDAwMGZlNGVkZGRkZTQwZjAwMDA0ZWRkMmUyMmYyZmUwMDAwZTBkZDJlMjJmMmU0MDAwMDAwZWU1ZjQ1ZjQwMDAwMDAwMGYwZmZmZmZmMDAwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkFront\"\n    },\n    \"anim2\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim2\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDBmZmZmZmYwMDAwMDAwMGYwZjJlZWVlZmYwMDAwMDAyZjIyZWZlZWZlMGYwMDAwZWZlZWZlZWZlZTBmMDBmMDJlMjJlMmZlZmYwZjAwZjBlMmZmZmYyMmUyMGYwMGYwZmZlZWZlZmZmZmZmMDBmMGVlNDRiZjRlZTRmZjAwMDBlZmRkMWZkNGU0ZmUwMDAwZjBkZGRkZTRlZTBmMDAwMGYwNGU0NGVlZmYwMDAwMDBmMDIyZTJkZDA0MDAwMDAwZjAyMmUyZGQwZTAwMDAwMGYwNTVmNGVlMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwMDAwMGZmMGYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZWRlZWVlMGYwMDAwZjA0ZWRlNGQwZjAwMDAwMGYwMjJkZWVkMGYwMDAwMDBmZjU1ZWZmZWZmMDAwMDAwZmZmZmZmZmZmZjAwMDAwMGYwZmYwMGYwMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZGRlNGVlMGYwMDAwZjA0ZTQ0ZWVmZjAwMDAwMGYwMjJlMmRkMDQwMDAwMDBmMDIyZTJkZDBlMDAwMDAwZjA1NWY0ZWUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmMGYyZWVlZWZmMDAwMDAwMmYyMmVmZWVmZTBmMDAwMGVmZWVmZWVmZWUwZjAwZjAyZTIyZTJmZWZmMGYwMGYwZTJmZmZmMjJlMjBmMDBmMGZmZWVmZWZmZmZmZjAwZjBlZTQ0YmY0ZWU0ZmYwMDAwZWZkZDFmZDRlNGZlMDAwMGYwZGRkZGU0ZWUwZjAwMDBmMDRlNDRkZTRkMDAwMDAwZjAyMjIyZGVlZDAwMDAwMGZmNTU0NGVmZmUwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjBmZjAwZjAwZjAwMDA=\",\n        \"displayName\": \"heroWalkLeft\"\n    },\n    \"anim3\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim3\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZmZlZWVlMmYwZjAwMDBmMGVmZWVmZTIyZjIwMDAwZjBlZWZlZWZlZWZlMDAwMGYwZmZlZjJlMjJlMjBmMDBmMDJlMjJmZmZmMmUwZjAwZmZmZmZmZWZlZWZmMGYwMGZmNGVlNGZiNDRlZTBmMDBlZjRlNGRmMWRkZmUwMDAwZjBlZTRlZGRkZDBmMDAwMDAwZmZlZTQ0ZTQwZjAwMDAwMDQwZGQyZTIyMGYwMDAwMDBlMGRkMmUyMjBmMDAwMDAwZjBlZTRmNTUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlZWVkZWRkMGYwMDAwMDBmMGQ0ZWRlNDBmMDAwMDAwZjBkZWVkMjIwZjAwMDAwMGZmZWZmZTU1ZmYwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjAwZjAwZmYwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlNGVkZGRkMGYwMDAwMDBmZmVlNDRlNDBmMDAwMDAwNDBkZDJlMjIwZjAwMDAwMGUwZGQyZTIyMGYwMDAwMDBmMGVlNGY1NTBmMDAwMDAwMDBmZmZmZmYwMDAwMDAwMDAwZjBmZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmYwMDAwMDAwMGZmZWVlZTJmMGYwMDAwZjBlZmVlZmUyMmYyMDAwMGYwZWVmZWVmZWVmZTAwMDBmMGZmZWYyZTIyZTIwZjAwZjAyZTIyZmZmZjJlMGYwMGZmZmZmZmVmZWVmZjBmMDBmZjRlZTRmYjQ0ZWUwZjAwZWY0ZTRkZjFkZGZlMDAwMGYwZWU0ZWRkZGQwZjAwMDAwMGQ0ZWQ0NGU0MGYwMDAwMDBkZWVkMjIyMjBmMDAwMDAwZWZmZTQ0NTVmZjAwMDAwMGZmZmZmZmZmZmYwMDAwMDBmMDBmMDBmZjBmMDA=\",\n        \"displayName\": \"heroWalkRight\"\n    },\n    \"anim4\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim4\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmZlZWVlZmYwMDAwMDBmMGVlZmVlZmVlMGYwMDAwZmZmZjJmZjJmZmZmMDAwMGZmMmUyZWUyZTJmZjAwMDBlZmYyZjIyZjJmZmUwMDAwZmYyZmUyMmVmMmZmMDBmMGVmMmZlZmZlZjJmZTBmZjBlZWZmZWVlZWVmZWUwZjAwZWZlZWVlZWVlZWZlMDAwMGYwZWVlZWVlZWUwZjAwMDA0ZWZmZmZmZmZmZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY0NDQ0ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmMGZmMmZmMmZmMGYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMmZmZjJmZTAwMDBmZjJmZWYyZWYyZmYwMDAwZWZmMmVmMmVlZmZlMDBmMGVmZmZlZWZlZWVmZTBmZjBlZmVlZWVlZWVlZmUwZjAwZjBlZWVlZWVlZTBmMDAwMGUwZmZmZmZmZmZlNDAwMDA0MDJmMjIyMmRlNGQwMDAwZTBmZmZmZmZlZTA0MDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmZmZmMmZmMmZmZmYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMjJmMmZmZTAwMDBmZjJmZTIyZWYyZmYwMGYwZWYyZmVmZmVmMmZlMGZmMGVlZmZlZWVlZWZlZTBmMDBlZmVlZWVlZWVlZmUwMDAwZjBlZWVlZWVlZTBmMDAwMDRlZmZmZmZmZmZlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjQ0NDRmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmZWVlZWZmMDAwMDAwZjBlZWZlZWZlZTBmMDAwMGYwZmYyZmYyZmYwZjAwMDBmZjJlMmVlMmUyZmYwMDAwZWYyZmZmMmYyZmZlMDAwMGZmMmZlMmZlZjJmZjAwMDBlZmZlZTJmZTJmZmUwMGYwZWZlZWVmZWVmZmZlMGZmMGVmZWVlZWVlZWVmZTBmMDBmMGVlZWVlZWVlMGYwMDAwNGVmZmZmZmZmZjBlMDAwMGQ0ZWQyMjIyZjIwNDAwMDA0MGVlZmZmZmZmMGUwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkBack\"\n    },\n    \"anim5\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim5\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwY2MwMDAwMDAwMDAwMDBiY2M1MDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmJmZWZmZWZiZmYwMDAwZmYxZmJmZmJmMWZmMDAwMGYwYmZiYmJiZmIwZjAwMDBlMGZlZWVlZWVmMGUwMDAwYmViY2I1NWJmYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward\"\n    },\n    \"anim6\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim6\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGNjMGMwMDAwMDAwMDAwMDA1Y2NiMDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGYwZmZmZmZmZmYwZjAwMDBlMGZlZmZmZmZmMGUwMDAwYmViZmI1NWJjYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZWJmZWZmYmZlYjAwMDBlMGJiYmU1YmY1ZWUwMDAwMDBlYzVlNTU1NTBmMDAwMDAwZjBmZmZmZmYwMDAwMDAwMDAwYzBjYzAwMDAwMDAwMDAwMGJjYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZmVmZmZmZWYwZTAwMDBiZWJjYjU1YmZiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMDAwNWMwYzAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmMGZmZmZmZmVlMGYwMDAwYmVmYmVlZWViZTBlMDAwMGVlNWZiNWViYmIwZTAwMDBmMDU1NTVlNWNlMDAwMDAwMDBmZmZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchBack\"\n    },\n    \"anim7\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim7\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDA1YzBjMDAwMDAwMDAwMGNjNTVjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGYwNTU1NTU1NTVmZjAwMDAwMGVmZWViZmVlZmYwMDAwMDBlZmJiMWZmYmZmMDAwMDAwYmZiYmJiZmIwZjAwMDAwMGYwZWVlZWVmMGUwMDAwMDBmMGI1ZWJiYjBlMDAwMDAwNWY1NWU1YmIwZTAwMDAwMGJjNTU1NWVlMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGNjYzUwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiZWJmZTBmMDAwMDAwZjBlZWJlZWIwZjAwMDAwMDVmYmJiZWViMDAwMDAwMDA1YzU1ZTVmZTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiYmJmYjBmMDAwMDAwZjBlZWVlZWYwZTAwMDAwMGYwYjVlYmJiMGUwMDAwMDA1ZjU1ZTViYjBlMDAwMDAwYmM1NTU1ZWUwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwY2NjNTAwMDAwMDAwMDBjYzU1YzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmMDU1NTU1NTU1ZmYwMDAwMDBlZmVlYmZlZWZmMDAwMDAwZWZiYjFmZmJmZjAwMDAwMGJmYmJiYmZiMGYwMDAwMDBmMGVlZWViZWViMDAwMDAwNWZiNWJiYmVlYjAwMDAwMDVjNTU1NWVlMGUwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchLeft\"\n    },\n    \"anim8\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim8\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDBjMGM1MDAwMDAwMDAwMGNjNWM1NWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTUwZjAwMDBmZmVlZmJlZWZlMDAwMDAwZmZiZmYxYmJmZTAwMDAwMGYwYmZiYmJiZmIwMDAwMDBlMGZlZWVlZTBmMDAwMDAwZTBiYmJlNWIwZjAwMDAwMGUwYmI1ZTU1ZjUwMDAwMDAwMGVlNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjY2MwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBlZmJlYmJmYjAwMDAwMGYwYmVlYmVlMGYwMDAwMDAwMGJlZWJiYmY1MDAwMDAwMDBlZjVlNTVjNTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBiZmJiYmJmYjAwMDAwMGUwZmVlZWVlMGYwMDAwMDBlMGJiYmU1YjBmMDAwMDAwZTBiYjVlNTVmNTAwMDAwMDAwZWU1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwNWNjYzAwMDAwMDAwMDBjYzVjNTVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1MGYwMDAwZmZlZWZiZWVmZTAwMDAwMGZmYmZmMWJiZmUwMDAwMDBmMGJmYmJiYmZiMDAwMDAwYmVlYmVlZWUwZjAwMDAwMGJlZWJiYjViZjUwMDAwMDBlMGVlNTU1NWM1MDAwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchRight\"\n    },\n    \"anim9\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim9\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDBjZmZhMDAwMDAwMDAwMGZmYWZmYWZmMDAwMDAwZmZmY2FhYWFmZmZmMDBmMGNjY2FhYWFhYWNjYzBmZjBhY2NhYWNjYWFjY2EwZjAwYWZhYWNjY2NhYWZhMDAwMGVmYWFhYWFhYWFmZTAwMDA0ZjllYmZmYmU5ZjQwMDAwNGYxNGQ4OGQ0MWY0MDAwMGYwZDRkZGRkNGQwZjAwMDBiMGZiYmJiYmJmMGIwMDAwZGJjZmNhYWNmY2JkMDAwMGJiYWZhYWFhZmFiYjAwMDAwMGNmYWFhYWZjMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward0\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}","images.g.ts":"","voidbattle.ts":"enum Direction {\n    Left = 0,\n    Up = 1,\n    Right = 2,\n    Down = 3\n}\n\nenum SpriteAction {\n    Idle,\n    Move,\n    Fall,\n    Die\n}\n\nnamespace SpriteKind {\n    export const Detector = SpriteKind.create();\n}\n\nnamespace animation {\n    const stateNamespace = \"__animation\";\n\n    interface AnimationState {\n        animations: SpriteAnimation[];\n    }\n\n    // this will tell the state machines that their animations are still active\n    export function updateActiveStateAnimations(): void {\n        let state: AnimationState = game.currentScene().data[stateNamespace];\n        if(state && state.animations) {\n            state.animations.forEach((anim: SpriteAnimation) => {\n                if (anim.sprite instanceof VoidBattle.VBSprite) {\n                    const vbs = anim.sprite as VoidBattle.VBSprite;\n                    if(vbs.sm)\n                        vbs.sm.animationActive = true;\n                }\n            });\n        }\n    }\n\n    export class Animation {\n        constructor(public frames: Image[], public frameInterval: number = 500, public loop: boolean = false){}\n        runAnimationOnSprite(sprite: Sprite) {\n            animation.runImageAnimation(sprite, this.frames, this.frameInterval, this.loop);\n        }\n    }\n\n    interface AnimationMap {\n        [key: number]: Animation[];\n    }\n\n    let stateMachines: AnimationStateMachine[];\n\n    // should allow you to change the sprite's animation based on its direction\n    // what should i put in here and what should just be part of VBSprite?\n    export class AnimationStateMachine {\n        dir: Direction = Direction.Down;\n        lastDir: Direction = Direction.Down;\n        sprite: VoidBattle.VBSprite;\n        lastAction: number;\n        animationActive: boolean = false;\n        stateAnimations: AnimationMap = {};\n\n        constructor(sprite: VoidBattle.VBSprite) {\n            this.sprite = sprite;\n            this.lastAction = sprite._action;\n            this._init();\n        }\n\n        _init() {\n            if (!stateMachines) {\n                stateMachines = [];\n                game.eventContext().registerFrameHandler(scene.ANIMATION_UPDATE_PRIORITY, () => {\n                    // see which animations are still active\n                    animation.updateActiveStateAnimations();\n\n                    // remove state machines of dead sprites\n                    stateMachines = stateMachines.filter((sm: AnimationStateMachine) => {\n                        if (sm.sprite.flags & sprites.Flag.Destroyed)\n                            return false;\n                        sm.update();\n                        return true;\n                    });\n                });\n            }\n            stateMachines.push(this);\n        }\n\n        update() {\n            // detect if the action has been changed\n            if(this.lastAction != this.sprite._action || this.lastDir != this.dir) {\n                this.lastAction = this.sprite._action;\n                this.lastDir = this.dir;\n                const anim = this.getAnimationFromState(this.lastAction)\n                if(anim)\n                    anim.runAnimationOnSprite(this.sprite);\n            }\n            this.animationActive = false;\n        }\n\n        setDirection(direction: Direction) {\n            this.dir = direction;\n        }\n\n        // You should really put these in the order [left, up, right, down]\n        setStateAnimations(state: number, animations: Animation[]) {\n            this.stateAnimations[state] = animations;\n        }\n\n        getAnimationFromState(state: number): Animation {\n            const anims: Animation[] = this.stateAnimations[state];\n            if (!anims || anims.length == 0)\n                return null;\n            \n            if (anims.length == 1 || this.dir < 0 || this.dir >= anims.length)\n                return anims[0];\n            \n            return anims[this.dir];\n\n        }\n        //constructor(frameInterval: number, )\n    }\n\n}\n\n\nnamespace VoidBattle {\n    let collisionSprite: Sprite\n    let detectionSetUp: boolean = false;\n\n    // does not work\n    export function getCollisionsAtLocation(location: tiles.Location): Sprite[] {\n        const s: Sprite = sprites.create(assets.image`hitboxPlaceholder`);\n        s.setFlag(SpriteFlag.Invisible, true);\n        tiles.placeOnTile(s, location);\n        \n        const overlaps = game.currentScene().physicsEngine.overlaps(s);\n        sprites.destroy(s);\n        return overlaps;\n    }\n\n    export function vbCollisionCheck(location: tiles.Location, callback: (overlaps: Sprite[]) => void) {\n        control.runInParallel(() => {\n            tiles.placeOnTile(collisionSprite, location);\n            pause(1);\n            const overlaps = game.currentScene().physicsEngine.overlaps(collisionSprite);\n            callback(overlaps);\n        });\n    }\n\n    export class SpriteDetector extends sprites.ExtendableSprite {\n        \n        overlappers: Sprite[] = [];\n        cb: (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => void;\n        isActive: boolean = true;\n        framesToWait: number = 2;\n\n        constructor(loc: tiles.Location, callback: (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => void) {\n            super(assets.image`hitboxPlaceholder`, SpriteKind.Detector);\n            this.setFlag(SpriteFlag.Invisible, true);\n            tiles.placeOnTile(this, loc);\n            this.cb = callback;\n        }\n\n        update(deltaTimeMillis: number) {\n            this.framesToWait --\n            if (this.framesToWait <= 0)\n                if (this.isActive && this.cb) {\n                    console.log(\"hi\");\n                    console.log(this.overlappers);\n                    const isOnWall: boolean = tiles.tileAtLocationIsWall(this.tilemapLocation());\n                    this.cb(this, this.overlappers, isOnWall);\n                }\n            this.overlappers = [];\n        }\n    }\n\n    const tileSize = 16;\n    export class VBSprite extends sprites.ExtendableSprite {\n        sm: animation.AnimationStateMachine;\n        dir: Direction = Direction.Down;\n        onDeathCallback: () => void;\n        canPush: boolean = false;\n        pushable: boolean = false;\n        hitboxWidth: number = 16;\n        hitboxHeight: number = 16;\n\n        constructor(spriteImage: Image, kind?: number, dir?: Direction) {\n            super(spriteImage, kind);\n            this.flags ^= SpriteFlag.GhostThroughWalls;\n            this.setDimensions(this.hitboxWidth, this.hitboxHeight);\n            //this._hitbox.ox = Fx8(-4);\n            //this._hitbox.oy = Fx8(-4);\n            this.sm = new animation.AnimationStateMachine(this);\n            this._action = SpriteAction.Idle;\n\n            if(!detectionSetUp) {\n                console.log(\"setting up detection!\");\n                sprites.onOverlap(SpriteKind.Detector, SpriteKind.Player, function (sprite: Sprite, otherSprite: Sprite) {\n                    console.log(\"hello\")\n                    if (sprite instanceof VoidBattle.SpriteDetector) {\n                        const sd = sprite as VoidBattle.SpriteDetector;\n                        sd.overlappers.push(otherSprite);\n                        console.log(sd.overlappers);\n                    }\n                });\n                detectionSetUp = true;\n            }\n\n            if (dir)\n                this.setDirection(dir);\n            else\n                this.setDirection(Direction.Down);\n            \n        }\n\n        // Accounts for the offset from the hitbox, which is wider so we can\n        // detect neighboring sprites\n        draw(drawLeft: number, drawTop: number) {\n            drawLeft += (this.hitboxWidth - this.image.width) >> 1;\n            drawTop += (this.hitboxHeight - this.image.height) >> 1;\n            super.draw(drawLeft, drawTop);\n        }\n\n        setPosition(x: number, y: number): void {\n            const physics = game.currentScene().physicsEngine;\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n            // call it a second time to correct a bug where sprites that ghost \n            // through walls are still pushed out\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n        }\n\n        update(deltaTimeMillis: number) {\n            if (this.tileKindAt(TileDirection.Center, assets.image`blankTile`)) {\n                sprites.destroy(this, effects.fire, 2000);\n                this.die();\n            }\n        }\n\n        die() {\n            if (this.onDeathCallback){\n                control.runInParallel(this.onDeathCallback);\n            } \n        }\n\n        onDeath(cb: () => void) {\n            this.onDeathCallback = cb;\n        }\n\n        setDirection(dir: Direction) {\n            this.dir = dir;\n            this.sm.setDirection(dir);\n        }\n\n        getNeighboringLocation(dir: Direction): tiles.Location {\n            const loc: tiles.Location = this.tilemapLocation();\n            let neighbor: tiles.Location;\n            switch (dir) {\n                case Direction.Left:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Left);\n                    break;\n                case Direction.Up:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Top);\n                    break;\n                case Direction.Right:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Right);\n                    break;\n                case Direction.Down:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Bottom);\n                    break;\n            }\n            return neighbor;\n        }\n        \n        // moves this sprite in a certain direction. Returns true if the move\n        // was successful\n        move(dir: Direction, turnToFaceDirection: boolean = false): boolean {\n            const neighbor = this.getNeighboringLocation(dir);\n            \n            if(turnToFaceDirection)\n                this.setDirection(dir);\n\n            if (tiles.tileAtLocationIsWall(neighbor)) {\n                scene.cameraShake(2, 200);\n                return false;\n            }\n        \n            //const overlaps: Sprite[] = getCollisionsAtLocation(neighbor);\n            const neighborSprite = this.getNeighboringSprite(neighbor);\n\n            if(neighborSprite)\n                return false;\n            \n            // gotta do it twice because there's a bug where it ignores the ghost \n            // through walls flag\n            //tiles.placeOnTile(this, neighbor);\n            tiles.placeOnTile(this, neighbor);\n            return true;\n            \n        }\n\n        getNeighboringSprite(loc: tiles.Location): Sprite {\n            const engine = game.currentScene().physicsEngine;\n            let neighbors: Sprite[];\n            // the overlaps function simply does not work :/ i hate this engine so much\n            /*\n            if(engine instanceof ArcadePhysicsEngine){\n                const ape = engine as ArcadePhysicsEngine;\n                neighbors = ape.map.neighbors(this)\n            }\n            */\n            let overlaps = game.currentScene().physicsEngine.overlaps(this);\n            for(let i = 0; i < overlaps.length; i++) {\n                const s = overlaps[i];\n                if (s.tilemapLocation().column == loc.column && s.tilemapLocation().row == loc.row)\n                    return s;\n            }\n            return null;\n        }\n\n    }\n\n    export class VBPlayerSprite extends VBSprite {\n        ctrl: controller.Controller;\n        isMyTurn: boolean = false;\n        // used when the player has already started an input but is waiting on some\n        // number of processes to complete before control can be restored or the turn\n        // can end\n        awaitingTurnCompletion: boolean = false;\n        turnEndCallback: () => void;\n        storedTile: Image;\n        // failsafe if there are shenanigans with the turns\n        controlsLocked: boolean = false;\n\n        constructor(spriteImage: Image, ctrl: controller.Controller, kind?: number, dir?: Direction){\n            super(spriteImage, kind, dir);\n            this.ctrl = ctrl;\n            this._setupButtonEvents();\n            this.canPush = true;\n            this.pushable = true;\n        }\n\n        _setupButtonEvents() {\n            // gotta do this for literally every event it seems. kill me\n            // maybe there's a better way, but if there is I haven't found one\n            this.ctrl.onButtonEvent(ControllerButton.Left, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Left, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Right, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Right, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Up, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Up, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Down, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Down, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.A, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.A, ControllerButtonEvent.Pressed);\n            });\n        }\n\n        startTurn() {\n            this.isMyTurn = true;\n        }\n\n        onTurnEnd(cb: () => void) {\n            this.turnEndCallback = cb;\n        }\n\n        endTurn() {\n            this.awaitingTurnCompletion = false;\n            this.isMyTurn = false;\n            if( this.turnEndCallback ) this.turnEndCallback();\n        }\n\n        handleButtonInput(button: ControllerButton, event: ControllerButtonEvent) {\n            if(this.awaitingTurnCompletion || this.controlsLocked || !this.isMyTurn) return;\n            \n            switch(button) {\n                case ControllerButton.Left:\n                    this.step(Direction.Left);\n                    break;\n                case ControllerButton.Up:\n                    this.step(Direction.Up);\n                    break;\n                case ControllerButton.Right:\n                    this.step(Direction.Right);\n                    break;\n                case ControllerButton.Down:\n                    this.step(Direction.Down);\n                    break;\n                case ControllerButton.A:\n                    this.tryPrimaryAction();\n                    break;\n            }\n            //if (moveCompleted) this.endTurn();\n        }\n\n        // step in a particular direction\n        // if there is an immovable obstacle, face it but do not move\n        step(dir: Direction) {\n            this.awaitingTurnCompletion = true;\n\n            this.setDirection(dir);\n            const neighbor = this.getNeighboringLocation(dir);\n\n            const detector = new SpriteDetector(neighbor, (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => {\n                if (isOnWall)\n                    scene.cameraShake(2, 200);\n                else if (overlappers && overlappers.length > 0) {}\n                else\n                    tiles.placeOnTile(this, neighbor);\n                \n                sprites.destroy(detector);//, effects.spray, 200);\n                this.awaitingTurnCompletion = false;\n                this.endTurn();\n            });\n        }\n\n        // attempts to interact using the A button. If the action fails, return false\n        tryPrimaryAction() {\n            const neighbor: tiles.Location = this.getNeighboringLocation(this.dir);\n            \n            if (tiles.tileAtLocationIsWall(neighbor))\n                return;\n            else if (tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && this.storedTile) {\n                tiles.setTileAt(neighbor, this.storedTile);\n                this.storedTile = null;\n                this.endTurn();\n            } else if (!tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && !this.storedTile) {\n                this.storedTile = tiles.getTileImage(neighbor);\n                tiles.setTileAt(neighbor, assets.image`blankTile`);\n                this.endTurn();\n            }\n        }\n    }\n}\n\n","tilespritemap.ts":"namespace vb {\r\n    let _map: VBMap;\r\n\r\n    export function currentMap(): VBMap {\r\n        init();\r\n        return _map;\r\n    }\r\n\r\n    export function init() {\r\n        if(!_map) {\r\n            _map = new VBMap();\r\n        }\r\n    }\r\n    export class Location {\r\n        constructor(public column: number, public row: number) { }\r\n\r\n        get key() {\r\n            return makeMapKey(this);\r\n        }\r\n    }\r\n\r\n    interface TileSpriteMap {\r\n        [key: string]: Sprite;\r\n    }\r\n\r\n    export function makeMapKey(location: Location): string {\r\n        return location.column + \",\" + location.row;\r\n    }\r\n\r\n    export function setTilemap(tilemap: tiles.TileMapData) {\r\n        scene.setTileMapLevel(tilemap);\r\n\r\n    }\r\n\r\n    export class VBMap {\r\n        spriteMap: TileSpriteMap;\r\n        \r\n        placeOnTile(sprite: Sprite, location: Location) {\r\n            this.spriteMap[location.key] = sprite;\r\n        }\r\n\r\n        removeFromTile(location: Location) {\r\n            const oldKey = location.key;\r\n            if (this.spriteMap[oldKey] === undefined)\r\n                return;\r\n            delete this.spriteMap[oldKey];\r\n        }\r\n\r\n        moveFromTile(oldLocation: Location, newLocation: Location) {\r\n            const oldKey = oldLocation.key;\r\n            const newKey = newLocation.key;\r\n            if (this.spriteMap[oldKey] === undefined) {\r\n                // error: there's no sprite at this tile!\r\n                return;\r\n            }\r\n\r\n            if (this.spriteMap[newKey] !== undefined) {\r\n                // error: there's already a sprite at this tile!\r\n                return;\r\n            }\r\n\r\n            this.spriteMap[newKey] = this.spriteMap[oldKey];\r\n            this.removeFromTile(oldLocation);\r\n        }\r\n\r\n        isTileOccupied(location: Location): boolean {\r\n            return this.spriteMap[location.key] !== undefined;\r\n        }\r\n\r\n        getSpriteAtTile(location: Location): Sprite {\r\n            return this.spriteMap[location.key];\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","pxt.json":"{\n    \"name\": \"Void Battle\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\",\n        \"images.g.jres\",\n        \"images.g.ts\",\n        \"voidbattle.ts\",\n        \"tilespritemap.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}},{"timestamp":1761523457225,"editorVersion":"2.0.61","text":{"main.ts":"tiles.setCurrentTilemap(tilemap`level1`);\r\nscene.centerCameraAt(96, 68);\r\n//game.debug = true;\r\nlet isP1Turn: boolean = true;\r\n\r\nlet player1Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player1, SpriteKind.Player, Direction.Up);\r\nplayer1Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`heroWalkLeft`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkBack`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkRight`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkFront`, 200, true)\r\n]);\r\ntiles.placeOnTile(player1Sprite, tiles.getTileLocation(1, 7));\r\nplayer1Sprite.onTurnEnd(function() {\r\n    isP1Turn = false;\r\n    player2Sprite.startTurn();\r\n});\r\nplayer1Sprite.onDeath(function() {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 2 Wins!\");\r\n    game.gameOverPlayerWin(2);\r\n})\r\n\r\nlet player2Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player2, SpriteKind.Player, Direction.Down);\r\nplayer2Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`witchLeft`, 200, true),\r\n    new animation.Animation(assets.animation`witchBack`, 200, true),\r\n    new animation.Animation(assets.animation`witchRight`, 200, true),\r\n    new animation.Animation(assets.animation`witchForward`, 200, true)\r\n]);\r\ntiles.placeOnTile(player2Sprite, tiles.getTileLocation(2, 7));\r\n//tiles.placeOnTile(player2Sprite, tiles.getTileLocation(10, 2));\r\nplayer2Sprite.onTurnEnd(function () {\r\n    isP1Turn = true;\r\n    player1Sprite.startTurn();\r\n});\r\nplayer2Sprite.onDeath(function () {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 1 Wins!\");\r\n    game.gameOverPlayerWin(1);\r\n})\r\n\r\ngame.onPaint(function() {\r\n    // draw HUD\r\n    screen.drawLine(0, 0, 160, 0, isP1Turn ? 4 : 9);\r\n    screen.fillRect(0, 1, 160, 22, isP1Turn ? 2 : 6);\r\n    screen.drawLine(0, 23, 160, 23, isP1Turn ? 14 : 8);\r\n\r\n    if (player1Sprite.storedTile)\r\n        screen.drawImage(player1Sprite.storedTile, 5, 5);\r\n    \r\n    if (player2Sprite.storedTile)\r\n        screen.drawImage(player2Sprite.storedTile, 141, 5);\r\n\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 2, 2);\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 138, 2);\r\n\r\n    screen.print(\"P\" + (isP1Turn ? \"1\" : \"2\") + \" Turn\", 60, 5, 1);\r\n});\r\n\r\nplayer1Sprite.startTurn();","README.md":" ","assets.json":"","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"level1\": {\n        \"id\": \"level1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAwYzAwMDkwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDIwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMjAwMDAyMDAyMDAwMDAwMDAyMDIyMjIyMjIyMjIyMg==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"sprites.dungeon.floorLight2\",\n            \"sprites.castle.tileGrass1\"\n        ],\n        \"displayName\": \"level1\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","images.g.jres":"{\n    \"image2\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"blankTile\"\n    },\n    \"image1\": {\n        \"data\": \"hwQUABQAAAAAu7u7u7u7u7sAAACwHREREREREdELAADb0bu7u7u7ux29AAAbvQAAAAAAANuxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbvQAAAAAAANuxAADb0bu7u7u7ux29AACwHREREREREdELAAAAu7u7u7u7u7sAAAA=\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"selectedItemFrame\"\n    },\n    \"image3\": {\n        \"data\": \"hwQOAA4AAAARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREA\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"hitboxPlaceholder\"\n    },\n    \"anim1\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim1\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmYyZmYyZmYwMDAwMDBmMGZmMjIyMmZmMGYwMDAwZmZlZmVlZWVmZWZmMDAwMGZmMmUyMjIyZTJmZTAwMDBlZmYyZmZmZjJmZmUwMDAwZmZmZmVlZWVmZmZmMDBmMGVmYmY0ZmY0ZmJmZTBmZjBlZTE0ZGZmZDQxZWUwZjAwZWZkZWRkZGRlZGZlMDAwMGYwZWU0NDQ0ZWUwZjAwMDA0ZTJmMjIyMmYyZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY1NDQ1ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDBmMGVmZjJmZmZmMmZmZTBmZjBmZmZmZWVlZWZmZmYwZjAwZWZiZjRmZjRmYmZlMDAwMGVmMTRkZmZkNDFmZTAwMDBmMDRlZGRkZGU0ZWYwMDAwZWYyZjIyZTJkZGU0MDAwMDRlMmYyMmUyZGQwZTAwMDAwMDRmNTRmNWVlMDAwMDAwMDBmZmZmZmYwZjAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDAwMGVmZjJmZmZmMmZmZTAwMDBmZmZmZWVlZWZmZmYwMGYwZWZiZjRmZjRmYmZlMGZmMGVlMTRkZmZkNDFlZTBmMDBlZmRlZGRkZGVkZmUwMDAwZjBlZTQ0NDRlZTBmMDAwMDRlMmYyMjIyZjJlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjU0NDVmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmMmZmMmZmMDAwMDAwZjBmZjIyMjJmZjBmMDAwMGZmZWZlZWVlZmVmZjAwMDBlZjJlMjIyMmUyZmYwMGYwZWZmMmZmZmYyZmZlMGZmMGZmZmZlZWVlZmZmZjBmMDBlZmJmNGZmNGZiZmUwMDAwZWYxNGRmZmQ0MWZlMDAwMGZlNGVkZGRkZTQwZjAwMDA0ZWRkMmUyMmYyZmUwMDAwZTBkZDJlMjJmMmU0MDAwMDAwZWU1ZjQ1ZjQwMDAwMDAwMGYwZmZmZmZmMDAwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkFront\"\n    },\n    \"anim2\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim2\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDBmZmZmZmYwMDAwMDAwMGYwZjJlZWVlZmYwMDAwMDAyZjIyZWZlZWZlMGYwMDAwZWZlZWZlZWZlZTBmMDBmMDJlMjJlMmZlZmYwZjAwZjBlMmZmZmYyMmUyMGYwMGYwZmZlZWZlZmZmZmZmMDBmMGVlNDRiZjRlZTRmZjAwMDBlZmRkMWZkNGU0ZmUwMDAwZjBkZGRkZTRlZTBmMDAwMGYwNGU0NGVlZmYwMDAwMDBmMDIyZTJkZDA0MDAwMDAwZjAyMmUyZGQwZTAwMDAwMGYwNTVmNGVlMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwMDAwMGZmMGYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZWRlZWVlMGYwMDAwZjA0ZWRlNGQwZjAwMDAwMGYwMjJkZWVkMGYwMDAwMDBmZjU1ZWZmZWZmMDAwMDAwZmZmZmZmZmZmZjAwMDAwMGYwZmYwMGYwMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZGRlNGVlMGYwMDAwZjA0ZTQ0ZWVmZjAwMDAwMGYwMjJlMmRkMDQwMDAwMDBmMDIyZTJkZDBlMDAwMDAwZjA1NWY0ZWUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmMGYyZWVlZWZmMDAwMDAwMmYyMmVmZWVmZTBmMDAwMGVmZWVmZWVmZWUwZjAwZjAyZTIyZTJmZWZmMGYwMGYwZTJmZmZmMjJlMjBmMDBmMGZmZWVmZWZmZmZmZjAwZjBlZTQ0YmY0ZWU0ZmYwMDAwZWZkZDFmZDRlNGZlMDAwMGYwZGRkZGU0ZWUwZjAwMDBmMDRlNDRkZTRkMDAwMDAwZjAyMjIyZGVlZDAwMDAwMGZmNTU0NGVmZmUwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjBmZjAwZjAwZjAwMDA=\",\n        \"displayName\": \"heroWalkLeft\"\n    },\n    \"anim3\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim3\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZmZlZWVlMmYwZjAwMDBmMGVmZWVmZTIyZjIwMDAwZjBlZWZlZWZlZWZlMDAwMGYwZmZlZjJlMjJlMjBmMDBmMDJlMjJmZmZmMmUwZjAwZmZmZmZmZWZlZWZmMGYwMGZmNGVlNGZiNDRlZTBmMDBlZjRlNGRmMWRkZmUwMDAwZjBlZTRlZGRkZDBmMDAwMDAwZmZlZTQ0ZTQwZjAwMDAwMDQwZGQyZTIyMGYwMDAwMDBlMGRkMmUyMjBmMDAwMDAwZjBlZTRmNTUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlZWVkZWRkMGYwMDAwMDBmMGQ0ZWRlNDBmMDAwMDAwZjBkZWVkMjIwZjAwMDAwMGZmZWZmZTU1ZmYwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjAwZjAwZmYwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlNGVkZGRkMGYwMDAwMDBmZmVlNDRlNDBmMDAwMDAwNDBkZDJlMjIwZjAwMDAwMGUwZGQyZTIyMGYwMDAwMDBmMGVlNGY1NTBmMDAwMDAwMDBmZmZmZmYwMDAwMDAwMDAwZjBmZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmYwMDAwMDAwMGZmZWVlZTJmMGYwMDAwZjBlZmVlZmUyMmYyMDAwMGYwZWVmZWVmZWVmZTAwMDBmMGZmZWYyZTIyZTIwZjAwZjAyZTIyZmZmZjJlMGYwMGZmZmZmZmVmZWVmZjBmMDBmZjRlZTRmYjQ0ZWUwZjAwZWY0ZTRkZjFkZGZlMDAwMGYwZWU0ZWRkZGQwZjAwMDAwMGQ0ZWQ0NGU0MGYwMDAwMDBkZWVkMjIyMjBmMDAwMDAwZWZmZTQ0NTVmZjAwMDAwMGZmZmZmZmZmZmYwMDAwMDBmMDBmMDBmZjBmMDA=\",\n        \"displayName\": \"heroWalkRight\"\n    },\n    \"anim4\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim4\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmZlZWVlZmYwMDAwMDBmMGVlZmVlZmVlMGYwMDAwZmZmZjJmZjJmZmZmMDAwMGZmMmUyZWUyZTJmZjAwMDBlZmYyZjIyZjJmZmUwMDAwZmYyZmUyMmVmMmZmMDBmMGVmMmZlZmZlZjJmZTBmZjBlZWZmZWVlZWVmZWUwZjAwZWZlZWVlZWVlZWZlMDAwMGYwZWVlZWVlZWUwZjAwMDA0ZWZmZmZmZmZmZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY0NDQ0ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmMGZmMmZmMmZmMGYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMmZmZjJmZTAwMDBmZjJmZWYyZWYyZmYwMDAwZWZmMmVmMmVlZmZlMDBmMGVmZmZlZWZlZWVmZTBmZjBlZmVlZWVlZWVlZmUwZjAwZjBlZWVlZWVlZTBmMDAwMGUwZmZmZmZmZmZlNDAwMDA0MDJmMjIyMmRlNGQwMDAwZTBmZmZmZmZlZTA0MDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmZmZmMmZmMmZmZmYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMjJmMmZmZTAwMDBmZjJmZTIyZWYyZmYwMGYwZWYyZmVmZmVmMmZlMGZmMGVlZmZlZWVlZWZlZTBmMDBlZmVlZWVlZWVlZmUwMDAwZjBlZWVlZWVlZTBmMDAwMDRlZmZmZmZmZmZlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjQ0NDRmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmZWVlZWZmMDAwMDAwZjBlZWZlZWZlZTBmMDAwMGYwZmYyZmYyZmYwZjAwMDBmZjJlMmVlMmUyZmYwMDAwZWYyZmZmMmYyZmZlMDAwMGZmMmZlMmZlZjJmZjAwMDBlZmZlZTJmZTJmZmUwMGYwZWZlZWVmZWVmZmZlMGZmMGVmZWVlZWVlZWVmZTBmMDBmMGVlZWVlZWVlMGYwMDAwNGVmZmZmZmZmZjBlMDAwMGQ0ZWQyMjIyZjIwNDAwMDA0MGVlZmZmZmZmMGUwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkBack\"\n    },\n    \"anim5\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim5\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwY2MwMDAwMDAwMDAwMDBiY2M1MDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmJmZWZmZWZiZmYwMDAwZmYxZmJmZmJmMWZmMDAwMGYwYmZiYmJiZmIwZjAwMDBlMGZlZWVlZWVmMGUwMDAwYmViY2I1NWJmYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward\"\n    },\n    \"anim6\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim6\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGNjMGMwMDAwMDAwMDAwMDA1Y2NiMDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGYwZmZmZmZmZmYwZjAwMDBlMGZlZmZmZmZmMGUwMDAwYmViZmI1NWJjYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZWJmZWZmYmZlYjAwMDBlMGJiYmU1YmY1ZWUwMDAwMDBlYzVlNTU1NTBmMDAwMDAwZjBmZmZmZmYwMDAwMDAwMDAwYzBjYzAwMDAwMDAwMDAwMGJjYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZmVmZmZmZWYwZTAwMDBiZWJjYjU1YmZiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMDAwNWMwYzAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmMGZmZmZmZmVlMGYwMDAwYmVmYmVlZWViZTBlMDAwMGVlNWZiNWViYmIwZTAwMDBmMDU1NTVlNWNlMDAwMDAwMDBmZmZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchBack\"\n    },\n    \"anim7\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim7\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDA1YzBjMDAwMDAwMDAwMGNjNTVjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGYwNTU1NTU1NTVmZjAwMDAwMGVmZWViZmVlZmYwMDAwMDBlZmJiMWZmYmZmMDAwMDAwYmZiYmJiZmIwZjAwMDAwMGYwZWVlZWVmMGUwMDAwMDBmMGI1ZWJiYjBlMDAwMDAwNWY1NWU1YmIwZTAwMDAwMGJjNTU1NWVlMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGNjYzUwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiZWJmZTBmMDAwMDAwZjBlZWJlZWIwZjAwMDAwMDVmYmJiZWViMDAwMDAwMDA1YzU1ZTVmZTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiYmJmYjBmMDAwMDAwZjBlZWVlZWYwZTAwMDAwMGYwYjVlYmJiMGUwMDAwMDA1ZjU1ZTViYjBlMDAwMDAwYmM1NTU1ZWUwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwY2NjNTAwMDAwMDAwMDBjYzU1YzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmMDU1NTU1NTU1ZmYwMDAwMDBlZmVlYmZlZWZmMDAwMDAwZWZiYjFmZmJmZjAwMDAwMGJmYmJiYmZiMGYwMDAwMDBmMGVlZWViZWViMDAwMDAwNWZiNWJiYmVlYjAwMDAwMDVjNTU1NWVlMGUwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchLeft\"\n    },\n    \"anim8\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim8\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDBjMGM1MDAwMDAwMDAwMGNjNWM1NWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTUwZjAwMDBmZmVlZmJlZWZlMDAwMDAwZmZiZmYxYmJmZTAwMDAwMGYwYmZiYmJiZmIwMDAwMDBlMGZlZWVlZTBmMDAwMDAwZTBiYmJlNWIwZjAwMDAwMGUwYmI1ZTU1ZjUwMDAwMDAwMGVlNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjY2MwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBlZmJlYmJmYjAwMDAwMGYwYmVlYmVlMGYwMDAwMDAwMGJlZWJiYmY1MDAwMDAwMDBlZjVlNTVjNTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBiZmJiYmJmYjAwMDAwMGUwZmVlZWVlMGYwMDAwMDBlMGJiYmU1YjBmMDAwMDAwZTBiYjVlNTVmNTAwMDAwMDAwZWU1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwNWNjYzAwMDAwMDAwMDBjYzVjNTVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1MGYwMDAwZmZlZWZiZWVmZTAwMDAwMGZmYmZmMWJiZmUwMDAwMDBmMGJmYmJiYmZiMDAwMDAwYmVlYmVlZWUwZjAwMDAwMGJlZWJiYjViZjUwMDAwMDBlMGVlNTU1NWM1MDAwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchRight\"\n    },\n    \"anim9\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim9\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDBjZmZhMDAwMDAwMDAwMGZmYWZmYWZmMDAwMDAwZmZmY2FhYWFmZmZmMDBmMGNjY2FhYWFhYWNjYzBmZjBhY2NhYWNjYWFjY2EwZjAwYWZhYWNjY2NhYWZhMDAwMGVmYWFhYWFhYWFmZTAwMDA0ZjllYmZmYmU5ZjQwMDAwNGYxNGQ4OGQ0MWY0MDAwMGYwZDRkZGRkNGQwZjAwMDBiMGZiYmJiYmJmMGIwMDAwZGJjZmNhYWNmY2JkMDAwMGJiYWZhYWFhZmFiYjAwMDAwMGNmYWFhYWZjMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward0\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}","images.g.ts":"","voidbattle.ts":"enum Direction {\n    Left = 0,\n    Up = 1,\n    Right = 2,\n    Down = 3\n}\n\nenum SpriteAction {\n    Idle,\n    Move,\n    Fall,\n    Die\n}\n\nnamespace SpriteKind {\n    export const Detector = SpriteKind.create();\n}\n\nnamespace animation {\n    const stateNamespace = \"__animation\";\n\n    interface AnimationState {\n        animations: SpriteAnimation[];\n    }\n\n    // this will tell the state machines that their animations are still active\n    export function updateActiveStateAnimations(): void {\n        let state: AnimationState = game.currentScene().data[stateNamespace];\n        if(state && state.animations) {\n            state.animations.forEach((anim: SpriteAnimation) => {\n                if (anim.sprite instanceof VoidBattle.VBSprite) {\n                    const vbs = anim.sprite as VoidBattle.VBSprite;\n                    if(vbs.sm)\n                        vbs.sm.animationActive = true;\n                }\n            });\n        }\n    }\n\n    export class Animation {\n        constructor(public frames: Image[], public frameInterval: number = 500, public loop: boolean = false){}\n        runAnimationOnSprite(sprite: Sprite) {\n            animation.runImageAnimation(sprite, this.frames, this.frameInterval, this.loop);\n        }\n    }\n\n    interface AnimationMap {\n        [key: number]: Animation[];\n    }\n\n    let stateMachines: AnimationStateMachine[];\n\n    // should allow you to change the sprite's animation based on its direction\n    // what should i put in here and what should just be part of VBSprite?\n    export class AnimationStateMachine {\n        dir: Direction = Direction.Down;\n        lastDir: Direction = Direction.Down;\n        sprite: VoidBattle.VBSprite;\n        lastAction: number;\n        animationActive: boolean = false;\n        stateAnimations: AnimationMap = {};\n\n        constructor(sprite: VoidBattle.VBSprite) {\n            this.sprite = sprite;\n            this.lastAction = sprite._action;\n            this._init();\n        }\n\n        _init() {\n            if (!stateMachines) {\n                stateMachines = [];\n                game.eventContext().registerFrameHandler(scene.ANIMATION_UPDATE_PRIORITY, () => {\n                    // see which animations are still active\n                    animation.updateActiveStateAnimations();\n\n                    // remove state machines of dead sprites\n                    stateMachines = stateMachines.filter((sm: AnimationStateMachine) => {\n                        if (sm.sprite.flags & sprites.Flag.Destroyed)\n                            return false;\n                        sm.update();\n                        return true;\n                    });\n                });\n            }\n            stateMachines.push(this);\n        }\n\n        update() {\n            // detect if the action has been changed\n            if(this.lastAction != this.sprite._action || this.lastDir != this.dir) {\n                this.lastAction = this.sprite._action;\n                this.lastDir = this.dir;\n                const anim = this.getAnimationFromState(this.lastAction)\n                if(anim)\n                    anim.runAnimationOnSprite(this.sprite);\n            }\n            this.animationActive = false;\n        }\n\n        setDirection(direction: Direction) {\n            this.dir = direction;\n        }\n\n        // You should really put these in the order [left, up, right, down]\n        setStateAnimations(state: number, animations: Animation[]) {\n            this.stateAnimations[state] = animations;\n        }\n\n        getAnimationFromState(state: number): Animation {\n            const anims: Animation[] = this.stateAnimations[state];\n            if (!anims || anims.length == 0)\n                return null;\n            \n            if (anims.length == 1 || this.dir < 0 || this.dir >= anims.length)\n                return anims[0];\n            \n            return anims[this.dir];\n\n        }\n        //constructor(frameInterval: number, )\n    }\n\n}\n\n\nnamespace VoidBattle {\n    let collisionSprite: Sprite\n    let detectionSetUp: boolean = false;\n\n    // does not work\n    export function getCollisionsAtLocation(location: tiles.Location): Sprite[] {\n        const s: Sprite = sprites.create(assets.image`hitboxPlaceholder`);\n        s.setFlag(SpriteFlag.Invisible, true);\n        tiles.placeOnTile(s, location);\n        \n        const overlaps = game.currentScene().physicsEngine.overlaps(s);\n        sprites.destroy(s);\n        return overlaps;\n    }\n\n    export function vbCollisionCheck(location: tiles.Location, callback: (overlaps: Sprite[]) => void) {\n        control.runInParallel(() => {\n            tiles.placeOnTile(collisionSprite, location);\n            pause(1);\n            const overlaps = game.currentScene().physicsEngine.overlaps(collisionSprite);\n            callback(overlaps);\n        });\n    }\n\n    export class SpriteDetector extends sprites.ExtendableSprite {\n        \n        overlappers: Sprite[] = [];\n        cb: (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => void;\n        isActive: boolean = true;\n        framesToWait: number = 2;\n\n        constructor(loc: tiles.Location, callback: (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => void) {\n            super(assets.image`hitboxPlaceholder`, SpriteKind.Detector);\n            this.setFlag(SpriteFlag.Invisible, true);\n            tiles.placeOnTile(this, loc);\n            this.cb = callback;\n        }\n\n        update(deltaTimeMillis: number) {\n            this.framesToWait --\n            if (this.framesToWait <= 0)\n                if (this.isActive && this.cb) {\n                    console.log(\"hi\");\n                    console.log(this.overlappers);\n                    const isOnWall: boolean = tiles.tileAtLocationIsWall(this.tilemapLocation());\n                    this.cb(this, this.overlappers, isOnWall);\n                }\n            this.overlappers = [];\n        }\n    }\n\n    const tileSize = 16;\n    export class VBSprite extends sprites.ExtendableSprite {\n        sm: animation.AnimationStateMachine;\n        dir: Direction = Direction.Down;\n        onDeathCallback: () => void;\n        canPush: boolean = false;\n        pushable: boolean = false;\n        hitboxWidth: number = 16;\n        hitboxHeight: number = 16;\n\n        constructor(spriteImage: Image, kind?: number, dir?: Direction) {\n            super(spriteImage, kind);\n            this.flags ^= SpriteFlag.GhostThroughWalls;\n            this.setDimensions(this.hitboxWidth, this.hitboxHeight);\n            //this._hitbox.ox = Fx8(-4);\n            //this._hitbox.oy = Fx8(-4);\n            this.sm = new animation.AnimationStateMachine(this);\n            this._action = SpriteAction.Idle;\n\n            if(!detectionSetUp) {\n                console.log(\"setting up detection!\");\n                sprites.onOverlap(SpriteKind.Detector, SpriteKind.Player, function (sprite: Sprite, otherSprite: Sprite) {\n                    console.log(\"hello\")\n                    if (sprite instanceof VoidBattle.SpriteDetector) {\n                        const sd = sprite as VoidBattle.SpriteDetector;\n                        sd.overlappers.push(otherSprite);\n                        console.log(sd.overlappers);\n                    }\n                });\n                detectionSetUp = true;\n            }\n\n            if (dir)\n                this.setDirection(dir);\n            else\n                this.setDirection(Direction.Down);\n            \n        }\n\n        // Accounts for the offset from the hitbox, which is wider so we can\n        // detect neighboring sprites\n        draw(drawLeft: number, drawTop: number) {\n            drawLeft += (this.hitboxWidth - this.image.width) >> 1;\n            drawTop += (this.hitboxHeight - this.image.height) >> 1;\n            super.draw(drawLeft, drawTop);\n        }\n\n        setPosition(x: number, y: number): void {\n            const physics = game.currentScene().physicsEngine;\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n            // call it a second time to correct a bug where sprites that ghost \n            // through walls are still pushed out\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n        }\n\n        update(deltaTimeMillis: number) {\n            if (this.tileKindAt(TileDirection.Center, assets.image`blankTile`)) {\n                sprites.destroy(this, effects.fire, 2000);\n                this.die();\n            }\n        }\n\n        die() {\n            if (this.onDeathCallback){\n                control.runInParallel(this.onDeathCallback);\n            } \n        }\n\n        onDeath(cb: () => void) {\n            this.onDeathCallback = cb;\n        }\n\n        setDirection(dir: Direction) {\n            this.dir = dir;\n            this.sm.setDirection(dir);\n        }\n\n        getNeighboringLocation(dir: Direction): tiles.Location {\n            const loc: tiles.Location = this.tilemapLocation();\n            let neighbor: tiles.Location;\n            switch (dir) {\n                case Direction.Left:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Left);\n                    break;\n                case Direction.Up:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Top);\n                    break;\n                case Direction.Right:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Right);\n                    break;\n                case Direction.Down:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Bottom);\n                    break;\n            }\n            return neighbor;\n        }\n        \n        // moves this sprite in a certain direction. Returns true if the move\n        // was successful\n        move(dir: Direction, turnToFaceDirection: boolean = false): boolean {\n            const neighbor = this.getNeighboringLocation(dir);\n            \n            if(turnToFaceDirection)\n                this.setDirection(dir);\n\n            if (tiles.tileAtLocationIsWall(neighbor)) {\n                scene.cameraShake(2, 200);\n                return false;\n            }\n        \n            //const overlaps: Sprite[] = getCollisionsAtLocation(neighbor);\n            const neighborSprite = this.getNeighboringSprite(neighbor);\n\n            if(neighborSprite)\n                return false;\n            \n            // gotta do it twice because there's a bug where it ignores the ghost \n            // through walls flag\n            //tiles.placeOnTile(this, neighbor);\n            tiles.placeOnTile(this, neighbor);\n            return true;\n            \n        }\n\n        getNeighboringSprite(loc: tiles.Location): Sprite {\n            const engine = game.currentScene().physicsEngine;\n            let neighbors: Sprite[];\n            // the overlaps function simply does not work :/ i hate this engine so much\n            /*\n            if(engine instanceof ArcadePhysicsEngine){\n                const ape = engine as ArcadePhysicsEngine;\n                neighbors = ape.map.neighbors(this)\n            }\n            */\n            let overlaps = game.currentScene().physicsEngine.overlaps(this);\n            for(let i = 0; i < overlaps.length; i++) {\n                const s = overlaps[i];\n                if (s.tilemapLocation().column == loc.column && s.tilemapLocation().row == loc.row)\n                    return s;\n            }\n            return null;\n        }\n\n    }\n\n    export class VBPlayerSprite extends VBSprite {\n        ctrl: controller.Controller;\n        isMyTurn: boolean = false;\n        // used when the player has already started an input but is waiting on some\n        // number of processes to complete before control can be restored or the turn\n        // can end\n        awaitingTurnCompletion: boolean = false;\n        turnEndCallback: () => void;\n        storedTile: Image;\n        // failsafe if there are shenanigans with the turns\n        controlsLocked: boolean = false;\n\n        constructor(spriteImage: Image, ctrl: controller.Controller, kind?: number, dir?: Direction){\n            super(spriteImage, kind, dir);\n            this.ctrl = ctrl;\n            this._setupButtonEvents();\n            this.canPush = true;\n            this.pushable = true;\n        }\n\n        _setupButtonEvents() {\n            // gotta do this for literally every event it seems. kill me\n            // maybe there's a better way, but if there is I haven't found one\n            this.ctrl.onButtonEvent(ControllerButton.Left, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Left, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Right, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Right, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Up, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Up, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Down, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Down, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.A, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.A, ControllerButtonEvent.Pressed);\n            });\n        }\n\n        startTurn() {\n            this.isMyTurn = true;\n        }\n\n        onTurnEnd(cb: () => void) {\n            this.turnEndCallback = cb;\n        }\n\n        endTurn() {\n            this.awaitingTurnCompletion = false;\n            this.isMyTurn = false;\n            if( this.turnEndCallback ) this.turnEndCallback();\n        }\n\n        handleButtonInput(button: ControllerButton, event: ControllerButtonEvent) {\n            if(this.awaitingTurnCompletion || this.controlsLocked || !this.isMyTurn) return;\n            \n            switch(button) {\n                case ControllerButton.Left:\n                    this.step(Direction.Left);\n                    break;\n                case ControllerButton.Up:\n                    this.step(Direction.Up);\n                    break;\n                case ControllerButton.Right:\n                    this.step(Direction.Right);\n                    break;\n                case ControllerButton.Down:\n                    this.step(Direction.Down);\n                    break;\n                case ControllerButton.A:\n                    this.tryPrimaryAction();\n                    break;\n            }\n            //if (moveCompleted) this.endTurn();\n        }\n\n        // step in a particular direction\n        // if there is an immovable obstacle, face it but do not move\n        step(dir: Direction) {\n            this.awaitingTurnCompletion = true;\n\n            this.setDirection(dir);\n            const neighbor = this.getNeighboringLocation(dir);\n\n            const detector = new SpriteDetector(neighbor, (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => {\n                if (isOnWall)\n                    scene.cameraShake(2, 200);\n                else if (overlappers && overlappers.length > 0) {}\n                else\n                    tiles.placeOnTile(this, neighbor);\n                \n                sprites.destroy(detector);//, effects.spray, 200);\n                this.awaitingTurnCompletion = false;\n                this.endTurn();\n            });\n        }\n\n        // attempts to interact using the A button. If the action fails, return false\n        tryPrimaryAction() {\n            const neighbor: tiles.Location = this.getNeighboringLocation(this.dir);\n            \n            if (tiles.tileAtLocationIsWall(neighbor))\n                return;\n            else if (tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && this.storedTile) {\n                tiles.setTileAt(neighbor, this.storedTile);\n                this.storedTile = null;\n                this.endTurn();\n            } else if (!tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && !this.storedTile) {\n                this.storedTile = tiles.getTileImage(neighbor);\n                tiles.setTileAt(neighbor, assets.image`blankTile`);\n                this.endTurn();\n            }\n        }\n    }\n}\n\n","tilespritemap.ts":"namespace vb {\r\n    let _map: VBMap;\r\n\r\n    interface TileSpriteMap {\r\n        [key: string]: Sprite;\r\n    }\r\n\r\n    export class Location {\r\n        constructor(public column: number, public row: number) { }\r\n\r\n        get key() {\r\n            return makeMapKey(this);\r\n        }\r\n\r\n        get tl() {\r\n            return tiles.getTileLocation(this.column, this.row);\r\n        }\r\n    }\r\n\r\n    export class VBMap {\r\n        spriteMap: TileSpriteMap;\r\n        \r\n        placeOnTile(sprite: Sprite, location: Location) {\r\n            this.spriteMap[location.key] = sprite;\r\n            tiles.placeOnTile(sprite, location.tl);\r\n        }\r\n\r\n        removeFromTile(location: Location) {\r\n            const oldKey = location.key;\r\n            if (this.spriteMap[oldKey] === undefined)\r\n                return;\r\n            delete this.spriteMap[oldKey];\r\n        }\r\n\r\n        moveFromTile(oldLocation: Location, newLocation: Location) {\r\n            const oldKey = oldLocation.key;\r\n            const newKey = newLocation.key;\r\n            if (this.spriteMap[oldKey] === undefined) {\r\n                // error: there's no sprite at this tile!\r\n                return;\r\n            }\r\n\r\n            if (this.spriteMap[newKey] !== undefined) {\r\n                // error: there's already a sprite at this tile!\r\n                return;\r\n            }\r\n\r\n            this.spriteMap[newKey] = this.spriteMap[oldKey];\r\n            this.removeFromTile(oldLocation);\r\n        }\r\n\r\n        isTileOccupied(location: Location): boolean {\r\n            return this.spriteMap[location.key] !== undefined;\r\n        }\r\n\r\n        getSpriteAtTile(location: Location): Sprite {\r\n            return this.spriteMap[location.key];\r\n        }\r\n\r\n    }\r\n\r\n    export function currentMap(): VBMap {\r\n        init();\r\n        return _map;\r\n    }\r\n\r\n    function init() {\r\n        if (!_map) {\r\n            _map = new VBMap();\r\n        }\r\n    }\r\n\r\n    export function makeMapKey(location: Location): string {\r\n        return location.column + \",\" + location.row;\r\n    }\r\n\r\n    export function setTilemap(tilemap: tiles.TileMapData) {\r\n        scene.setTileMapLevel(tilemap);\r\n    }\r\n}\r\n","pxt.json":"{\n    \"name\": \"Void Battle\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\",\n        \"images.g.jres\",\n        \"images.g.ts\",\n        \"voidbattle.ts\",\n        \"tilespritemap.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}},{"timestamp":1761525541681,"editorVersion":"2.0.61","text":{"main.ts":"tiles.setCurrentTilemap(tilemap`level1`);\r\nscene.centerCameraAt(96, 68);\r\n//game.debug = true;\r\nlet isP1Turn: boolean = true;\r\n\r\nlet player1Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player1, SpriteKind.Player, Direction.Up);\r\nplayer1Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`heroWalkLeft`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkBack`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkRight`, 200, true),\r\n    new animation.Animation(assets.animation`heroWalkFront`, 200, true)\r\n]);\r\ntiles.placeOnTile(player1Sprite, tiles.getTileLocation(1, 7));\r\nplayer1Sprite.onTurnEnd(function() {\r\n    isP1Turn = false;\r\n    player2Sprite.startTurn();\r\n});\r\nplayer1Sprite.onDeath(function() {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 2 Wins!\");\r\n    game.gameOverPlayerWin(2);\r\n})\r\n\r\nlet player2Sprite = new VoidBattle.VBPlayerSprite(img`\r\n    . . . . . . f f f f . . . . . .\r\n    . . . . f f f 2 2 f f f . . . .\r\n    . . . f f f 2 2 2 2 f f f . . .\r\n    . . f f f e e e e e e f f f . .\r\n    . . f f e 2 2 2 2 2 2 e e f . .\r\n    . . f e 2 f f f f f f 2 e f . .\r\n    . . f f f f e e e e f f f f . .\r\n    . f f e f b f 4 4 f b f e f f .\r\n    . f e e 4 1 f d d f 1 4 e e f .\r\n    . . f e e d d d d d d e e f . .\r\n    . . . f e e 4 4 4 4 e e f . . .\r\n    . . e 4 f 2 2 2 2 2 2 f 4 e . .\r\n    . . 4 d f 2 2 2 2 2 2 f d 4 . .\r\n    . . 4 4 f 4 4 5 5 4 4 f 4 4 . .\r\n    . . . . . f f f f f f . . . . .\r\n    . . . . . f f . . f f . . . . .\r\n`, controller.player2, SpriteKind.Player, Direction.Down);\r\nplayer2Sprite.sm.setStateAnimations(SpriteAction.Idle, [\r\n    new animation.Animation(assets.animation`witchLeft`, 200, true),\r\n    new animation.Animation(assets.animation`witchBack`, 200, true),\r\n    new animation.Animation(assets.animation`witchRight`, 200, true),\r\n    new animation.Animation(assets.animation`witchForward`, 200, true)\r\n]);\r\ntiles.placeOnTile(player2Sprite, tiles.getTileLocation(2, 7));\r\n//tiles.placeOnTile(player2Sprite, tiles.getTileLocation(10, 2));\r\nplayer2Sprite.onTurnEnd(function () {\r\n    isP1Turn = true;\r\n    player1Sprite.startTurn();\r\n});\r\nplayer2Sprite.onDeath(function () {\r\n    player1Sprite.controlsLocked = true;\r\n    player2Sprite.controlsLocked = true;\r\n    pause(2000);\r\n    game.setGameOverMessage(true, \"Player 1 Wins!\");\r\n    game.gameOverPlayerWin(1);\r\n})\r\n\r\ngame.onPaint(function() {\r\n    // draw HUD\r\n    screen.drawLine(0, 0, 160, 0, isP1Turn ? 4 : 9);\r\n    screen.fillRect(0, 1, 160, 22, isP1Turn ? 2 : 6);\r\n    screen.drawLine(0, 23, 160, 23, isP1Turn ? 14 : 8);\r\n\r\n    if (player1Sprite.storedTile)\r\n        screen.drawImage(player1Sprite.storedTile, 5, 5);\r\n    \r\n    if (player2Sprite.storedTile)\r\n        screen.drawImage(player2Sprite.storedTile, 141, 5);\r\n\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 2, 2);\r\n    screen.drawTransparentImage(assets.image`selectedItemFrame`, 138, 2);\r\n\r\n    screen.print(\"P\" + (isP1Turn ? \"1\" : \"2\") + \" Turn\", 60, 5, 1);\r\n});\r\n\r\nplayer1Sprite.startTurn();","README.md":" ","assets.json":"","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"level1\": {\n        \"id\": \"level1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAwYzAwMDkwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDIwMDAwMDAwMDAwMDAwMDAwMDEwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMDAwMDAyMDAyMDAwMjAwMDAyMDAyMDAwMDAwMDAyMDIyMjIyMjIyMjIyMg==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"sprites.dungeon.floorLight2\",\n            \"sprites.castle.tileGrass1\"\n        ],\n        \"displayName\": \"level1\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","images.g.jres":"{\n    \"image2\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"blankTile\"\n    },\n    \"image1\": {\n        \"data\": \"hwQUABQAAAAAu7u7u7u7u7sAAACwHREREREREdELAADb0bu7u7u7ux29AAAbvQAAAAAAANuxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbCwAAAAAAALCxAAAbvQAAAAAAANuxAADb0bu7u7u7ux29AACwHREREREREdELAAAAu7u7u7u7u7sAAAA=\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"selectedItemFrame\"\n    },\n    \"image3\": {\n        \"data\": \"hwQOAA4AAAARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREAEREREREREQARERERERERABEREREREREA\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"hitboxPlaceholder\"\n    },\n    \"anim1\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim1\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmYyZmYyZmYwMDAwMDBmMGZmMjIyMmZmMGYwMDAwZmZlZmVlZWVmZWZmMDAwMGZmMmUyMjIyZTJmZTAwMDBlZmYyZmZmZjJmZmUwMDAwZmZmZmVlZWVmZmZmMDBmMGVmYmY0ZmY0ZmJmZTBmZjBlZTE0ZGZmZDQxZWUwZjAwZWZkZWRkZGRlZGZlMDAwMGYwZWU0NDQ0ZWUwZjAwMDA0ZTJmMjIyMmYyZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY1NDQ1ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDBmMGVmZjJmZmZmMmZmZTBmZjBmZmZmZWVlZWZmZmYwZjAwZWZiZjRmZjRmYmZlMDAwMGVmMTRkZmZkNDFmZTAwMDBmMDRlZGRkZGU0ZWYwMDAwZWYyZjIyZTJkZGU0MDAwMDRlMmYyMmUyZGQwZTAwMDAwMDRmNTRmNWVlMDAwMDAwMDBmZmZmZmYwZjAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZjJmZjJmZjAwMDAwMGYwZmYyMjIyZmYwZjAwMDBmZmVmZWVlZWZlZmYwMDAwZmYyZTIyMjJlMmZlMDAwMGVmZjJmZmZmMmZmZTAwMDBmZmZmZWVlZWZmZmYwMGYwZWZiZjRmZjRmYmZlMGZmMGVlMTRkZmZkNDFlZTBmMDBlZmRlZGRkZGVkZmUwMDAwZjBlZTQ0NDRlZTBmMDAwMDRlMmYyMjIyZjJlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjU0NDVmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmMmZmMmZmMDAwMDAwZjBmZjIyMjJmZjBmMDAwMGZmZWZlZWVlZmVmZjAwMDBlZjJlMjIyMmUyZmYwMGYwZWZmMmZmZmYyZmZlMGZmMGZmZmZlZWVlZmZmZjBmMDBlZmJmNGZmNGZiZmUwMDAwZWYxNGRmZmQ0MWZlMDAwMGZlNGVkZGRkZTQwZjAwMDA0ZWRkMmUyMmYyZmUwMDAwZTBkZDJlMjJmMmU0MDAwMDAwZWU1ZjQ1ZjQwMDAwMDAwMGYwZmZmZmZmMDAwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkFront\"\n    },\n    \"anim2\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim2\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDBmZmZmZmYwMDAwMDAwMGYwZjJlZWVlZmYwMDAwMDAyZjIyZWZlZWZlMGYwMDAwZWZlZWZlZWZlZTBmMDBmMDJlMjJlMmZlZmYwZjAwZjBlMmZmZmYyMmUyMGYwMGYwZmZlZWZlZmZmZmZmMDBmMGVlNDRiZjRlZTRmZjAwMDBlZmRkMWZkNGU0ZmUwMDAwZjBkZGRkZTRlZTBmMDAwMGYwNGU0NGVlZmYwMDAwMDBmMDIyZTJkZDA0MDAwMDAwZjAyMmUyZGQwZTAwMDAwMGYwNTVmNGVlMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwMDAwMGZmMGYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZWRlZWVlMGYwMDAwZjA0ZWRlNGQwZjAwMDAwMGYwMjJkZWVkMGYwMDAwMDBmZjU1ZWZmZWZmMDAwMDAwZmZmZmZmZmZmZjAwMDAwMGYwZmYwMGYwMGYwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZjBmMmVlZWVmZjAwMDAwMDJmMjJlZmVlZmUwZjAwMDBlZmVlZmVlZmVlMGYwMGYwMmUyMmUyZmVmZjBmMDBmMGUyZmZmZjIyZTIwZjAwZjBmZmVlZmVmZmZmZmYwMGYwZWU0NGJmNGVlNGZmMDAwMGVmZGQxZmQ0ZTRmZTAwMDBmMGRkZGRlNGVlMGYwMDAwZjA0ZTQ0ZWVmZjAwMDAwMGYwMjJlMmRkMDQwMDAwMDBmMDIyZTJkZDBlMDAwMDAwZjA1NWY0ZWUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmMGYyZWVlZWZmMDAwMDAwMmYyMmVmZWVmZTBmMDAwMGVmZWVmZWVmZWUwZjAwZjAyZTIyZTJmZWZmMGYwMGYwZTJmZmZmMjJlMjBmMDBmMGZmZWVmZWZmZmZmZjAwZjBlZTQ0YmY0ZWU0ZmYwMDAwZWZkZDFmZDRlNGZlMDAwMGYwZGRkZGU0ZWUwZjAwMDBmMDRlNDRkZTRkMDAwMDAwZjAyMjIyZGVlZDAwMDAwMGZmNTU0NGVmZmUwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjBmZjAwZjAwZjAwMDA=\",\n        \"displayName\": \"heroWalkLeft\"\n    },\n    \"anim3\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim3\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmZmZjAwMDAwMDAwZmZlZWVlMmYwZjAwMDBmMGVmZWVmZTIyZjIwMDAwZjBlZWZlZWZlZWZlMDAwMGYwZmZlZjJlMjJlMjBmMDBmMDJlMjJmZmZmMmUwZjAwZmZmZmZmZWZlZWZmMGYwMGZmNGVlNGZiNDRlZTBmMDBlZjRlNGRmMWRkZmUwMDAwZjBlZTRlZGRkZDBmMDAwMDAwZmZlZTQ0ZTQwZjAwMDAwMDQwZGQyZTIyMGYwMDAwMDBlMGRkMmUyMjBmMDAwMDAwZjBlZTRmNTUwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlZWVkZWRkMGYwMDAwMDBmMGQ0ZWRlNDBmMDAwMDAwZjBkZWVkMjIwZjAwMDAwMGZmZWZmZTU1ZmYwMDAwMDBmZmZmZmZmZmZmMDAwMDAwZjAwZjAwZmYwZjAwMDAwMDAwZmZmZmZmMDAwMDAwMDBmZmVlZWUyZjBmMDAwMGYwZWZlZWZlMjJmMjAwMDBmMGVlZmVlZmVlZmUwMDAwZjBmZmVmMmUyMmUyMGYwMGYwMmUyMmZmZmYyZTBmMDBmZmZmZmZlZmVlZmYwZjAwZmY0ZWU0ZmI0NGVlMGYwMGVmNGU0ZGYxZGRmZTAwMDBmMGVlNGVkZGRkMGYwMDAwMDBmZmVlNDRlNDBmMDAwMDAwNDBkZDJlMjIwZjAwMDAwMGUwZGQyZTIyMGYwMDAwMDBmMGVlNGY1NTBmMDAwMDAwMDBmZmZmZmYwMDAwMDAwMDAwZjBmZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmYwMDAwMDAwMGZmZWVlZTJmMGYwMDAwZjBlZmVlZmUyMmYyMDAwMGYwZWVmZWVmZWVmZTAwMDBmMGZmZWYyZTIyZTIwZjAwZjAyZTIyZmZmZjJlMGYwMGZmZmZmZmVmZWVmZjBmMDBmZjRlZTRmYjQ0ZWUwZjAwZWY0ZTRkZjFkZGZlMDAwMGYwZWU0ZWRkZGQwZjAwMDAwMGQ0ZWQ0NGU0MGYwMDAwMDBkZWVkMjIyMjBmMDAwMDAwZWZmZTQ0NTVmZjAwMDAwMGZmZmZmZmZmZmYwMDAwMDBmMDBmMDBmZjBmMDA=\",\n        \"displayName\": \"heroWalkRight\"\n    },\n    \"anim4\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim4\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGZmZmYwMDAwMDAwMDAwZmZlZWVlZmYwMDAwMDBmMGVlZmVlZmVlMGYwMDAwZmZmZjJmZjJmZmZmMDAwMGZmMmUyZWUyZTJmZjAwMDBlZmYyZjIyZjJmZmUwMDAwZmYyZmUyMmVmMmZmMDBmMGVmMmZlZmZlZjJmZTBmZjBlZWZmZWVlZWVmZWUwZjAwZWZlZWVlZWVlZWZlMDAwMGYwZWVlZWVlZWUwZjAwMDA0ZWZmZmZmZmZmZTQwMDAwZDQyZjIyMjJmMjRkMDAwMDQ0NGY0NDQ0ZjQ0NDAwMDAwMGYwZmZmZjBmMDAwMDAwMDBmMDBmZjAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmMGZmMmZmMmZmMGYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMmZmZjJmZTAwMDBmZjJmZWYyZWYyZmYwMDAwZWZmMmVmMmVlZmZlMDBmMGVmZmZlZWZlZWVmZTBmZjBlZmVlZWVlZWVlZmUwZjAwZjBlZWVlZWVlZTBmMDAwMGUwZmZmZmZmZmZlNDAwMDA0MDJmMjIyMmRlNGQwMDAwZTBmZmZmZmZlZTA0MDAwMDAwZmYwZjAwMDAwMDAwMDAwMDAwZmZmZjAwMDAwMDAwMDBmZmVlZWVmZjAwMDAwMGYwZWVmZWVmZWUwZjAwMDBmZmZmMmZmMmZmZmYwMDAwZmYyZTJlZTJlMmZmMDAwMGVmZjJmMjJmMmZmZTAwMDBmZjJmZTIyZWYyZmYwMGYwZWYyZmVmZmVmMmZlMGZmMGVlZmZlZWVlZWZlZTBmMDBlZmVlZWVlZWVlZmUwMDAwZjBlZWVlZWVlZTBmMDAwMDRlZmZmZmZmZmZlNDAwMDBkNDJmMjIyMmYyNGQwMDAwNDQ0ZjQ0NDRmNDQ0MDAwMDAwZjBmZmZmMGYwMDAwMDAwMGYwMGZmMDBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmMDAwMDAwMDAwMGZmZWVlZWZmMDAwMDAwZjBlZWZlZWZlZTBmMDAwMGYwZmYyZmYyZmYwZjAwMDBmZjJlMmVlMmUyZmYwMDAwZWYyZmZmMmYyZmZlMDAwMGZmMmZlMmZlZjJmZjAwMDBlZmZlZTJmZTJmZmUwMGYwZWZlZWVmZWVmZmZlMGZmMGVmZWVlZWVlZWVmZTBmMDBmMGVlZWVlZWVlMGYwMDAwNGVmZmZmZmZmZjBlMDAwMGQ0ZWQyMjIyZjIwNDAwMDA0MGVlZmZmZmZmMGUwMDAwMDAwMDAwZjBmZjAwMDA=\",\n        \"displayName\": \"heroWalkBack\"\n    },\n    \"anim5\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim5\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwY2MwMDAwMDAwMDAwMDBiY2M1MDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmJmZWZmZWZiZmYwMDAwZmYxZmJmZmJmMWZmMDAwMGYwYmZiYmJiZmIwZjAwMDBlMGZlZWVlZWVmMGUwMDAwYmViY2I1NWJmYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward\"\n    },\n    \"anim6\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim6\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGNjMGMwMDAwMDAwMDAwMDA1Y2NiMDAwMDAwMDAwMGNjNWNjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGZmNTU1NTU1NTVmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGYwZmZmZmZmZmYwZjAwMDBlMGZlZmZmZmZmMGUwMDAwYmViZmI1NWJjYmViMDAwMGVlNWY1NTU1ZjVlZTAwMDAwMGJjNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZWJmZWZmYmZlYjAwMDBlMGJiYmU1YmY1ZWUwMDAwMDBlYzVlNTU1NTBmMDAwMDAwZjBmZmZmZmYwMDAwMDAwMDAwYzBjYzAwMDAwMDAwMDAwMGJjYzUwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmZmZmZmZmZmZmZmYwMDAwZjBmZmZmZmZmZjBmMDAwMGUwZmVmZmZmZWYwZTAwMDBiZWJjYjU1YmZiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjYzAwMDAwMDAwMDAwMDAwNWMwYzAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZmZmZmZmZmZmZmMDAwMGZmZmZmZmZmZmZmZjAwMDBmMGZmZmZmZmVlMGYwMDAwYmVmYmVlZWViZTBlMDAwMGVlNWZiNWViYmIwZTAwMDBmMDU1NTVlNWNlMDAwMDAwMDBmZmZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchBack\"\n    },\n    \"anim7\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim7\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDA1YzBjMDAwMDAwMDAwMGNjNTVjNWNjMDAwMDAwY2NjYzU1NTViY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWM1NWJiYmI1NWY1MDAwMGYwNTU1NTU1NTVmZjAwMDAwMGVmZWViZmVlZmYwMDAwMDBlZmJiMWZmYmZmMDAwMDAwYmZiYmJiZmIwZjAwMDAwMGYwZWVlZWVmMGUwMDAwMDBmMGI1ZWJiYjBlMDAwMDAwNWY1NWU1YmIwZTAwMDAwMGJjNTU1NWVlMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGNjYzUwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiZWJmZTBmMDAwMDAwZjBlZWJlZWIwZjAwMDAwMDVmYmJiZWViMDAwMDAwMDA1YzU1ZTVmZTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1NWM1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZjA1NTU1NTU1NWZmMDAwMDAwZWZlZWJmZWVmZjAwMDAwMGVmYmIxZmZiZmYwMDAwMDBiZmJiYmJmYjBmMDAwMDAwZjBlZWVlZWYwZTAwMDAwMGYwYjVlYmJiMGUwMDAwMDA1ZjU1ZTViYjBlMDAwMDAwYmM1NTU1ZWUwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwY2NjNTAwMDAwMDAwMDBjYzU1YzVjYzAwMDAwMGNjY2M1NTU1YmNjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVjNTViYmJiNTVmNTAwMDBmMDU1NTU1NTU1ZmYwMDAwMDBlZmVlYmZlZWZmMDAwMDAwZWZiYjFmZmJmZjAwMDAwMGJmYmJiYmZiMGYwMDAwMDBmMGVlZWViZWViMDAwMDAwNWZiNWJiYmVlYjAwMDAwMDVjNTU1NWVlMGUwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchLeft\"\n    },\n    \"anim8\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim8\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGMwMGMwMDAwMDAwMDAwMDBjMGM1MDAwMDAwMDAwMGNjNWM1NWNjMDAwMDAwY2NjYjU1NTVjY2NjMDBjMGJiYjU1NTU1NWJiYjBjYzA1YmI1NWJiNTViYjUwYzAwNWY1NWJiYmI1NWM1MDAwMGZmNTU1NTU1NTUwZjAwMDBmZmVlZmJlZWZlMDAwMDAwZmZiZmYxYmJmZTAwMDAwMGYwYmZiYmJiZmIwMDAwMDBlMGZlZWVlZTBmMDAwMDAwZTBiYmJlNWIwZjAwMDAwMGUwYmI1ZTU1ZjUwMDAwMDAwMGVlNTU1NWNiMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMDVjY2MwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBlZmJlYmJmYjAwMDAwMGYwYmVlYmVlMGYwMDAwMDAwMGJlZWJiYmY1MDAwMDAwMDBlZjVlNTVjNTAwMDAwMDAwZjBmZmZmMGYwMDAwMDAwMDAwYzAwYzAwMDAwMDAwMDAwMGMwYzUwMDAwMDAwMDAwY2M1YzU1Y2MwMDAwMDBjY2NiNTU1NWNjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1ZjU1YmJiYjU1YzUwMDAwZmY1NTU1NTU1NTBmMDAwMGZmZWVmYmVlZmUwMDAwMDBmZmJmZjFiYmZlMDAwMDAwZjBiZmJiYmJmYjAwMDAwMGUwZmVlZWVlMGYwMDAwMDBlMGJiYmU1YjBmMDAwMDAwZTBiYjVlNTVmNTAwMDAwMDAwZWU1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBjMDBjMDAwMDAwMDAwMDAwNWNjYzAwMDAwMDAwMDBjYzVjNTVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1MGYwMDAwZmZlZWZiZWVmZTAwMDAwMGZmYmZmMWJiZmUwMDAwMDBmMGJmYmJiYmZiMDAwMDAwYmVlYmVlZWUwZjAwMDAwMGJlZWJiYjViZjUwMDAwMDBlMGVlNTU1NWM1MDAwMDAwMDBmMGZmZmYwZjAwMDA=\",\n        \"displayName\": \"witchRight\"\n    },\n    \"anim9\": {\n        \"namespace\": \"myAnimations\",\n        \"id\": \"anim9\",\n        \"mimeType\": \"application/mkcd-animation\",\n        \"data\": \"NjQwMDEwMDAxMDAwMDQwMDAwMDAwMGYwZmYwMDAwMDAwMDAwMDBjZmZhMDAwMDAwMDAwMGZmYWZmYWZmMDAwMDAwZmZmY2FhYWFmZmZmMDBmMGNjY2FhYWFhYWNjYzBmZjBhY2NhYWNjYWFjY2EwZjAwYWZhYWNjY2NhYWZhMDAwMGVmYWFhYWFhYWFmZTAwMDA0ZjllYmZmYmU5ZjQwMDAwNGYxNGQ4OGQ0MWY0MDAwMGYwZDRkZGRkNGQwZjAwMDBiMGZiYmJiYmJmMGIwMDAwZGJjZmNhYWNmY2JkMDAwMGJiYWZhYWFhZmFiYjAwMDAwMGNmYWFhYWZjMDAwMDAwMDBmMGZmZmYwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwY2MwMDAwMDAwMDAwMDAwMDVjMGMwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiZWJlZTBmMDAwMGJlZmJlZWVlYmIwZTAwMDBlZTVmYjVlYmJiMGUwMDAwZjA1NTU1ZTVjZTAwMDAwMDAwZmZmZmZmMGYwMDAwMDAwMDAwY2MwYzAwMDAwMDAwMDAwMDVjY2IwMDAwMDAwMDAwY2M1Y2M1Y2MwMDAwMDBjY2NjNTU1NWJjY2MwMGMwYmJiNTU1NTU1YmJiMGNjMDViYjU1YmI1NWJiNTBjMDA1YzU1YmJiYjU1ZjUwMDAwZmY1NTU1NTU1NWZmMDAwMGZmYmZlZmZlZmJmZjAwMDBmZjFmYmZmYmYxZmYwMDAwZjBiZmJiYmJmYjBmMDAwMGUwZmVlZWVlZWYwZTAwMDBiZWJmYjU1YmNiZWIwMDAwZWU1ZjU1NTVmNWVlMDAwMDAwYmM1NTU1Y2IwMDAwMDAwMGYwZmZmZjBmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGNjMDAwMDAwMDAwMDAwYzBjNTAwMDAwMDAwMDBjYzVjYzVjYzAwMDAwMGNjY2I1NTU1Y2NjYzAwYzBiYmI1NTU1NTViYmIwY2MwNWJiNTViYjU1YmI1MGMwMDVmNTViYmJiNTVjNTAwMDBmZjU1NTU1NTU1ZmYwMDAwZmZiZmVmZmVmYmZmMDAwMGZmMWZiZmZiZjFmZjAwMDBmMGVlYmViYmZiMGYwMDAwZTBiYmVlZWViZmViMDAwMGUwYmJiZTViZjVlZTAwMDAwMGVjNWU1NTU1MGYwMDAwMDBmMGZmZmZmZjAwMDA=\",\n        \"displayName\": \"witchForward0\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}","images.g.ts":"","voidbattle.ts":"enum Direction {\n    Left = 0,\n    Up = 1,\n    Right = 2,\n    Down = 3\n}\n\nenum SpriteAction {\n    Idle,\n    Move,\n    Fall,\n    Die\n}\n\nnamespace SpriteKind {\n    export const Detector = SpriteKind.create();\n}\n\nnamespace animation {\n    const stateNamespace = \"__animation\";\n\n    interface AnimationState {\n        animations: SpriteAnimation[];\n    }\n\n    // this will tell the state machines that their animations are still active\n    export function updateActiveStateAnimations(): void {\n        let state: AnimationState = game.currentScene().data[stateNamespace];\n        if(state && state.animations) {\n            state.animations.forEach((anim: SpriteAnimation) => {\n                if (anim.sprite instanceof VoidBattle.VBSprite) {\n                    const vbs = anim.sprite as VoidBattle.VBSprite;\n                    if(vbs.sm)\n                        vbs.sm.animationActive = true;\n                }\n            });\n        }\n    }\n\n    export class Animation {\n        constructor(public frames: Image[], public frameInterval: number = 500, public loop: boolean = false){}\n        runAnimationOnSprite(sprite: Sprite) {\n            animation.runImageAnimation(sprite, this.frames, this.frameInterval, this.loop);\n        }\n    }\n\n    interface AnimationMap {\n        [key: number]: Animation[];\n    }\n\n    let stateMachines: AnimationStateMachine[];\n\n    // should allow you to change the sprite's animation based on its direction\n    // what should i put in here and what should just be part of VBSprite?\n    export class AnimationStateMachine {\n        dir: Direction = Direction.Down;\n        lastDir: Direction = Direction.Down;\n        sprite: VoidBattle.VBSprite;\n        lastAction: number;\n        animationActive: boolean = false;\n        stateAnimations: AnimationMap = {};\n\n        constructor(sprite: VoidBattle.VBSprite) {\n            this.sprite = sprite;\n            this.lastAction = sprite._action;\n            this._init();\n        }\n\n        _init() {\n            if (!stateMachines) {\n                stateMachines = [];\n                game.eventContext().registerFrameHandler(scene.ANIMATION_UPDATE_PRIORITY, () => {\n                    // see which animations are still active\n                    animation.updateActiveStateAnimations();\n\n                    // remove state machines of dead sprites\n                    stateMachines = stateMachines.filter((sm: AnimationStateMachine) => {\n                        if (sm.sprite.flags & sprites.Flag.Destroyed)\n                            return false;\n                        sm.update();\n                        return true;\n                    });\n                });\n            }\n            stateMachines.push(this);\n        }\n\n        update() {\n            // detect if the action has been changed\n            if(this.lastAction != this.sprite._action || this.lastDir != this.dir) {\n                this.lastAction = this.sprite._action;\n                this.lastDir = this.dir;\n                const anim = this.getAnimationFromState(this.lastAction)\n                if(anim)\n                    anim.runAnimationOnSprite(this.sprite);\n            }\n            this.animationActive = false;\n        }\n\n        setDirection(direction: Direction) {\n            this.dir = direction;\n        }\n\n        // You should really put these in the order [left, up, right, down]\n        setStateAnimations(state: number, animations: Animation[]) {\n            this.stateAnimations[state] = animations;\n        }\n\n        getAnimationFromState(state: number): Animation {\n            const anims: Animation[] = this.stateAnimations[state];\n            if (!anims || anims.length == 0)\n                return null;\n            \n            if (anims.length == 1 || this.dir < 0 || this.dir >= anims.length)\n                return anims[0];\n            \n            return anims[this.dir];\n\n        }\n        //constructor(frameInterval: number, )\n    }\n\n}\n\n\nnamespace VoidBattle {\n    let collisionSprite: Sprite\n    let detectionSetUp: boolean = false;\n\n    // does not work\n    export function getCollisionsAtLocation(location: tiles.Location): Sprite[] {\n        const s: Sprite = sprites.create(assets.image`hitboxPlaceholder`);\n        s.setFlag(SpriteFlag.Invisible, true);\n        tiles.placeOnTile(s, location);\n        \n        const overlaps = game.currentScene().physicsEngine.overlaps(s);\n        sprites.destroy(s);\n        return overlaps;\n    }\n\n    export function vbCollisionCheck(location: tiles.Location, callback: (overlaps: Sprite[]) => void) {\n        control.runInParallel(() => {\n            tiles.placeOnTile(collisionSprite, location);\n            pause(1);\n            const overlaps = game.currentScene().physicsEngine.overlaps(collisionSprite);\n            callback(overlaps);\n        });\n    }\n\n    export class SpriteDetector extends sprites.ExtendableSprite {\n        \n        overlappers: Sprite[] = [];\n        cb: (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => void;\n        isActive: boolean = true;\n        framesToWait: number = 2;\n\n        constructor(loc: tiles.Location, callback: (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => void) {\n            super(assets.image`hitboxPlaceholder`, SpriteKind.Detector);\n            this.setFlag(SpriteFlag.Invisible, true);\n            tiles.placeOnTile(this, loc);\n            this.cb = callback;\n        }\n\n        update(deltaTimeMillis: number) {\n            this.framesToWait --\n            if (this.framesToWait <= 0)\n                if (this.isActive && this.cb) {\n                    console.log(\"hi\");\n                    console.log(this.overlappers);\n                    const isOnWall: boolean = tiles.tileAtLocationIsWall(this.tilemapLocation());\n                    this.cb(this, this.overlappers, isOnWall);\n                }\n            this.overlappers = [];\n        }\n    }\n\n    const tileSize = 16;\n    export class VBSprite extends sprites.ExtendableSprite {\n        sm: animation.AnimationStateMachine;\n        dir: Direction = Direction.Down;\n        onDeathCallback: () => void;\n        canPush: boolean = false;\n        pushable: boolean = false;\n        hitboxWidth: number = 16;\n        hitboxHeight: number = 16;\n\n        constructor(spriteImage: Image, kind?: number, dir?: Direction) {\n            super(spriteImage, kind);\n            this.flags ^= SpriteFlag.GhostThroughWalls;\n            this.setDimensions(this.hitboxWidth, this.hitboxHeight);\n            //this._hitbox.ox = Fx8(-4);\n            //this._hitbox.oy = Fx8(-4);\n            this.sm = new animation.AnimationStateMachine(this);\n            this._action = SpriteAction.Idle;\n\n            if(!detectionSetUp) {\n                console.log(\"setting up detection!\");\n                sprites.onOverlap(SpriteKind.Detector, SpriteKind.Player, function (sprite: Sprite, otherSprite: Sprite) {\n                    console.log(\"hello\")\n                    if (sprite instanceof VoidBattle.SpriteDetector) {\n                        const sd = sprite as VoidBattle.SpriteDetector;\n                        sd.overlappers.push(otherSprite);\n                        console.log(sd.overlappers);\n                    }\n                });\n                detectionSetUp = true;\n            }\n\n            if (dir)\n                this.setDirection(dir);\n            else\n                this.setDirection(Direction.Down);\n            \n        }\n\n        // Accounts for the offset from the hitbox, which is wider so we can\n        // detect neighboring sprites\n        draw(drawLeft: number, drawTop: number) {\n            drawLeft += (this.hitboxWidth - this.image.width) >> 1;\n            drawTop += (this.hitboxHeight - this.image.height) >> 1;\n            super.draw(drawLeft, drawTop);\n        }\n\n        setPosition(x: number, y: number): void {\n            const physics = game.currentScene().physicsEngine;\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n            // call it a second time to correct a bug where sprites that ghost \n            // through walls are still pushed out\n            physics.moveSprite(\n                this,\n                Fx8(x - this.x),\n                Fx8(y - this.y)\n            );\n        }\n\n        update(deltaTimeMillis: number) {\n            if (this.tileKindAt(TileDirection.Center, assets.image`blankTile`)) {\n                sprites.destroy(this, effects.fire, 2000);\n                this.die();\n            }\n        }\n\n        die() {\n            if (this.onDeathCallback){\n                control.runInParallel(this.onDeathCallback);\n            } \n        }\n\n        onDeath(cb: () => void) {\n            this.onDeathCallback = cb;\n        }\n\n        setDirection(dir: Direction) {\n            this.dir = dir;\n            this.sm.setDirection(dir);\n        }\n\n        getNeighboringLocation(dir: Direction): tiles.Location {\n            const loc: tiles.Location = this.tilemapLocation();\n            let neighbor: tiles.Location;\n            switch (dir) {\n                case Direction.Left:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Left);\n                    break;\n                case Direction.Up:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Top);\n                    break;\n                case Direction.Right:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Right);\n                    break;\n                case Direction.Down:\n                    neighbor = loc.getNeighboringLocation(CollisionDirection.Bottom);\n                    break;\n            }\n            return neighbor;\n        }\n        \n        // moves this sprite in a certain direction. Returns true if the move\n        // was successful\n        move(dir: Direction, turnToFaceDirection: boolean = false): boolean {\n            const neighbor = this.getNeighboringLocation(dir);\n            \n            if(turnToFaceDirection)\n                this.setDirection(dir);\n\n            if (tiles.tileAtLocationIsWall(neighbor)) {\n                scene.cameraShake(2, 200);\n                return false;\n            }\n        \n            //const overlaps: Sprite[] = getCollisionsAtLocation(neighbor);\n            const neighborSprite = this.getNeighboringSprite(neighbor);\n\n            if(neighborSprite)\n                return false;\n            \n            // gotta do it twice because there's a bug where it ignores the ghost \n            // through walls flag\n            //tiles.placeOnTile(this, neighbor);\n            tiles.placeOnTile(this, neighbor);\n            return true;\n            \n        }\n\n        getNeighboringSprite(loc: tiles.Location): Sprite {\n            const engine = game.currentScene().physicsEngine;\n            let neighbors: Sprite[];\n            // the overlaps function simply does not work :/ i hate this engine so much\n            /*\n            if(engine instanceof ArcadePhysicsEngine){\n                const ape = engine as ArcadePhysicsEngine;\n                neighbors = ape.map.neighbors(this)\n            }\n            */\n            let overlaps = game.currentScene().physicsEngine.overlaps(this);\n            for(let i = 0; i < overlaps.length; i++) {\n                const s = overlaps[i];\n                if (s.tilemapLocation().column == loc.column && s.tilemapLocation().row == loc.row)\n                    return s;\n            }\n            return null;\n        }\n\n    }\n\n    export class VBPlayerSprite extends VBSprite {\n        ctrl: controller.Controller;\n        isMyTurn: boolean = false;\n        // used when the player has already started an input but is waiting on some\n        // number of processes to complete before control can be restored or the turn\n        // can end\n        awaitingTurnCompletion: boolean = false;\n        turnEndCallback: () => void;\n        storedTile: Image;\n        // failsafe if there are shenanigans with the turns\n        controlsLocked: boolean = false;\n\n        constructor(spriteImage: Image, ctrl: controller.Controller, kind?: number, dir?: Direction){\n            super(spriteImage, kind, dir);\n            this.ctrl = ctrl;\n            this._setupButtonEvents();\n            this.canPush = true;\n            this.pushable = true;\n        }\n\n        _setupButtonEvents() {\n            // gotta do this for literally every event it seems. kill me\n            // maybe there's a better way, but if there is I haven't found one\n            this.ctrl.onButtonEvent(ControllerButton.Left, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Left, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Right, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Right, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Up, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Up, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.Down, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.Down, ControllerButtonEvent.Pressed);\n            });\n            this.ctrl.onButtonEvent(ControllerButton.A, ControllerButtonEvent.Pressed, () => {\n                this.handleButtonInput(ControllerButton.A, ControllerButtonEvent.Pressed);\n            });\n        }\n\n        startTurn() {\n            this.isMyTurn = true;\n        }\n\n        onTurnEnd(cb: () => void) {\n            this.turnEndCallback = cb;\n        }\n\n        endTurn() {\n            this.awaitingTurnCompletion = false;\n            this.isMyTurn = false;\n            if( this.turnEndCallback ) this.turnEndCallback();\n        }\n\n        handleButtonInput(button: ControllerButton, event: ControllerButtonEvent) {\n            if(this.awaitingTurnCompletion || this.controlsLocked || !this.isMyTurn) return;\n            \n            switch(button) {\n                case ControllerButton.Left:\n                    this.step(Direction.Left);\n                    break;\n                case ControllerButton.Up:\n                    this.step(Direction.Up);\n                    break;\n                case ControllerButton.Right:\n                    this.step(Direction.Right);\n                    break;\n                case ControllerButton.Down:\n                    this.step(Direction.Down);\n                    break;\n                case ControllerButton.A:\n                    this.tryPrimaryAction();\n                    break;\n            }\n            //if (moveCompleted) this.endTurn();\n        }\n\n        // step in a particular direction\n        // if there is an immovable obstacle, face it but do not move\n        step(dir: Direction) {\n            this.awaitingTurnCompletion = true;\n\n            this.setDirection(dir);\n            const neighbor = this.getNeighboringLocation(dir);\n\n            const detector = new SpriteDetector(neighbor, (detector: SpriteDetector, overlappers: Sprite[], isOnWall: boolean) => {\n                if (isOnWall)\n                    scene.cameraShake(2, 200);\n                else if (overlappers && overlappers.length > 0) {}\n                else\n                    tiles.placeOnTile(this, neighbor);\n                \n                sprites.destroy(detector);//, effects.spray, 200);\n                this.awaitingTurnCompletion = false;\n                this.endTurn();\n            });\n        }\n\n        // attempts to interact using the A button. If the action fails, return false\n        tryPrimaryAction() {\n            const neighbor: tiles.Location = this.getNeighboringLocation(this.dir);\n            \n            if (tiles.tileAtLocationIsWall(neighbor))\n                return;\n            else if (tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && this.storedTile) {\n                tiles.setTileAt(neighbor, this.storedTile);\n                this.storedTile = null;\n                this.endTurn();\n            } else if (!tiles.tileAtLocationEquals(neighbor, assets.image`blankTile`) && !this.storedTile) {\n                this.storedTile = tiles.getTileImage(neighbor);\n                tiles.setTileAt(neighbor, assets.image`blankTile`);\n                this.endTurn();\n            }\n        }\n    }\n}\n\n","tilespritemap.ts":"namespace vb {\r\n    let _map: VBMap;\r\n\r\n    interface TileSpriteMap {\r\n        [key: string]: Sprite;\r\n    }\r\n\r\n    export class Location {\r\n        constructor(public column: number, public row: number) { }\r\n\r\n        get key() {\r\n            return makeMapKey(this);\r\n        }\r\n\r\n        get tl() {\r\n            return tiles.getTileLocation(this.column, this.row);\r\n        }\r\n    }\r\n\r\n    export class VBMap {\r\n        spriteMap: TileSpriteMap;\r\n        \r\n        /** \r\n         * attempts to place the sprite at the given location\r\n         * returns true if the sprite was successfully placed\r\n         * returns false otherwise, e.g. the spot was empty\r\n         */ \r\n        placeOnTile(sprite: Sprite, location: Location): boolean {\r\n            if(this.isTileOccupied(location))\r\n                return false;\r\n            \r\n            const key = location.key;\r\n            this.spriteMap[key] = sprite;\r\n            tiles.placeOnTile(sprite, location.tl);\r\n            return true;\r\n        }\r\n\r\n        /**\r\n         * removes a sprite from a location in the internal data structure\r\n         * please call this when you destroy a sprite bro otherwise it's gonna\r\n         * think your sprite is still at this location\r\n         */\r\n        removeFromTile(location: Location) {\r\n            const oldKey = location.key;\r\n            if (this.spriteMap[oldKey] === undefined)\r\n                return;\r\n            delete this.spriteMap[oldKey];\r\n        }\r\n\r\n        /**\r\n         * attempts to move a sprite at the old location to the new location \r\n         * returns true if successfully moved\r\n         */\r\n        moveFromTile(oldLocation: Location, newLocation: Location): boolean {\r\n            const oldKey = oldLocation.key;\r\n            const newKey = newLocation.key;\r\n            if (this.spriteMap[oldKey] === undefined) {\r\n                // error: there's no sprite at this tile!\r\n                return false;\r\n            }\r\n\r\n            if (this.spriteMap[newKey] !== undefined) {\r\n                // error: there's already a sprite at this tile!\r\n                return false;\r\n            }\r\n\r\n            let success = this.placeOnTile(this.spriteMap[oldKey], newLocation);\r\n            if(!success) return false;\r\n\r\n            this.removeFromTile(oldLocation);\r\n            return true;\r\n        }\r\n\r\n\r\n        isTileOccupied(location: Location): boolean {\r\n            const s: Sprite = this.spriteMap[location.key];\r\n            if (s === undefined) return false;\r\n\r\n            // clean up if it's determined there is a destroyed sprite being stored here\r\n            if (s.flags & sprites.Flag.Destroyed) {\r\n                delete this.spriteMap[location.key];\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        getSpriteAtTile(location: Location): Sprite {\r\n            return this.spriteMap[location.key];\r\n        }\r\n\r\n        getWallAtTile(location: Location): boolean {\r\n            return tiles.tileAtLocationIsWall(location.tl);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    export function currentMap(): VBMap {\r\n        init();\r\n        return _map;\r\n    }\r\n\r\n    function init() {\r\n        if (!_map) {\r\n            _map = new VBMap();\r\n        }\r\n    }\r\n\r\n    export function makeMapKey(location: Location): string {\r\n        return location.column + \",\" + location.row;\r\n    }\r\n\r\n    export function setTilemap(tilemap: tiles.TileMapData) {\r\n        scene.setTileMapLevel(tilemap);\r\n    }\r\n}\r\n","pxt.json":"{\n    \"name\": \"Void Battle\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\",\n        \"images.g.jres\",\n        \"images.g.ts\",\n        \"voidbattle.ts\",\n        \"tilespritemap.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}}],"shares":[{"id":"17498-59796-87148-27457","timestamp":1760758829205}],"lastSaveTime":1761526803960}